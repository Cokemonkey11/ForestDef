package Selector
import RegisterEvents
import Entity
import Builder
import PlayerData
import Rocket
public constant FAT_ID = 'h022'
public constant SLIM_ID = 'h00F'
public constant FAT_SPELL_ID = 'A01Y'
public constant SLIM_SPELL_ID = 'A01X'

public class Selector extends UnitEntity
	
	static function onCast()
		let caster = GetSpellAbilityUnit()
		let id = GetSpellAbilityId()
		let data = caster.getUserData() castTo UnitEntity
		if data instanceof Selector
			if id == FAT_SPELL_ID
				pDatas[data.owner.getId()].builder = new Builder(caster.getPos3(), caster.getOwner(), FAT_ID, true)
				pDatas[data.owner.getId()].fat = true
			else if id == SLIM_SPELL_ID
				pDatas[data.owner.getId()].builder = new Builder(caster.getPos3(), caster.getOwner(), SLIM_ID, true)
				pDatas[data.owner.getId()].fat = false
			data.done = true
			if GetRandomInt(0,3) > 2
				pDatas[data.owner.getId()].builder.actor.addItem(ROCKET_ITEM_ID)
	ondestroy
		actor.remove()
	
	construct(vec3 pos, player owner)
		super(pos, 0, createUnit( owner, 'h023', pos, angle(0)))
		if GetLocalPlayer() == owner
			SelectUnit( actor, true )
			PanCameraToTimed(actor.getX(), actor.getY(), 0)

trigger t
	
init
	registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_CAST, () -> Selector.onCast())
	
