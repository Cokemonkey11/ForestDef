package PlayerData
import Wave
import PhysicsProjectile
import initlater Selector
import Builder
import ClosureTimers

public LinkedList<PlayerData> allPlayers
public PlayerData array pDatas
public boolean bigArena 

public class PlayerData
	player p
	int kills = 0
	boolean alive = true
	int deaths = 0
	Builder builder = null
	Selector select = null
	boolean fat = false
	
	construct(player p)
		this.p = p
		pDatas[p.getId()] = this
		allPlayers.add(this)
		SetPlayerTechMaxAllowed(p, 'h028', 0)

	ondestroy
		allPlayers.remove(this)
		if allPlayers.getSize() > 0
			let goldSplit = ((p.getGold() / allPlayers.getSize()) * 1.15).round()
			for pd in allPlayers
				pd.p.addGold(goldSplit)
			
			let lumberSplit = ((p.getLumber() / allPlayers.getSize()) * 1.15).round()
			for pd in allPlayers
				pd.p.addGold(lumberSplit)
		if builder != null
			builder.terminate()
		if select != null
			select.terminate()
		pDatas[p.getId()] = null
		p.setGold(0)
		p.setLumber(0)
		printTimed(p.getNameColored() + " has left! Their resources have been distributed.", 10.)

public function initPlayers()
	allPlayers = new LinkedList<PlayerData>()
	EventListener.add(EVENT_PLAYER_LEAVE, () -> destroy pDatas[GetTriggerPlayer().getId()])
	
	for int i = 0 to 7
		if players[i].getSlotState() == PLAYER_SLOT_STATE_PLAYING and players[i].getController() == MAP_CONTROL_USER
			new PlayerData(players[i])
	real gold
	if allPlayers.getSize() > 4
		bigArena = true
		initCreepStarts(true)
		gold = 1245
	else
		bigArena = false
		initCreepStarts(false)
		gold = 490
	
	let anglePerP = 360/allPlayers.getSize()
	var current = GetRandomInt(0, allPlayers.getSize()) * anglePerP + GetRandomInt(0, 4) * 90
	for p in allPlayers
		p.select = new Selector(middle.polarOffset((current).asAngleDegrees(), 285.).toVec3(), p.p)
		current += anglePerP
		p.p.addGold((gold/allPlayers.getSize()).toInt())	 
	
	createTTEx(middle.toVec3() - vec3(80,0,0), "Item Shop", 17.5)
