package ShieldBuff
import PresetBuffs

public class NormalShieldBuff extends NormalBuff
	real blockAmount
	
	construct(UnitEntity victim, real dur, int abilId, real amount)
		super(victim, dur, abilId, false)
		blockAmount = amount
		apply()
		
	override function update()
		super.update()
		if blockAmount <= 0
			done = true
		
	override function apply()
		for bff in victim.getBuffs()
			if bff.typeId == this.typeId
				let sd = bff castTo thistype
				sd.duration = duration
				sd.blockAmount += blockAmount
				done = true
				return
		victim.getBuffs().add(this)
		victim.actor.addAbility(abilId)
		applied = true
		

	override function defenseModifier()
		let dmg = getDamage()
		if dmg >= blockAmount
			modifyDamageBy(-blockAmount)
			blockAmount = 0
			done = true
		else
			modifyDamage(0)
			blockAmount = blockAmount - dmg
			
			
	override function attackModifier()

		
	