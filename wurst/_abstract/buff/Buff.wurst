package Buff
import public Entity
import initlater PresetBuffs
import LinkedListModule

public constant BUFF_ANIM_PERIOD = 0.25
public abstract class Buff
	use LinkedListModule
	UnitEntity victim

	real duration
	int abilId
	boolean running = true
	effect fx
	
	boolean done = false

	construct(UnitEntity victim, real dur, int abilId)
		this.victim = victim
		this.abilId = abilId
		duration = dur

	function update()
		if running
			duration -= BUFF_ANIM_PERIOD
		if duration <= 0.
			done = true
		
	function setEffect(string s, string attachment)
		fx = victim.actor.addEffect(s, attachment)	
		
	function refresh() 
		if not victim.actor.hasAbility(abilId)
			if fx != null
				fx.destr()
			victim.actor.addAbility(abilId)
			
	ondestroy
		if not victim.done
			victim.currentBuffs.remove(this)
			boolean isLast = true
			for bff in victim.currentBuffs
				if bff.typeId == this.typeId
					isLast = false
					break
			if isLast
				victim.actor.removeAbility(abilId)
		if fx != null
			fx.destr()
		
		
			
	abstract function apply()

	abstract function attackModifier()
	
	abstract function defenseModifier()

