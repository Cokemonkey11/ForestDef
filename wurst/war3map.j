// this script was compiled with wurst 1.8.0.0-jenkins-Wurst-1041
globals
// real bj_GAME_STARTED_THRESHOLD=0.
// integer bj_MAX_INVENTORY=0
// integer bj_MAX_PLAYERS=0
// integer bj_PLAYER_NEUTRAL_VICTIM=0
// integer bj_PLAYER_NEUTRAL_EXTRA=0
// integer bj_MAX_PLAYER_SLOTS=0
// integer bj_MAX_SKELETONS=0
// integer bj_MAX_STOCK_ITEM_SLOTS=0
// integer bj_MAX_STOCK_UNIT_SLOTS=0
// integer bj_MAX_ITEM_LEVEL=0
// real bj_TOD_DAWN=0.
// real bj_TOD_DUSK=0.
// real bj_STOCK_RESTOCK_INITIAL_DELAY=0.
// real bj_STOCK_RESTOCK_INTERVAL=0.
// integer bj_STOCK_MAX_ITERATIONS=0
// real bj_RESCUE_PING_TIME=0.
// integer bj_MAX_QUEUED_TRIGGERS=0
// real bj_QUEUED_TRIGGER_TIMEOUT=0.
// integer bj_ALLIANCE_UNALLIED=0
// integer bj_ALLIANCE_UNALLIED_VISION=0
// integer bj_ALLIANCE_ALLIED=0
// integer bj_ALLIANCE_ALLIED_VISION=0
// integer bj_ALLIANCE_ALLIED_UNITS=0
// integer bj_ALLIANCE_ALLIED_ADVUNITS=0
// integer bj_ALLIANCE_NEUTRAL=0
// integer bj_ALLIANCE_NEUTRAL_VISION=0
// integer bj_UNIT_STATE_METHOD_ABSOLUTE=0
// integer bj_UNIT_STATE_METHOD_RELATIVE=0
// integer bj_UNIT_STATE_METHOD_DEFAULTS=0
// integer bj_UNIT_STATE_METHOD_MAXIMUM=0
// real bj_CORPSE_MAX_DEATH_TIME=0.
// force bj_FORCE_ALL_PLAYERS=null
// rect bj_mapInitialPlayableArea=null
// boolean bj_slotControlReady=false
// timer bj_gameStartedTimer=null
// trigger bj_dncSoundsDay=null
// trigger bj_dncSoundsNight=null
// sound bj_dayAmbientSound=null
// sound bj_nightAmbientSound=null
// trigger bj_dncSoundsDawn=null
// trigger bj_dncSoundsDusk=null
// sound bj_dawnSound=null
// sound bj_duskSound=null
// boolean bj_useDawnDuskSounds=false
// boolean bj_dncIsDaytime=false
// sound bj_rescueSound=null
// trigger bj_stockItemPurchased=null
// timer bj_stockUpdateTimer=null
// integer bj_stockPickedItemLevel=0
// itemtype bj_stockPickedItemType=null
// trigger bj_rescueUnitBehavior=null
// boolean bj_rescueChangeColorUnit=false
// boolean bj_rescueChangeColorBldg=false
// integer bj_queuedExecTotal=0
// timer bj_queuedExecTimeoutTimer=null
// trigger bj_queuedExecTimeout=null
// integer bj_groupEnumTypeId=0
// player bj_groupEnumOwningPlayer=null
// location bj_enumDestructableCenter=null
// real bj_enumDestructableRadius=0.
// group bj_suspendDecayFleshGroup=null
// group bj_suspendDecayBoneGroup=null
// timer bj_delayedSuspendDecayTimer=null
// trigger bj_delayedSuspendDecayTrig=null
// integer bj_livingPlayerUnitsTypeId=0
// integer PLAYER_NEUTRAL_PASSIVE=0
// integer PLAYER_NEUTRAL_AGGRESSIVE=0
// playercolor PLAYER_COLOR_RED=null
// playercolor PLAYER_COLOR_BLUE=null
// playercolor PLAYER_COLOR_CYAN=null
// playercolor PLAYER_COLOR_PURPLE=null
// playercolor PLAYER_COLOR_YELLOW=null
// playercolor PLAYER_COLOR_ORANGE=null
// playercolor PLAYER_COLOR_GREEN=null
// playercolor PLAYER_COLOR_PINK=null
// playercolor PLAYER_COLOR_LIGHT_GRAY=null
// playercolor PLAYER_COLOR_LIGHT_BLUE=null
// playercolor PLAYER_COLOR_AQUA=null
// playercolor PLAYER_COLOR_BROWN=null
// playercolor PLAYER_COLOR_MAROON=null
// playercolor PLAYER_COLOR_NAVY=null
// playercolor PLAYER_COLOR_TURQUOISE=null
// playercolor PLAYER_COLOR_VIOLET=null
// playercolor PLAYER_COLOR_WHEAT=null
// playercolor PLAYER_COLOR_PEACH=null
// playercolor PLAYER_COLOR_MINT=null
// playercolor PLAYER_COLOR_LAVENDER=null
// playercolor PLAYER_COLOR_COAL=null
// playercolor PLAYER_COLOR_SNOW=null
// playercolor PLAYER_COLOR_EMERALD=null
// playercolor PLAYER_COLOR_PEANUT=null
// alliancetype ALLIANCE_PASSIVE=null
// alliancetype ALLIANCE_HELP_REQUEST=null
// alliancetype ALLIANCE_HELP_RESPONSE=null
// alliancetype ALLIANCE_SHARED_XP=null
// alliancetype ALLIANCE_SHARED_SPELLS=null
// alliancetype ALLIANCE_SHARED_VISION=null
// alliancetype ALLIANCE_SHARED_CONTROL=null
// alliancetype ALLIANCE_SHARED_ADVANCED_CONTROL=null
// alliancetype ALLIANCE_RESCUABLE=null
// alliancetype ALLIANCE_SHARED_VISION_FORCED=null
// animtype ANIM_TYPE_STAND=null
// racepreference RACE_PREF_HUMAN=null
// mapcontrol MAP_CONTROL_USER=null
// mapcontrol MAP_CONTROL_RESCUABLE=null
// gametype GAME_TYPE_MELEE=null
// gametype GAME_TYPE_FFA=null
// gametype GAME_TYPE_USE_MAP_SETTINGS=null
// gametype GAME_TYPE_ONE_ON_ONE=null
// gametype GAME_TYPE_TWO_TEAM_PLAY=null
// gametype GAME_TYPE_THREE_TEAM_PLAY=null
// gametype GAME_TYPE_FOUR_TEAM_PLAY=null
// placement MAP_PLACEMENT_TEAMS_TOGETHER=null
// startlocprio MAP_LOC_PRIO_HIGH=null
// playerslotstate PLAYER_SLOT_STATE_PLAYING=null
// fgamestate GAME_STATE_TIME_OF_DAY=null
// playerstate PLAYER_STATE_GIVES_BOUNTY=null
// unitstate UNIT_STATE_LIFE=null
// unitstate UNIT_STATE_MAX_LIFE=null
// unitstate UNIT_STATE_MANA=null
// unitstate UNIT_STATE_MAX_MANA=null
// playerevent EVENT_PLAYER_LEAVE=null
// playerevent EVENT_PLAYER_END_CINEMATIC=null
// playerunitevent EVENT_PLAYER_UNIT_RESCUED=null
// playerunitevent EVENT_PLAYER_UNIT_SELECTED=null
// playerunitevent EVENT_PLAYER_UNIT_DESELECTED=null
// playerunitevent EVENT_PLAYER_UNIT_CONSTRUCT_START=null
// playerunitevent EVENT_PLAYER_UNIT_ISSUED_ORDER=null
// playerunitevent EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER=null
// playerunitevent EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER=null
// unitevent EVENT_UNIT_DAMAGED=null
// playerevent EVENT_PLAYER_ARROW_LEFT_DOWN=null
// playerevent EVENT_PLAYER_ARROW_LEFT_UP=null
// playerevent EVENT_PLAYER_ARROW_RIGHT_DOWN=null
// playerevent EVENT_PLAYER_ARROW_RIGHT_UP=null
// playerevent EVENT_PLAYER_ARROW_DOWN_DOWN=null
// playerevent EVENT_PLAYER_ARROW_DOWN_UP=null
// playerevent EVENT_PLAYER_ARROW_UP_DOWN=null
// playerevent EVENT_PLAYER_ARROW_UP_UP=null
// playerevent EVENT_PLAYER_MOUSE_DOWN=null
// playerevent EVENT_PLAYER_MOUSE_UP=null
// playerevent EVENT_PLAYER_MOUSE_MOVE=null
// playerunitevent EVENT_PLAYER_UNIT_SELL=null
// playerunitevent EVENT_PLAYER_UNIT_SELL_ITEM=null
// playerunitevent EVENT_PLAYER_UNIT_SPELL_CAST=null
// playerunitevent EVENT_PLAYER_UNIT_SPELL_EFFECT=null
// limitop LESS_THAN=null
// limitop EQUAL=null
// limitop GREATER_THAN_OR_EQUAL=null
// unittype UNIT_TYPE_HERO=null
// unittype UNIT_TYPE_STRUCTURE=null
// unittype UNIT_TYPE_SUMMONED=null
// unittype UNIT_TYPE_MECHANICAL=null
// unittype UNIT_TYPE_ANCIENT=null
// itemtype ITEM_TYPE_PERMANENT=null
// itemtype ITEM_TYPE_CHARGED=null
// itemtype ITEM_TYPE_ARTIFACT=null
// blendmode BLEND_MODE_MODULATE=null
// blendmode BLEND_MODE_MODULATE_2X=null
// texmapflags TEXMAP_FLAG_NONE=null
// fogstate FOG_OF_WAR_VISIBLE=null
// integer CAMERA_MARGIN_LEFT=0
// integer CAMERA_MARGIN_RIGHT=0
// integer CAMERA_MARGIN_TOP=0
// integer CAMERA_MARGIN_BOTTOM=0
string array AtmosphericData_dnc
boolean array AtmosphericData_fog_state
real array AtmosphericData_fog_min
real array AtmosphericData_fog_max
real array AtmosphericData_fog_r
real array AtmosphericData_fog_g
real array AtmosphericData_fog_b
boolean array AtmosphericData_corrector_state
integer array AtmosphericData_corrector_r
integer array AtmosphericData_corrector_g
integer array AtmosphericData_corrector_b
integer array AtmosphericData_weatherId
integer Atmospheric_MODULATE_DEFAULT_R=0
integer Atmospheric_MODULATE_DEFAULT_G=0
integer Atmospheric_MODULATE_DEFAULT_B=0
blendmode Atmospheric_globalBlend=null
integer array Base64DataEncoder_encoder
integer array Base64DataReader_buffer
integer array Base64DataWriter_encoder
integer Base64_loopCounter=0
integer Base64_loopActions=0
string array Base64_CHARMAP
integer array Base64_REVERSE_CHARMAP
integer array this
integer array Base64Decoder_stringBuffer
integer array Base64Decoder_chunkList
integer array Base64Decoder_byteBuffer
integer array this_2
integer array this_3
integer array Base64Encoder_stringBuffer
integer array Base64Encoder_byteBuffer
player Basics_DUMMY_PLAYER=null
string array BigInt_charmap
integer BigInt_charmapR=0
string array BigStringElement_data
integer array BigString_data
string array BigString_currentWriteString
string array BigString_currentReadString
integer array BigString_maxLength
integer array BigString_length
integer array BitwiseInit_lbyte
integer array BitwiseInit_rbyte
integer array BitwiseInit_andData
integer array BitwiseInit_xorData
integer array BitwiseInit_powShift
integer array Box_inner
integer array ByteBuffer_buffer
integer array ByteBuffer_currentWriteBytes_b1
integer array ByteBuffer_currentWriteBytes_b2
integer array ByteBuffer_currentWriteBytes_b3
integer array ByteBuffer_currentWriteBytes_b4
integer array ByteBuffer_currentWriteByteIndex
integer array ByteBuffer_currentReadBytes_b1
integer array ByteBuffer_currentReadBytes_b2
integer array ByteBuffer_currentReadBytes_b3
integer array ByteBuffer_currentReadBytes_b4
integer array ByteBuffer_currentReadByteIndex
integer array ByteBuffer_currentWriteIndex
integer array ByteBuffer_currentReadIndex
integer array ByteBuffer_byteCount
playerevent ClosureEvents_EVENT_PLAYER_CHAT_FILTER=null
trigger ClosureEvents_unitTrig=null
trigger ClosureEvents_leaveTrig=null
trigger ClosureEvents_keyTrig=null
integer array ClosureEvents_eventidToIndex
integer ClosureEvents_eventTypeCounter=0
integer EventListener_castMap=0
integer EventListener_castMapCasters=0
integer array EventListener_generalListenersFirsts
integer array EventListener_unitListenersFirsts
integer array EventListener_eventId
integer array EventListener_next
integer array EventListener_prev
integer array OnCastListener_next
integer array OnCastListener_prev
integer array OnCastListener_abilId
unit array OnCastListener_eventUnit
group ClosureForGroups_DUMMY_GROUP=null
integer array ClosureForGroups_tempCallbacks
integer ClosureForGroups_tempCallbacksCount=0
filterfunc ClosureForGroups_filter=null
integer ClosureTimers_x=0
timer array CallbackPeriodic_t
timer array CallbackSingle_t
hashtable CodegenUtils_REGISTRIES=null
integer ColorUtil_colors=0
integer array Colors_PLAYER_COLORS_red
integer array Colors_PLAYER_COLORS_green
integer array Colors_PLAYER_COLORS_blue
string array Colors_hexs
integer Colors_decs=0
boolean array Argument_isExpr
string array Argument_value
integer array Argument_expr
integer array Arguments_context
integer array Arguments_parser
integer array Arguments_args
integer array Arguments_argCount
string array Arguments_rest
integer array this_4
integer array CommandContext_commandStack
integer array CommandContext_executor
integer array CommandContext_scriptContext
integer array CommandContext_selection
boolean array CommandContext_isHalted
integer array CommandExecutor_contextList
integer array CommandExecutor_scriptContext
integer CommandExecutor_executors=0
player array CommandExecutor_owner
integer CommandRegistry_registry=0
real DummyRecycler_ANGLE_DEGREE=0.
integer array ArrayQueue_rp
integer array ArrayQueue_size
integer array DummyRecycler_angleQueues
unit array DynamicEffectProxy_parent
effect array DynamicEffectProxy_eff
real array DynamicEffectProxy_pitch_radians
real array DynamicEffectProxy_roll_radians
integer DynamicEffectProxy_LinkedListModule_first=0
integer DynamicEffectProxy_LinkedListModule_last=0
integer DynamicEffectProxy_LinkedListModule_size=0
integer array DynamicEffectProxy_LinkedListModule_prev
integer array DynamicEffectProxy_LinkedListModule_next
integer DynamicEffectProxy_LinkedListModule_staticItr=0
integer array Iterator_current
hashtable ErrorHandling_HT=null
string ErrorHandling_lastError=null
boolean ErrorHandling_suppressErrorMessages=false
force Execute_executeForce=null
boolean array Execute_tempCallbacksSuccess
integer array Execute_tempCallbacks
integer Execute_tempCallbacksCount=0
integer array condition
integer array resetCount
integer array action
integer array FormationMovement_playerFormationModes
integer FormationMovement_frameProcessedUnits=0
integer array FormationSettings_rectWidth
real array FormationSettings_rectVertSpacing
real array FormationSettings_rectHorizSpacing
integer array this_5
unit array what
integer array settings
integer array totalCount
integer array count
integer array this_6
real array target_x
real array target_y
integer array SimpleFormationData_unitList
integer array SimpleFormationData_unitOrdersX
integer array SimpleFormationData_unitOrdersY
integer array SimpleFormationData_orderCount
real array SimpleFormationData_center_x
real array SimpleFormationData_center_y
player array SimpleFormationData_owner
timer GameTimer_gameTimer=null
real GameTimer_currentTime=0.
integer array this_7
integer array this_8
integer array this_9
integer array this_10
integer array synchronizer
integer array this_11
gamecache array GamecacheBuffer_gc
string array GamecacheBuffer_parentKey
integer array GamecacheBuffer_writeIndex
integer array GamecacheBuffer_readIndex
integer array GamecacheBuffer_bufferType
integer array GamecacheBuffer_syncCounter
integer array i
string array prefix
integer array i_2
integer array depth
string array GamecacheKeys_keys
integer GamecacheKeys_count=0
group Group_ENUM_GROUP=null
integer array HashDataProxyReader_proxyWriter
integer array HashDataProxyReader_source
integer array HashReader_data
integer array HashReader_integerReadIndex
integer array HashReader_realReadIndex
integer array HashReader_stringReadIndex
integer array HashReader_booleanReadIndex
integer array HashReader_integerCount
integer array HashReader_realCount
integer array HashReader_stringCount
integer array HashReader_booleanCount
integer array HashWriter_data
integer array HashWriter_integerWriteIndex
integer array HashWriter_realWriteIndex
integer array HashWriter_stringWriteIndex
integer array HashWriter_booleanWriteIndex
integer array HLIterator_i
integer array HLIterator_list
hashtable HashList_ht=null
hashtable HashList_occurences=null
integer array HashList_size
integer array IterableMap_keys
boolean array IterableMap__destroyed
hashtable HashSet_position=null
integer array iter
integer array iter_2
integer array this_12
integer array writer
integer array iter_3
integer array iter_4
integer array this_13
integer array HeightData_reader
integer array HeightData_size
integer array iter_5
integer array iter_6
hashtable HeightField_heightFieldOriginal=null
hashtable HeightField_heightFieldModified=null
integer InstantBuild_builders=0
unit array BuilderData_what
real array BuilderData_pos_x
real array BuilderData_pos_y
string array Integer_hexs
integer array result
integer array LLEntry_elem
integer array LLEntry_prev
integer array LLEntry_next
integer array LLIterator_dummy
integer array LLIterator_current
integer array LLIterator_parent
boolean array LLIterator_destroyOnClose
integer array LinkedList_dummy
integer array LinkedList_size
integer array LinkedList_staticItr
integer array LinkedList_staticBackItr
rect MapBounds_playableMapRect=null
rect MapBounds_boundRect=null
region MapBounds_boundRegion=null
real MapBounds_playableMin_x=0.
real MapBounds_playableMin_y=0.
real MapBounds_playableMax_x=0.
real MapBounds_playableMax_y=0.
real MapBounds_boundMin_x=0.
real MapBounds_boundMin_y=0.
real MapBounds_boundMax_x=0.
real MapBounds_boundMax_y=0.
real MapBounds_playableCenter_x=0.
real MapBounds_playableCenter_y=0.
gamecache MetadataStore_META_CACHE=null
string MetadataStore_META_INTEGER_KEY=null
string MetadataStore_META_REAL_KEY=null
string MetadataStore_META_BOOLEAN_KEY=null
string MetadataStore_META_STRING_KEY=null
string MetadataStore_META_SYNC_ROUNDS_KEY=null
string array MetadataStore_mkey
player array who
string array chatString
integer array callback
integer array this_14
integer array this_15
integer array callback_2
integer array this_16
integer array this_17
integer array this_18
integer array this_19
integer array this_20
integer array this_21
integer array this_22
integer array this_23
integer array this_24
integer array this_25
integer array this_26
integer array this_27
integer array this_28
integer array this_29
integer array this_30
integer array this_31
integer array this_32
integer array this_33
integer array this_34
integer array this_35
integer array this_36
integer array this_37
gamecache Network_DATA_CACHE=null
gamecache Network_STRING_CACHE=null
string array Network_mkey
integer array Network_dataWriter
integer array Network_dataReader
integer array Network_stringEncoder
integer array Network_gcIntBuffer
integer array Network_gcRealBuffer
integer array Network_gcBooleanBuffer
integer array Network_gcStringBuffer
integer array Network_metadataStore
player array Network_sender
integer array Network_meta_ints
integer array Network_meta_reals
integer array Network_meta_booleans
integer array Network_meta_asciiInts
integer array Network_meta_syncs
boolean array Network_metaReceived
integer array Network_counters_ints
integer array Network_counters_reals
integer array Network_counters_booleans
integer array Network_counters_asciiInts
integer array Network_counters_syncs
integer array Network_finishCallback
trigger OnUnitEnterLeave_eventTrigger=null
group OnUnitEnterLeave_preplacedUnits=null
unit array OnUnitEnterLeave_tempUnits
integer OnUnitEnterLeave_tempUnitsCount=0
integer PacketReader_currentPacket=0
integer PacketWriter_currentPacket=0
string array BaseParser_input
integer array BaseParser_pos
integer array this_38
integer array LineSplitterParser_maxWidth
string array LineSplitterParser_result
integer array this_39
integer array readerBox
integer array network
integer array reader
integer array this_40
integer array statusBox
integer array this_41
integer array callback_3
player array Persistable_owner
integer array Persistable_middleware
integer array PlayerSettings_lookup
integer array PlayerSettings_preferredPlayerColor
boolean array PlayerSettings_preferredNameColorEnabled
integer array PlayerSettings_preferredNameColor_red
integer array PlayerSettings_preferredNameColor_green
integer array PlayerSettings_preferredNameColor_blue
string array PlayerSettings_preferredName
player array Player_players
player Player_localPlayer=null
playercolor Playercolor_PLAYER_COLOR_BLACK_AGGRESSIVE=null
playercolor Playercolor_PLAYER_COLOR_UNKNOWN1=null
playercolor Playercolor_PLAYER_COLOR_UNKNOWN2=null
playercolor Playercolor_PLAYER_COLOR_BLACK_PASSIVE=null
playercolor array Playercolor_LOOKUP
group Preloader_dumg=null
unit Preloader_dum=null
real Real_REAL_MIN=0.
integer array RectTileIterator_minX
integer array RectTileIterator_minY
integer array RectTileIterator_maxX
integer array RectTileIterator_maxY
integer array RectTileIterator_currentX
integer array RectTileIterator_currentY
boolean array RectTileIterator_closed
integer array data
player array owner
integer array PointRegionInfo_specifier
real array PointRegionInfo_weight
integer array this_42
integer array RegionSpecifier_lookup
unit array RegionSpecifier_what
rect array RegionSpecifier_area
lightning array RegionSpecifier_horizTop
lightning array RegionSpecifier_horizBot
lightning array RegionSpecifier_vertLeft
lightning array RegionSpecifier_vertRight
boolean array RegionSpecifier_fog_state
real array RegionSpecifier_fog_min
real array RegionSpecifier_fog_max
real array RegionSpecifier_fog_r
real array RegionSpecifier_fog_g
real array RegionSpecifier_fog_b
boolean array RegionSpecifier_corrector_state
integer array RegionSpecifier_corrector_r
integer array RegionSpecifier_corrector_g
integer array RegionSpecifier_corrector_b
integer array RegionSpecifier_weatherId
string array RegionSpecifier_dnc
weathereffect array RegionSpecifier_weatherEffect
integer array RegionSpecifier_saveData
integer RegionSpecifier_LinkedListModule_first=0
integer RegionSpecifier_LinkedListModule_last=0
integer RegionSpecifier_LinkedListModule_size=0
integer array RegionSpecifier_LinkedListModule_next
integer RegionSpecifier_LinkedListModule_staticItr=0
integer array Iterator_current_2
trigger array RegisterEvents_t
integer RegisterEvents_onCastMap=0
integer Registry_REGISTRY_SHOPS=0
string array RegionSaveData_name
rect array RegionSaveData_area
real array RegionSaveData_origin_x
real array RegionSaveData_origin_y
real array RegionSaveData_dimensions_x
real array RegionSaveData_dimensions_y
integer array RegionSaveData_terrainData
integer array RegionSaveData_unitData
integer array RegionSaveData_atmosphericData
boolean array RegionSaveData_valid
integer Scripting_operatorArity=0
integer Scripting_operators=0
integer Scripting_reverseOperators=0
integer array BinaryExpr_operator
integer array BinaryExpr_arg1
integer array BinaryExpr_arg2
string array LiteralExpr_strValue
real array LiteralExpr_value
integer array ScriptContext_variableContext
integer array TertiaryExpr_arg1
integer array TertiaryExpr_arg2
integer array TertiaryExpr_arg3
integer array UnaryExpr_operator
integer array UnaryExpr_arg
string array VarGetExpr_varName
string array VarSetExpr_varName
integer array VarSetExpr_setExpr
integer array list
unit array Spawner_lookup
integer StaticData_TERRAIN_DNC=0
integer StaticData_UNIT_DNC=0
integer StaticData_WEATHER=0
integer StaticData_DOOD_VARIATIONS=0
integer StringEncoder_alphabetLookup=0
integer array this_43
integer array length
integer array this_44
string array value
integer array this_45
integer array length_2
integer array this_46
integer array this_47
integer array this_48
integer array this_49
integer array this_50
string array StringEncoder_currentValue
integer array StringEncoder_counter
integer array StringEncoder_inputWriter
integer array StringEncoder_inputReader
integer array StringEncoder_outputWriter
integer array StringEncoder_outputReader
string array StringUtils_c2s
integer array StringUtils_s2c
integer array StringUtils_width
unit SyncSimple_last=null
integer SyncSimple_count=0
integer array SimpleSynchronizer_reverseLookup
unit array SimpleSynchronizer_dummy
integer array SimpleSynchronizer_syncedPlayers_val
integer array SimpleSynchronizer_callback
integer SimpleSynchronizer_LinkedListModule_first=0
integer SimpleSynchronizer_LinkedListModule_last=0
integer SimpleSynchronizer_LinkedListModule_size=0
integer array SimpleSynchronizer_LinkedListModule_prev
integer array SimpleSynchronizer_LinkedListModule_next
integer array Iterator_current_3
boolean array Iterator_destroyOnClose
hashtable Table_ht=null
integer array TerrainData_tiles
integer array TerrainData_height
integer TerrainUtils_TILES_X=0
integer TerrainUtils_TILES_Y=0
integer array arguments
integer array context
integer array context_2
player array owner_2
integer array count_2
player array owner_3
integer array box
integer array Box_v
texttag array TextTagHandle_tag
integer TextTagHandle_lookup=0
integer TextTagRecycler_recycled=0
string array TerrainCell_data
integer array TerrainCell_current
integer array iter_7
integer array this_51
integer array iter_8
integer array iter_9
integer array iter_10
integer array tileMapInverted
integer array this_52
integer array TileData_tileMap
integer array TileData_cellList
integer array TileData_currentNewChar
integer array TileData_currentCell
timer array TimerUtils_freeTimers
integer TimerUtils_freeTimersCount=0
integer TimerUtils_timerData=0
integer TypeCasting_typecastdata=0
rect array area
integer array this_53
integer array MultipleUnitData_list
integer array MultipleUnitData_dictionary
unit array SingleUnitData_what_u
real array SingleUnitData_origin_x
real array SingleUnitData_origin_y
real array SingleUnitData_pos_x
real array SingleUnitData_pos_y
integer array SingleUnitData_dictionaryId
integer array SingleUnitData_flags_val
string array SingleUnitData_customHeroName
string array SingleUnitData_customName
integer array SingleUnitData_playerColorId
integer array SingleUnitData_tint_red
integer array SingleUnitData_tint_green
integer array SingleUnitData_tint_blue
integer array SingleUnitData_tint_alpha
real array SingleUnitData_size
real array SingleUnitData_flyHeight
integer array SingleUnitData_maxMana
integer array SingleUnitData_maxLife
integer array SingleUnitData_damage
real array SingleUnitData_attackCooldown
integer array UnitDictionary_currentId
integer array UnitDictionary_dictionary
trigger UnitIndexer_onIndexTrigger=null
trigger UnitIndexer_onDeindexTrigger=null
unit UnitIndexer_indexedUnit=null
unit UnitIndexer_deindexedUnit=null
unit array UnitIndex__unit
rect UnitTag_cullRect=null
real UnitTag_centerFactor=0.
real UnitTag_staticOffset=0.
texttag array TextTagUpdater_tag
unit array TextTagUpdater_parent
real array TextTagUpdater_offset_x
real array TextTagUpdater_offset_y
real array TextTagUpdater_offset_z
integer TextTagUpdater_LinkedListModule_first=0
integer TextTagUpdater_LinkedListModule_last=0
integer TextTagUpdater_LinkedListModule_size=0
integer array TextTagUpdater_LinkedListModule_prev
integer array TextTagUpdater_LinkedListModule_next
integer TextTagUpdater_LinkedListModule_staticItr=0
integer array Iterator_current_4
string array UnitInfo_name
string array UnitInfo_shortDesc
integer array UnitInfo_speech
integer array UnitInfo_parent
string array UnitSpeech_text
real array UnitSpeech_timestamp
integer array UnitTag_lookup
integer UnitTag_currentlyVisible=0
unit array UnitTag_what
integer array UnitTag_tag
boolean array UnitTag_shown
string array UnitTag_text
integer array UnitTag_info
location Vectors_tempLoc=null
integer array XorEncryptor_KEY
integer XorEncryptor_keyPos=0
integer XorEncryptor_counter=0
integer XorEncryptor_counterMax=0
integer array encoder
integer array decoder
unit array YUnitData_what
real array YUnitData_scale
real array YUnitData_lastFacingSet
real array YUnitData_lastFacing_radians
real array YUnitData_flyHeight
integer array YUnitData_tint_red
integer array YUnitData_tint_green
integer array YUnitData_tint_blue
integer array YUnitData_tint_alpha
integer array YUnitData_tag
playercolor array YUnitData_pc
boolean array YUnitData_hasCustomName
boolean array YUnitData_hasCustomHeroName
boolean array YUnitData_hasCustomMaxLife
boolean array YUnitData_hasCustomMaxMana
boolean array YUnitData_hasCustomDamage
boolean array YUnitData_hasCustomAttackCooldown
boolean array YUnitData_hasCustomFlyHeight
boolean array YUnitData_hasCustomTint
integer array YUnitData_simpleFormation
integer array YUnitData_effectProxy
integer array DataSerializable_nextFree
integer DataSerializable_firstFree=0
integer DataSerializable_maxIndex=0
integer array DataSerializable_typeId
integer array CallbackPeriodic_nextFree
integer CallbackPeriodic_firstFree=0
integer CallbackPeriodic_maxIndex=0
integer array CallbackPeriodic_typeId
integer array DataDecoder_nextFree
integer DataDecoder_firstFree=0
integer DataDecoder_maxIndex=0
integer array DataDecoder_typeId
integer array DataEncoder_nextFree
integer DataEncoder_firstFree=0
integer DataEncoder_maxIndex=0
integer array DataEncoder_typeId
integer array DataReader_nextFree
integer DataReader_firstFree=0
integer DataReader_maxIndex=0
integer array DataReader_typeId
integer array DataWriter_nextFree
integer DataWriter_firstFree=0
integer DataWriter_maxIndex=0
integer array DataWriter_typeId
integer array Base64Decoder_nextFree
integer Base64Decoder_firstFree=0
integer Base64Decoder_maxIndex=0
integer array Base64Decoder_typeId
integer array LimitedExecuteCondition_nextFree
integer LimitedExecuteCondition_firstFree=0
integer LimitedExecuteCondition_maxIndex=0
integer array LimitedExecuteCondition_typeId
integer array LimitedExecuteAction_nextFree
integer LimitedExecuteAction_firstFree=0
integer LimitedExecuteAction_maxIndex=0
integer array LimitedExecuteAction_typeId
integer array Base64Encoder_nextFree
integer Base64Encoder_firstFree=0
integer Base64Encoder_maxIndex=0
integer array Base64Encoder_typeId
integer array ForForceCallback_nextFree
integer ForForceCallback_firstFree=0
integer ForForceCallback_maxIndex=0
integer array ForForceCallback_typeId
integer array BigString_nextFree
integer BigString_firstFree=0
integer BigString_maxIndex=0
integer array BigString_typeId
integer array BigStringElement_nextFree
integer BigStringElement_firstFree=0
integer BigStringElement_maxIndex=0
integer array BigStringElement_typeId
integer array Box_nextFree
integer Box_firstFree=0
integer Box_maxIndex=0
integer array Box_typeId
integer array ByteBuffer_nextFree
integer ByteBuffer_firstFree=0
integer ByteBuffer_maxIndex=0
integer array ByteBuffer_typeId
integer array CallbackSingle_nextFree
integer CallbackSingle_firstFree=0
integer CallbackSingle_maxIndex=0
integer array CallbackSingle_typeId
integer array EventListener_nextFree
integer EventListener_firstFree=0
integer EventListener_maxIndex=0
integer array EventListener_typeId
integer OnCastListener_firstFree=0
integer array OnCastListener_typeId
integer array ForGroupCallback_nextFree
integer ForGroupCallback_firstFree=0
integer ForGroupCallback_maxIndex=0
integer array ForGroupCallback_typeId
integer array Command_nextFree
integer Command_firstFree=0
integer Command_maxIndex=0
integer array Command_typeId
integer array Argument_nextFree
integer Argument_firstFree=0
integer Argument_maxIndex=0
integer array Argument_typeId
integer array Arguments_nextFree
integer Arguments_firstFree=0
integer Arguments_maxIndex=0
integer array Arguments_typeId
integer array CommandContext_nextFree
integer CommandContext_firstFree=0
integer CommandContext_maxIndex=0
integer array CommandContext_typeId
integer array CommandExecutor_nextFree
integer CommandExecutor_firstFree=0
integer CommandExecutor_maxIndex=0
integer PlayerCallback_firstFree=0
integer PlayerCallback_maxIndex=0
integer array ArrayQueue_nextFree
integer ArrayQueue_firstFree=0
integer ArrayQueue_maxIndex=0
integer array DynamicEffectProxy_nextFree
integer DynamicEffectProxy_firstFree=0
integer DynamicEffectProxy_maxIndex=0
integer array DynamicEffectProxy_typeId
integer BackIterator_firstFree=0
integer BackIterator_maxIndex=0
integer array Iterator_nextFree
integer Iterator_firstFree=0
integer Iterator_maxIndex=0
integer BackIterator_firstFree_2=0
integer BackIterator_maxIndex_2=0
integer Iterator_firstFree_2=0
integer Iterator_maxIndex_2=0
integer array FormationSettings_nextFree
integer FormationSettings_firstFree=0
integer FormationSettings_maxIndex=0
integer array SimpleFormationData_nextFree
integer SimpleFormationData_firstFree=0
integer SimpleFormationData_maxIndex=0
integer array SimpleFormationData_typeId
integer array GamecacheBuffer_nextFree
integer GamecacheBuffer_firstFree=0
integer GamecacheBuffer_maxIndex=0
integer array GamecacheBuffer_typeId
integer array SynchronizerFunction_nextFree
integer SynchronizerFunction_firstFree=0
integer SynchronizerFunction_maxIndex=0
integer array SynchronizerFunction_typeId
integer array HLIterator_nextFree
integer HLIterator_firstFree=0
integer HLIterator_maxIndex=0
integer array HLIterator_typeId
integer array HashList_nextFree
integer HashList_firstFree=0
integer HashList_maxIndex=0
integer array HashList_typeId
integer array Table_nextFree
integer Table_firstFree=0
integer Table_maxIndex=0
integer array Table_typeId
integer array BuilderData_nextFree
integer BuilderData_firstFree=0
integer BuilderData_maxIndex=0
integer array BuilderData_typeId
integer Comparator_firstFree=0
integer Comparator_maxIndex=0
integer LLBackIterator_firstFree=0
integer array LLBackIterator_typeId
integer array LLEntry_nextFree
integer LLEntry_firstFree=0
integer LLEntry_maxIndex=0
integer array LLEntry_typeId
integer array LLIterator_nextFree
integer LLIterator_firstFree=0
integer LLIterator_maxIndex=0
integer array LLIterator_typeId
integer array LinkedList_nextFree
integer LinkedList_firstFree=0
integer LinkedList_maxIndex=0
integer array LinkedList_typeId
integer array MetadataStore_nextFree
integer MetadataStore_firstFree=0
integer MetadataStore_maxIndex=0
integer array MetadataStore_typeId
integer array Network_nextFree
integer Network_firstFree=0
integer Network_maxIndex=0
integer array Network_typeId
integer array NetworkFinishedCallback_nextFree
integer NetworkFinishedCallback_firstFree=0
integer NetworkFinishedCallback_maxIndex=0
integer array NetworkFinishedCallback_typeId
integer array NetworkWriteCallback_nextFree
integer NetworkWriteCallback_firstFree=0
integer NetworkWriteCallback_maxIndex=0
integer array NetworkWriteCallback_typeId
integer array SynchronizationCallback_nextFree
integer SynchronizationCallback_firstFree=0
integer SynchronizationCallback_maxIndex=0
integer array SynchronizationCallback_typeId
integer IdGenerator_firstFree=0
integer IdGenerator_maxIndex=0
integer array OrderStringFactory_nextFree
integer OrderStringFactory_firstFree=0
integer OrderStringFactory_maxIndex=0
integer array BaseParser_nextFree
integer BaseParser_firstFree=0
integer BaseParser_maxIndex=0
integer array BaseParser_typeId
integer array PersistableLoadCallback_nextFree
integer PersistableLoadCallback_firstFree=0
integer PersistableLoadCallback_maxIndex=0
integer array PersistableLoadCallback_typeId
integer array PersistableMiddleware_nextFree
integer PersistableMiddleware_firstFree=0
integer PersistableMiddleware_maxIndex=0
integer array PersistableMiddleware_typeId
integer PersistableSaveCallback_firstFree=0
integer array PersistableSaveCallback_typeId
integer array RectTileIterator_nextFree
integer RectTileIterator_firstFree=0
integer RectTileIterator_maxIndex=0
integer array RectTileIterator_typeId
integer array PointRegionInfo_nextFree
integer PointRegionInfo_firstFree=0
integer PointRegionInfo_maxIndex=0
integer array PointRegionInfo_typeId
integer array RegionSpecifier_nextFree
integer RegionSpecifier_firstFree=0
integer RegionSpecifier_maxIndex=0
integer BackIterator_firstFree_3=0
integer BackIterator_maxIndex_3=0
integer array Iterator_nextFree_2
integer Iterator_firstFree_3=0
integer Iterator_maxIndex_3=0
integer array Op_nextFree
integer Op_firstFree=0
integer Op_maxIndex=0
integer array Op_typeId
integer array Expr_nextFree
integer Expr_firstFree=0
integer Expr_maxIndex=0
integer array Expr_typeId
integer array ScriptContext_nextFree
integer ScriptContext_firstFree=0
integer ScriptContext_maxIndex=0
integer array StringEncoder_nextFree
integer StringEncoder_firstFree=0
integer StringEncoder_maxIndex=0
integer array StringEncoder_typeId
integer array SimpleSynchronizer_nextFree
integer SimpleSynchronizer_firstFree=0
integer SimpleSynchronizer_maxIndex=0
integer array SimpleSynchronizer_typeId
integer BackIterator_firstFree_4=0
integer BackIterator_maxIndex_4=0
integer array Iterator_nextFree_3
integer Iterator_firstFree_4=0
integer Iterator_maxIndex_4=0
integer array Iterator_typeId
integer array Box_nextFree_2
integer Box_firstFree_2=0
integer Box_maxIndex_2=0
integer array TextTagHandle_nextFree
integer TextTagHandle_firstFree=0
integer TextTagHandle_maxIndex=0
integer array TerrainCell_nextFree
integer TerrainCell_firstFree=0
integer TerrainCell_maxIndex=0
integer array TerrainCell_typeId
integer array UnitIndex_nextFree
integer UnitIndex_firstFree=0
integer UnitIndex_maxIndex=0
integer array UnitIndex_typeId
integer array TextTagUpdater_nextFree
integer TextTagUpdater_firstFree=0
integer TextTagUpdater_maxIndex=0
integer array TextTagUpdater_typeId
integer BackIterator_firstFree_5=0
integer BackIterator_maxIndex_5=0
integer array Iterator_nextFree_4
integer Iterator_firstFree_5=0
integer Iterator_maxIndex_5=0
integer array UnitInfo_nextFree
integer UnitInfo_firstFree=0
integer UnitInfo_maxIndex=0
integer array UnitSpeech_nextFree
integer UnitSpeech_firstFree=0
integer UnitSpeech_maxIndex=0
integer array UnitSpeech_typeId
integer array UnitTag_nextFree
integer UnitTag_firstFree=0
integer UnitTag_maxIndex=0
integer array UnitTag_typeId
integer array YUnitData_nextFree
integer YUnitData_firstFree=0
integer YUnitData_maxIndex=0
integer array YUnitData_typeId
integer char_return_c=0
integer bitset_add_return_val=0
integer playercolor_toColor_return_red=0
integer playercolor_toColor_return_green=0
integer playercolor_toColor_return_blue=0
integer Niya_parse_return_expr=0
string Niya_parse_return_error=null
real vec3_toQuat_return_x=0.
real vec3_toQuat_return_y=0.
real vec3_toQuat_return_z=0.
real vec3_toQuat_return_w=0.
real quat_toEuler_return_x=0.
real quat_toEuler_return_y=0.
real quat_toEuler_return_z=0.
real vec2_rotate_return_x=0.
real vec2_rotate_return_y=0.
real FormationSettings_getPos_return_x=0.
real FormationSettings_getPos_return_y=0.
integer tile_return_id=0
integer player_getRealColor_return_red=0
integer player_getRealColor_return_green=0
integer player_getRealColor_return_blue=0
string parseWord_return_s=null
integer parseWord_return_last=0
integer createExpr_return_expr=0
string createExpr_return_error=null
integer parseSubExpr_return_expr=0
integer parseSubExpr_return_last=0
string parseSubExpr_return_error=null
integer tile_return_id_2=0
real yunit_getFacing_return_radians=0.
real UnitTag_calculateOffset_return_x=0.
real UnitTag_calculateOffset_return_y=0.
real UnitTag_calculateOffset_return_z=0.
code ref_function_init_Abilities=null
code ref_function_init_AbilityIds=null
code ref_function_init_Real=null
code ref_function_init_Integer=null
code ref_function_init_Angle=null
code ref_function_init_String=null
code ref_function_init_Vectors=null
code ref_function_init_Maths=null
code ref_function_init_Player=null
code ref_function_init_Printing=null
code ref_function_init_Basics=null
code ref_function_init_GameTimer=null
code ref_function_init_MagicFunctions=null
code ref_function_init_ErrorHandling=null
code ref_function_init_Matrices=null
code ref_function_init_Quaternion=null
code ref_function_init_Table=null
code ref_function_init_Playercolor=null
code ref_function_init_Colors=null
code ref_function_init_Group=null
code ref_function_init_Lightning=null
code ref_function_init_WeatherEffects=null
code ref_function_init_TypeCasting=null
code ref_function_init_BitwiseInit=null
code ref_function_init_TargetsAllowed=null
code ref_function_init_Buildings=null
code ref_function_init_Doodads=null
code ref_function_init_Icons=null
code ref_function_init_Objects=null
code ref_function_init_Sounds=null
code ref_function_init_Soundsets=null
code ref_function_init_Textures=null
code ref_function_init_UI=null
code ref_function_init_Units=null
code ref_function_init_UnitIds=null
code ref_function_init_HashList=null
code ref_function_init_EventHelper=null
code ref_function_init_RegisterEvents=null
code ref_function_init_TimerUtils=null
code ref_function_init_ClosureTimers=null
code ref_function_init_MapBounds=null
code ref_function_init_DummyRecycler=null
code ref_function_init_ClosureForGroups=null
code ref_function_init_LinkedList=null
code ref_function_init_StringUtils=null
code ref_function_init_ObjectIds=null
code ref_function_init_Preloader=null
code ref_function_init_ObjectIdGenerator=null
code ref_function_init_OnUnitEnterLeave=null
code ref_function_init_UnitIndexer=null
code ref_function_init_ClosureEvents=null
code ref_function_init_Execute=null
code ref_function_init_SyncSimple=null
code ref_function_init_BigString=null
code ref_function_init_SafetyChecks=null
code ref_function_init_NetworkConfig=null
code ref_function_init_GamecacheKeys=null
code ref_function_init_Metadata=null
code ref_function_init_StringEncoder=null
code ref_function_init_Network=null
code ref_function_init_Orders=null
code ref_function_init_PacketIO=null
code ref_function_init_Base64=null
code ref_function_init_TerrainUtils=null
code ref_function_init_ChannelAbilityPreset=null
code ref_function_init_HashSet=null
code ref_function_init_ColorUtil=null
code ref_function_init_OrderFactory=null
code ref_function_init_TextTagUtil=null
code ref_function_init_YPrinting=null
code ref_function_init_XorEncryptor=null
code ref_function_init_StaticData=null
code ref_function_init_DestructableUtil=null
code ref_function_init_RegionSpecifier=null
code ref_function_init_Atmospheric=null
code ref_function_init_CodegenUtils=null
code ref_function_init_AutoGenerated=null
code ref_function_init_BigInt=null
code ref_function_init_BigInt2=null
code ref_function_init_Scripting=null
code ref_function_init_Spawner=null
code ref_function_init_Registry=null
code ref_function_init_Permissions=null
code ref_function_init_PlayerSettings=null
code ref_function_init_UnitTag=null
code ref_function_init_Config=null
code ref_function_init_EffectProxy=null
code ref_function_init_YUnit=null
code ref_function_init_Command=null
code ref_function_init_FormationMovement=null
code ref_function_init_HeightField=null
code ref_function_init_HeightTools=null
code ref_function_init_InstantBuild=null
code ref_function_init_TileData=null
code ref_function_init_UnitData=null
code ref_function_init_MiscCommands=null
code ref_function_init_MiscInit=null
code ref_function_init_PlayerSettingsCommands=null
code ref_function_init_RegionCommands=null
code ref_function_init_TestCommands=null
code ref_function_init_UnitPropertyCommands=null
code ref_function_EventListener_generalEventCallback=null
code ref_function_ClosureEvents_closure_impl=null
code ref_function_ClosureEvents_closure_impl_2=null
code ref_function_ClosureEvents_closure_impl_3=null
code ref_function_ClosureEvents_closure_impl_4=null
code ref_function_ClosureEvents_closure_impl_5=null
code ref_function_ClosureEvents_closure_impl_6=null
code ref_function_ClosureForGroups_closure_impl=null
code ref_function_CallbackPeriodic_staticCallback=null
code ref_function_CallbackSingle_closure_impl=null
code ref_function_executeCurrentCallback=null
code ref_function_GameTimer_closure_impl=null
code ref_function_MiscInit_closure_impl=null
code ref_function_OnUnitEnterLeave_closure_impl=null
code ref_function_OnUnitEnterLeave_closure_impl_2=null
code ref_function_OnUnitEnterLeave_closure_impl_3=null
code ref_function_RegisterEvents_closure_impl=null
code ref_function_SyncSimple_closure_impl=null
code ref_function_UnitIndexer_closure_impl=null
code ref_function_UnitIndexer_closure_impl_2=null
code ref_function_YUnit_closure_impl=null
code ref_function_YUnit_closure_impl_2=null
real tempReturn_real=0.
unit createDummytempReturn=null
unit getDummytempReturn=null
texttag TextTagRecycler_getTextTagtempReturn=null
timer getTimertempReturn=null
endglobals
function quat_toEuler takes real this_x, real this_y, real this_z, real this_w returns real
	local real pole = this_x * this_z + this_y * this_w
	local real yaw
	local real pitch
	local real roll
	local real cos
	local real sin
	if pole > 0.499 then
		set cos = 1. - 2. * this_x * this_x - 2. * this_z * this_z
		set sin = 2. * this_y * this_z + 2. * this_x * this_w
		set yaw = Atan2(sin, cos)
		set pitch = 1.570796371
		set roll = 0.
	elseif pole < ( - 0.499) then
		set cos = 1. - 2. * this_x * this_x - 2. * this_z * this_z
		set sin = 2. * this_y * this_z + 2. * this_x * this_w
		set yaw = Atan2(sin, cos)
		set pitch =  - 1.570796371
		set roll = 0.
	else
		set cos = 1. - 2. * this_x * this_x - 2. * this_y * this_y
		set sin =  - (2. * this_y * this_z - 2. * this_x * this_w)
		set yaw = Atan2(sin, cos)
		set pitch = Asin(2. * pole)
		set cos = 1. - 2. * this_y * this_y - 2. * this_z * this_z
		set sin =  - (2. * this_x * this_y - 2. * this_z * this_w)
		set roll = Atan2(sin, cos)
	endif
	set quat_toEuler_return_x = yaw
	set quat_toEuler_return_y = pitch
	set quat_toEuler_return_z = roll
	return quat_toEuler_return_x
endfunction

function vec3_toQuat takes real this_x, real this_y, real this_z, real angl_radians returns real
	local real len = SquareRoot(this_x * this_x + this_y * this_y + this_z * this_z)
	local real x = 0.
	local real y = 0.
	local real z = 0.
	local real sin
	if len != 0.0 then
		set x = this_x / len
		set y = this_y / len
		set z = this_z / len
	endif
	set sin = Sin(angl_radians / 2)
	set vec3_toQuat_return_x = x * sin
	set vec3_toQuat_return_y = y * sin
	set vec3_toQuat_return_z = z * sin
	set vec3_toQuat_return_w = Cos(angl_radians / 2)
	return vec3_toQuat_return_x
endfunction

function DynamicEffectProxy_update takes integer this_54 returns nothing
	local effect this_55
	local unit this_56
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	local real tuple_temp_4
	local real tuple_temp_5
	local real tuple_temp_6
	local real tuple_temp_7
	local real tuple_temp_8
	local real tuple_temp_9
	local real tuple_temp_10
	local real tuple_temp_11
	local real tuple_temp_12
	local real tuple_temp_13
	local real tuple_temp_14
	local real tuple_temp_15
	local real tuple_temp_16
	if DynamicEffectProxy_parent[this_54] != null then
		set this_55 = DynamicEffectProxy_eff[this_54]
		set this_56 = DynamicEffectProxy_parent[this_54]
		call BlzSetSpecialEffectPosition(this_55, GetUnitX(this_56), GetUnitY(this_56), BlzGetLocalSpecialEffectZ(this_55))
		set tuple_temp = vec3_toQuat(0., 0., 1., GetUnitFacing(DynamicEffectProxy_parent[this_54]) * 0.017453293)
		set tuple_temp_2 = vec3_toQuat_return_y
		set tuple_temp_3 = vec3_toQuat_return_z
		set tuple_temp_4 = vec3_toQuat_return_w
		set tuple_temp_5 = vec3_toQuat(0., 0., 1., DynamicEffectProxy_roll_radians[this_54])
		set tuple_temp_6 = vec3_toQuat_return_y
		set tuple_temp_7 = vec3_toQuat_return_z
		set tuple_temp_8 = vec3_toQuat_return_w
		set tuple_temp_9 = vec3_toQuat(0., 1., 0., DynamicEffectProxy_pitch_radians[this_54])
		set tuple_temp_10 = vec3_toQuat_return_y
		set tuple_temp_11 = vec3_toQuat_return_z
		set tuple_temp_12 = vec3_toQuat_return_w
		set tuple_temp_13 = tuple_temp_9 * tuple_temp_8 + tuple_temp_10 * tuple_temp_7 - tuple_temp_11 * tuple_temp_6 + tuple_temp_12 * tuple_temp_5
		set tuple_temp_14 = ( - (tuple_temp_9 * tuple_temp_7)) + tuple_temp_10 * tuple_temp_8 + tuple_temp_11 * tuple_temp_5 + tuple_temp_12 * tuple_temp_6
		set tuple_temp_15 = tuple_temp_9 * tuple_temp_6 - tuple_temp_10 * tuple_temp_5 + tuple_temp_11 * tuple_temp_8 + tuple_temp_12 * tuple_temp_7
		set tuple_temp_16 = ( - (tuple_temp_9 * tuple_temp_5)) - tuple_temp_10 * tuple_temp_6 - tuple_temp_11 * tuple_temp_7 + tuple_temp_12 * tuple_temp_8
		call BlzSetSpecialEffectOrientation(DynamicEffectProxy_eff[this_54], quat_toEuler(tuple_temp * tuple_temp_16 + tuple_temp_2 * tuple_temp_15 - tuple_temp_3 * tuple_temp_14 + tuple_temp_4 * tuple_temp_13, ( - (tuple_temp * tuple_temp_15)) + tuple_temp_2 * tuple_temp_16 + tuple_temp_3 * tuple_temp_13 + tuple_temp_4 * tuple_temp_14, tuple_temp * tuple_temp_14 - tuple_temp_2 * tuple_temp_13 + tuple_temp_3 * tuple_temp_16 + tuple_temp_4 * tuple_temp_15, ( - (tuple_temp * tuple_temp_13)) - tuple_temp_2 * tuple_temp_14 - tuple_temp_3 * tuple_temp_15 + tuple_temp_4 * tuple_temp_16), quat_toEuler_return_y, quat_toEuler_return_z)
	endif
	set this_55 = null
	set this_56 = null
endfunction

function DynamicEffectProxy_updateAll takes nothing returns nothing
	local integer receiver = DynamicEffectProxy_LinkedListModule_staticItr
	local integer iter_11
	local integer res
	set Iterator_current[receiver] = DynamicEffectProxy_LinkedListModule_first
	set iter_11 = receiver
	loop
		exitwhen Iterator_current[iter_11] == 0
		set res = Iterator_current[iter_11]
		set Iterator_current[iter_11] = DynamicEffectProxy_LinkedListModule_next[Iterator_current[iter_11]]
		call DynamicEffectProxy_update(res)
	endloop
endfunction

function HashSet_clear takes integer this_54 returns nothing
	call FlushChildHashtable(HashList_ht, this_54)
	call FlushChildHashtable(HashList_occurences, this_54)
	set HashList_size[this_54] = 0
	call FlushChildHashtable(HashSet_position, this_54)
endfunction

function TextTagUpdater_updatePosition takes integer this_54 returns nothing
	local texttag this_55
	local unit this_56
	local real temp
	local real tuple_temp
	if TextTagUpdater_tag[this_54] != null then
		set this_55 = TextTagUpdater_tag[this_54]
		set this_56 = TextTagUpdater_parent[this_54]
		set temp = GetUnitX(this_56)
		set tuple_temp = GetUnitY(this_56) + TextTagUpdater_offset_y[this_54]
		call SetTextTagPos(this_55, temp + TextTagUpdater_offset_x[this_54], tuple_temp, 0. + TextTagUpdater_offset_z[this_54])
	endif
	set this_55 = null
	set this_56 = null
endfunction

function TextTagUpdater_updatePositions takes nothing returns nothing
	local integer receiver = TextTagUpdater_LinkedListModule_staticItr
	local integer from
	local integer res
	set Iterator_current_4[receiver] = TextTagUpdater_LinkedListModule_first
	set from = receiver
	loop
		exitwhen Iterator_current_4[from] == 0
		set res = Iterator_current_4[from]
		set Iterator_current_4[from] = TextTagUpdater_LinkedListModule_next[Iterator_current_4[from]]
		call TextTagUpdater_updatePosition(res)
	endloop
endfunction

function Loglevel_getTag takes integer this_54 returns string
	if this_54 == 0 then
		return "|cffADADADtrace|r"
	elseif this_54 == 1 then
		return "|cff2685DCdebug|r"
	elseif this_54 == 2 then
		return "|cffFFCC00info|r"
	elseif this_54 == 3 then
		return "|cffF47E3Ewarning|r"
	elseif this_54 == 4 then
		return "|cffFB2700error|r"
	endif
	return "?"
endfunction

function error takes string msg returns nothing
	local integer hash
	if  not ErrorHandling_suppressErrorMessages then
		set hash = StringHash(msg)
		if HaveSavedInteger(ErrorHandling_HT, -1, hash) then
			if LoadInteger(ErrorHandling_HT, -1, hash) + 60 < GameTimer_currentTime then
				call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., Loglevel_getTag(4) + " - " + msg + "")
				call SaveInteger(ErrorHandling_HT, -1, hash, R2I(GameTimer_currentTime))
				call SaveBoolean(ErrorHandling_HT, -1, hash, false)
			elseif HaveSavedBoolean(ErrorHandling_HT, -1, hash) then
				if  not LoadBoolean(ErrorHandling_HT, -1, hash) then
					call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., Loglevel_getTag(4) + " - " + "|cffFF3A29Excessive repeating errors are being omitted")
					call SaveBoolean(ErrorHandling_HT, -1, hash, true)
				endif
			else
				call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., Loglevel_getTag(4) + " - " + "|cffFF3A29Excessive repeating errors are being omitted")
				call SaveBoolean(ErrorHandling_HT, -1, hash, true)
			endif
		else
			call SaveInteger(ErrorHandling_HT, -1, hash, R2I(GameTimer_currentTime))
			call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., Loglevel_getTag(4) + " - " + "Message: " + msg + "")
		endif
	endif
	set ErrorHandling_lastError = msg
	call I2S(1 / 0)
endfunction

function LLIterator_remove takes integer this_54 returns integer
	local integer removed
	local integer this_55
	local integer entry
	if LLIterator_current[this_54] != LLIterator_dummy[this_54] then
		set this_55 = LLIterator_parent[this_54]
		set entry = LLIterator_current[this_54]
		set LLEntry_next[LLEntry_prev[entry]] = LLEntry_next[entry]
		set LLEntry_prev[LLEntry_next[entry]] = LLEntry_prev[entry]
		if LLEntry_typeId[entry] == 0 then
			call error("Double free: object of type LLEntry")
		else
			set LLEntry_nextFree[LLEntry_firstFree] = entry
			set LLEntry_firstFree = LLEntry_firstFree + 1
			set LLEntry_typeId[entry] = 0
		endif
		set LinkedList_size[this_55] = LinkedList_size[this_55] - 1
		set removed = LLEntry_elem[LLIterator_current[this_54]]
		set LLIterator_current[this_54] = LLEntry_prev[LLIterator_current[this_54]]
		return removed
	endif
	return 0
endfunction

function new_LLIterator takes integer parent, boolean destroyOnClose returns integer
	local integer this_54
	if LLIterator_firstFree == 0 then
		if LLIterator_maxIndex < 32768 then
			set LLIterator_maxIndex = LLIterator_maxIndex + 1
			set this_54 = LLIterator_maxIndex
			set LLIterator_typeId[this_54] = 841
		else
			call error("Out of memory: Could not create LLIterator.")
			set this_54 = 0
		endif
	else
		set LLIterator_firstFree = LLIterator_firstFree - 1
		set this_54 = LLIterator_nextFree[LLIterator_firstFree]
		set LLIterator_typeId[this_54] = 841
	endif
	set LLIterator_destroyOnClose[this_54] = true
	set LLIterator_parent[this_54] = parent
	set LLIterator_dummy[this_54] = LinkedList_dummy[LLIterator_parent[this_54]]
	set LLIterator_current[this_54] = LLIterator_dummy[this_54]
	set LLIterator_destroyOnClose[this_54] = destroyOnClose
	return this_54
endfunction

function LinkedList_staticItr_2 takes integer this_54 returns integer
	local integer this_55
	if LinkedList_staticItr[this_54] == 0 then
		set LinkedList_staticItr[this_54] = new_LLIterator(this_54, false)
	endif
	set this_55 = LinkedList_staticItr[this_54]
	set LLIterator_dummy[this_55] = LinkedList_dummy[LLIterator_parent[this_55]]
	set LLIterator_current[this_55] = LLIterator_dummy[this_55]
	return LinkedList_staticItr[this_54]
endfunction

function TextTagHandle_fromTextTag takes texttag tag returns integer
	return LoadInteger(Table_ht, TextTagHandle_lookup, GetHandleId(tag))
endfunction

function new_LLEntry takes integer elem, integer prev, integer next returns integer
	local integer this_54
	if LLEntry_firstFree == 0 then
		if LLEntry_maxIndex < 32768 then
			set LLEntry_maxIndex = LLEntry_maxIndex + 1
			set this_54 = LLEntry_maxIndex
			set LLEntry_typeId[this_54] = 840
		else
			call error("Out of memory: Could not create LLEntry.")
			set this_54 = 0
		endif
	else
		set LLEntry_firstFree = LLEntry_firstFree - 1
		set this_54 = LLEntry_nextFree[LLEntry_firstFree]
		set LLEntry_typeId[this_54] = 840
	endif
	set LLEntry_elem[this_54] = elem
	set LLEntry_prev[this_54] = prev
	set LLEntry_next[this_54] = next
	return this_54
endfunction

function TextTagRecycler_recycleTextTag takes texttag tag returns nothing
	local integer this_54
	local integer entry
	call SetTextTagVisibility(tag, false)
	set this_54 = TextTagRecycler_recycled
	set entry = new_LLEntry(TextTagHandle_fromTextTag(tag), LLEntry_prev[LinkedList_dummy[this_54]], LinkedList_dummy[this_54])
	set LLEntry_next[LLEntry_prev[LinkedList_dummy[this_54]]] = entry
	set LLEntry_prev[LinkedList_dummy[this_54]] = entry
	set LinkedList_size[this_54] = LinkedList_size[this_54] + 1
endfunction

function TextTagUpdater_onDestroy takes integer this_54 returns nothing
	if TextTagUpdater_tag[this_54] != null then
		call TextTagRecycler_recycleTextTag(TextTagUpdater_tag[this_54])
	endif
	set TextTagUpdater_LinkedListModule_size = TextTagUpdater_LinkedListModule_size - 1
	if this_54 != TextTagUpdater_LinkedListModule_first then
		set TextTagUpdater_LinkedListModule_next[TextTagUpdater_LinkedListModule_prev[this_54]] = TextTagUpdater_LinkedListModule_next[this_54]
	else
		set TextTagUpdater_LinkedListModule_first = TextTagUpdater_LinkedListModule_next[this_54]
	endif
	if this_54 != TextTagUpdater_LinkedListModule_last then
		set TextTagUpdater_LinkedListModule_prev[TextTagUpdater_LinkedListModule_next[this_54]] = TextTagUpdater_LinkedListModule_prev[this_54]
	else
		set TextTagUpdater_LinkedListModule_last = TextTagUpdater_LinkedListModule_prev[this_54]
	endif
endfunction

function popCallback takes nothing returns nothing
	local integer this_54
	call GroupClear(ClosureForGroups_DUMMY_GROUP)
	set ClosureForGroups_tempCallbacksCount = ClosureForGroups_tempCallbacksCount - 1
	set this_54 = ClosureForGroups_tempCallbacks[ClosureForGroups_tempCallbacksCount]
	if ForGroupCallback_typeId[this_54] == 0 then
		call error("Double free: object of type ForGroupCallback")
	else
		set ForGroupCallback_nextFree[ForGroupCallback_firstFree] = this_54
		set ForGroupCallback_firstFree = ForGroupCallback_firstFree + 1
		set ForGroupCallback_typeId[this_54] = 0
	endif
endfunction

function vec2_isInRect takes real this_x, real this_y, rect r returns boolean
	local boolean andLeft
	local boolean andLeft_2
	local boolean andLeft_3
	if this_x > GetRectMinX(r) then
		set andLeft = this_x < GetRectMaxX(r)
	else
		set andLeft = false
	endif
	if andLeft then
		set andLeft_2 = this_y > GetRectMinY(r)
	else
		set andLeft_2 = false
	endif
	if andLeft_2 then
		set andLeft_3 = this_y < GetRectMaxY(r)
	else
		set andLeft_3 = false
	endif
	return andLeft_3
endfunction

function UnitTag_controlVisibility takes nothing returns nothing
	local integer iter_11
	local rect temp
	local integer LinkedList_LLIterator_next_result
	local unit this_54
	local integer this_55
	local integer this_56
	call MoveRectTo(UnitTag_cullRect, GetCameraTargetPositionX(), GetCameraTargetPositionY())
	set iter_11 = LinkedList_staticItr_2(UnitTag_currentlyVisible)
	loop
		exitwhen LLEntry_next[LLIterator_current[iter_11]] == LLIterator_dummy[iter_11]
		set LLIterator_current[iter_11] = LLEntry_next[LLIterator_current[iter_11]]
		set LinkedList_LLIterator_next_result = LLEntry_elem[LLIterator_current[iter_11]]
		set this_54 = UnitTag_what[LinkedList_LLIterator_next_result]
		if  not vec2_isInRect(GetUnitX(this_54), GetUnitY(this_54), UnitTag_cullRect) then
			if UnitTag_tag[LinkedList_LLIterator_next_result] != 0 then
				set this_55 = UnitTag_tag[LinkedList_LLIterator_next_result]
				call TextTagUpdater_onDestroy(this_55)
				if TextTagUpdater_typeId[this_55] == 0 then
					call error("Double free: object of type TextTagUpdater")
				else
					set TextTagUpdater_nextFree[TextTagUpdater_firstFree] = this_55
					set TextTagUpdater_firstFree = TextTagUpdater_firstFree + 1
					set TextTagUpdater_typeId[this_55] = 0
				endif
				set UnitTag_tag[LinkedList_LLIterator_next_result] = 0
			endif
			call LLIterator_remove(iter_11)
		endif
	endloop
	set temp = UnitTag_cullRect
	if ForGroupCallback_firstFree == 0 then
		if ForGroupCallback_maxIndex < 32768 then
			set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
			set this_56 = ForGroupCallback_maxIndex
			set ForGroupCallback_typeId[this_56] = 818
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
		set this_56 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
		set ForGroupCallback_typeId[this_56] = 818
	endif
	set ClosureForGroups_tempCallbacks[ClosureForGroups_tempCallbacksCount] = this_56
	set ClosureForGroups_tempCallbacksCount = ClosureForGroups_tempCallbacksCount + 1
	call GroupEnumUnitsInRect(ClosureForGroups_DUMMY_GROUP, temp, ClosureForGroups_filter)
	call popCallback()
	set temp = null
	set this_54 = null
endfunction

function LinkedList_onDestroy takes integer this_54 returns nothing
	local integer current
	local integer this_55
	local integer this_56
	local integer this_57
	local integer this_58
	if LinkedList_staticItr[this_54] != 0 then
		set this_55 = LinkedList_staticItr[this_54]
		if LLIterator_typeId[this_55] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = this_55
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[this_55] = 0
		endif
	endif
	if LinkedList_staticBackItr[this_54] != 0 then
		set this_56 = LinkedList_staticBackItr[this_54]
		if LLBackIterator_typeId[this_56] == 0 then
			call error("Double free: object of type LLBackIterator")
		else
			set LLBackIterator_firstFree = LLBackIterator_firstFree + 1
			set LLBackIterator_typeId[this_56] = 0
		endif
	endif
	set current = LLEntry_next[LinkedList_dummy[this_54]]
	loop
		exitwhen current == LinkedList_dummy[this_54]
		set current = LLEntry_next[current]
		set this_57 = LLEntry_prev[current]
		if LLEntry_typeId[this_57] == 0 then
			call error("Double free: object of type LLEntry")
		else
			set LLEntry_nextFree[LLEntry_firstFree] = this_57
			set LLEntry_firstFree = LLEntry_firstFree + 1
			set LLEntry_typeId[this_57] = 0
		endif
	endloop
	set this_58 = LinkedList_dummy[this_54]
	if LLEntry_typeId[this_58] == 0 then
		call error("Double free: object of type LLEntry")
	else
		set LLEntry_nextFree[LLEntry_firstFree] = this_58
		set LLEntry_firstFree = LLEntry_firstFree + 1
		set LLEntry_typeId[this_58] = 0
	endif
endfunction

function new_LLIterator_2 takes integer parent returns integer
	local integer this_54
	if LLIterator_firstFree == 0 then
		if LLIterator_maxIndex < 32768 then
			set LLIterator_maxIndex = LLIterator_maxIndex + 1
			set this_54 = LLIterator_maxIndex
			set LLIterator_typeId[this_54] = 841
		else
			call error("Out of memory: Could not create LLIterator.")
			set this_54 = 0
		endif
	else
		set LLIterator_firstFree = LLIterator_firstFree - 1
		set this_54 = LLIterator_nextFree[LLIterator_firstFree]
		set LLIterator_typeId[this_54] = 841
	endif
	set LLIterator_destroyOnClose[this_54] = true
	set LLIterator_parent[this_54] = parent
	set LLIterator_dummy[this_54] = LinkedList_dummy[LLIterator_parent[this_54]]
	set LLIterator_current[this_54] = LLIterator_dummy[this_54]
	return this_54
endfunction

function updateColorCorrection takes integer regions returns nothing
	local integer r
	local integer g
	local integer b
	local real totalWeight
	local integer iterator
	local integer info
	local integer iterator_2
	local integer info_2
	local real cond_result
	local integer RegionSpecifier_PointRegionInfo_specifier_result
	local real this_54
	local integer cond_result_2
	local real this_55
	local integer cond_result_3
	local real this_56
	local integer cond_result_4
	local integer tuple_temp
	local integer tuple_temp_2
	call SetCineFilterTexture("ReplaceableTextures\\CameraMasks\\White_mask.blp")
	call SetCineFilterDuration(0.)
	call SetCineFilterStartUV(0., 0., 1., 1.)
	call SetCineFilterEndUV(0., 0., 1., 1.)
	call SetCineFilterTexMapFlags(TEXMAP_FLAG_NONE)
	set r = Atmospheric_MODULATE_DEFAULT_R
	set g = Atmospheric_MODULATE_DEFAULT_G
	set b = Atmospheric_MODULATE_DEFAULT_B
	set totalWeight = 0.
	set iterator = new_LLIterator_2(regions)
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
		set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
		set info = LLEntry_elem[LLIterator_current[iterator]]
		if RegionSpecifier_fog_state[PointRegionInfo_specifier[info]] then
			set totalWeight = totalWeight + PointRegionInfo_weight[info]
		endif
	endloop
	if LLIterator_destroyOnClose[iterator] then
		if LLIterator_typeId[iterator] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator] = 0
		endif
	endif
	set iterator_2 = new_LLIterator_2(regions)
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator_2]] == LLIterator_dummy[iterator_2]
		set LLIterator_current[iterator_2] = LLEntry_next[LLIterator_current[iterator_2]]
		set info_2 = LLEntry_elem[LLIterator_current[iterator_2]]
		if RegionSpecifier_corrector_state[PointRegionInfo_specifier[info_2]] then
			set RegionSpecifier_PointRegionInfo_specifier_result = PointRegionInfo_specifier[info_2]
			if totalWeight > 1. then
				set cond_result = PointRegionInfo_weight[info_2] / totalWeight
			else
				set cond_result = PointRegionInfo_weight[info_2]
			endif
			set tuple_temp = RegionSpecifier_corrector_g[RegionSpecifier_PointRegionInfo_specifier_result]
			set tuple_temp_2 = RegionSpecifier_corrector_b[RegionSpecifier_PointRegionInfo_specifier_result]
			set this_54 = r * (1. - cond_result) + RegionSpecifier_corrector_r[RegionSpecifier_PointRegionInfo_specifier_result] * cond_result
			if this_54 > 0. then
				set cond_result_2 = R2I(this_54 + .5)
			else
				set cond_result_2 = R2I(this_54 - .5)
			endif
			set r = cond_result_2
			set this_55 = g * (1. - cond_result) + tuple_temp * cond_result
			if this_55 > 0. then
				set cond_result_3 = R2I(this_55 + .5)
			else
				set cond_result_3 = R2I(this_55 - .5)
			endif
			set g = cond_result_3
			set this_56 = b * (1. - cond_result) + tuple_temp_2 * cond_result
			if this_56 > 0. then
				set cond_result_4 = R2I(this_56 + .5)
			else
				set cond_result_4 = R2I(this_56 - .5)
			endif
			set b = cond_result_4
		endif
	endloop
	if LLIterator_destroyOnClose[iterator_2] then
		if LLIterator_typeId[iterator_2] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator_2
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator_2] = 0
		endif
	endif
	call SetCineFilterBlendMode(Atmospheric_globalBlend)
	call SetCineFilterStartColor(r, g, b, 255)
	call SetCineFilterEndColor(r, g, b, 255)
	call DisplayCineFilter(true)
endfunction

function updateFog takes integer regions returns nothing
	local real fogStart = 0.
	local real fogEnd = 10000.
	local real r = 0.
	local real g = 0.
	local real b = 0.
	local real totalWeight = 0.
	local integer iterator = new_LLIterator_2(regions)
	local integer info
	local integer iterator_2
	local integer info_2
	local real cond_result
	local integer RegionSpecifier_PointRegionInfo_specifier_result
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
		set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
		set info = LLEntry_elem[LLIterator_current[iterator]]
		if RegionSpecifier_fog_state[PointRegionInfo_specifier[info]] then
			set totalWeight = totalWeight + PointRegionInfo_weight[info]
		endif
	endloop
	if LLIterator_destroyOnClose[iterator] then
		if LLIterator_typeId[iterator] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator] = 0
		endif
	endif
	set iterator_2 = new_LLIterator_2(regions)
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator_2]] == LLIterator_dummy[iterator_2]
		set LLIterator_current[iterator_2] = LLEntry_next[LLIterator_current[iterator_2]]
		set info_2 = LLEntry_elem[LLIterator_current[iterator_2]]
		if RegionSpecifier_fog_state[PointRegionInfo_specifier[info_2]] then
			set RegionSpecifier_PointRegionInfo_specifier_result = PointRegionInfo_specifier[info_2]
			if totalWeight > 1. then
				set cond_result = PointRegionInfo_weight[info_2] / totalWeight
			else
				set cond_result = PointRegionInfo_weight[info_2]
			endif
			set fogStart = fogStart + (RegionSpecifier_fog_min[RegionSpecifier_PointRegionInfo_specifier_result] - fogStart) * cond_result
			set fogEnd = fogEnd + (RegionSpecifier_fog_max[RegionSpecifier_PointRegionInfo_specifier_result] - fogEnd) * cond_result
			set r = r + (RegionSpecifier_fog_r[RegionSpecifier_PointRegionInfo_specifier_result] - r) * cond_result
			set g = g + (RegionSpecifier_fog_g[RegionSpecifier_PointRegionInfo_specifier_result] - g) * cond_result
			set b = b + (RegionSpecifier_fog_b[RegionSpecifier_PointRegionInfo_specifier_result] - b) * cond_result
		endif
	endloop
	if LLIterator_destroyOnClose[iterator_2] then
		if LLIterator_typeId[iterator_2] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator_2
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator_2] = 0
		endif
	endif
	call SetTerrainFogEx(0, fogStart, fogEnd, 0., r, g, b)
endfunction

function updateLighting takes integer regions returns nothing
	local integer currentInfo = 0
	local integer iterator = new_LLIterator_2(regions)
	local integer info
	local string dnc
	local string result_2
	local string result_3
	local boolean andLeft
	local boolean andLeft_2
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
		set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
		set info = LLEntry_elem[LLIterator_current[iterator]]
		if RegionSpecifier_dnc[PointRegionInfo_specifier[info]] != null then
			if currentInfo == 0 then
				set andLeft = true
			else
				set andLeft = PointRegionInfo_weight[currentInfo] < PointRegionInfo_weight[info]
			endif
			set andLeft_2 = andLeft
		else
			set andLeft_2 = false
		endif
		if andLeft_2 then
			set currentInfo = info
		endif
	endloop
	if LLIterator_destroyOnClose[iterator] then
		if LLIterator_typeId[iterator] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator] = 0
		endif
	endif
	set dnc = "lordaeron"
	if currentInfo != 0 then
		set dnc = RegionSpecifier_dnc[PointRegionInfo_specifier[currentInfo]]
	endif
	set result_2 = ""
	if HaveSavedString(Table_ht, StaticData_UNIT_DNC, StringHash(dnc)) then
		set result_2 = LoadStr(Table_ht, StaticData_UNIT_DNC, StringHash(dnc))
	endif
	set result_3 = ""
	if HaveSavedString(Table_ht, StaticData_TERRAIN_DNC, StringHash(dnc)) then
		set result_3 = LoadStr(Table_ht, StaticData_TERRAIN_DNC, StringHash(dnc))
	endif
	call SetDayNightModels(result_3, result_2)
endfunction

function new_LinkedList takes nothing returns integer
	local integer this_54
	if LinkedList_firstFree == 0 then
		if LinkedList_maxIndex < 32768 then
			set LinkedList_maxIndex = LinkedList_maxIndex + 1
			set this_54 = LinkedList_maxIndex
			set LinkedList_typeId[this_54] = 892
		else
			call error("Out of memory: Could not create LinkedList.")
			set this_54 = 0
		endif
	else
		set LinkedList_firstFree = LinkedList_firstFree - 1
		set this_54 = LinkedList_nextFree[LinkedList_firstFree]
		set LinkedList_typeId[this_54] = 892
	endif
	set LinkedList_dummy[this_54] = new_LLEntry(0, 0, 0)
	set LinkedList_size[this_54] = 0
	set LinkedList_staticItr[this_54] = 0
	set LinkedList_staticBackItr[this_54] = 0
	set LLEntry_next[LinkedList_dummy[this_54]] = LinkedList_dummy[this_54]
	set LLEntry_prev[LinkedList_dummy[this_54]] = LinkedList_dummy[this_54]
	return this_54
endfunction

function new_PointRegionInfo takes integer specifier, real weight returns integer
	local integer this_54
	if PointRegionInfo_firstFree == 0 then
		if PointRegionInfo_maxIndex < 32768 then
			set PointRegionInfo_maxIndex = PointRegionInfo_maxIndex + 1
			set this_54 = PointRegionInfo_maxIndex
			set PointRegionInfo_typeId[this_54] = 947
		else
			call error("Out of memory: Could not create PointRegionInfo.")
			set this_54 = 0
		endif
	else
		set PointRegionInfo_firstFree = PointRegionInfo_firstFree - 1
		set this_54 = PointRegionInfo_nextFree[PointRegionInfo_firstFree]
		set PointRegionInfo_typeId[this_54] = 947
	endif
	set PointRegionInfo_specifier[this_54] = specifier
	set PointRegionInfo_weight[this_54] = weight
	return this_54
endfunction

function vec2_getRegionSpecifiers takes real this_x, real this_y returns integer
	local integer list_2 = new_LinkedList()
	local integer receiver = RegionSpecifier_LinkedListModule_staticItr
	local integer from
	local integer res
	local rect RegionSpecifier_RegionSpecifier_area_result
	local real cond_result
	local real min
	local real max
	local real value_2
	local real numbers_0
	local real cond_result_2
	local real numbers_0_2
	local real cond_result_3
	local real min_2
	local real max_2
	local real value_3
	local real numbers_0_3
	local real cond_result_4
	local real numbers_0_4
	local real cond_result_5
	local integer entry
	set Iterator_current_2[receiver] = RegionSpecifier_LinkedListModule_first
	set from = receiver
	loop
		exitwhen Iterator_current_2[from] == 0
		set res = Iterator_current_2[from]
		set Iterator_current_2[from] = RegionSpecifier_LinkedListModule_next[Iterator_current_2[from]]
		set RegionSpecifier_RegionSpecifier_area_result = RegionSpecifier_area[res]
		set min = GetRectMinX(RegionSpecifier_RegionSpecifier_area_result)
		set max = GetRectMaxX(RegionSpecifier_RegionSpecifier_area_result)
		if min <= this_x and max >= this_x then
			set value_2 = 1.
		elseif this_x > max then
			set numbers_0 = (this_x - max) / 500.
			if numbers_0 < 340282366920938000000000000000000000000. then
				set cond_result_2 = numbers_0
			else
				set cond_result_2 = 340282366920938000000000000000000000000.
			endif
			if 1. < cond_result_2 then
				set cond_result_2 = 1.
			endif
			set value_2 = 1. - cond_result_2
		else
			set numbers_0_2 = (min - this_x) / 500.
			if numbers_0_2 < 340282366920938000000000000000000000000. then
				set cond_result_3 = numbers_0_2
			else
				set cond_result_3 = 340282366920938000000000000000000000000.
			endif
			if 1. < cond_result_3 then
				set cond_result_3 = 1.
			endif
			set value_2 = 1. - cond_result_3
		endif
		set min_2 = GetRectMinY(RegionSpecifier_RegionSpecifier_area_result)
		set max_2 = GetRectMaxY(RegionSpecifier_RegionSpecifier_area_result)
		if min_2 <= this_y and max_2 >= this_y then
			set value_3 = 1.
		elseif this_y > max_2 then
			set numbers_0_3 = (this_y - max_2) / 500.
			if numbers_0_3 < 340282366920938000000000000000000000000. then
				set cond_result_4 = numbers_0_3
			else
				set cond_result_4 = 340282366920938000000000000000000000000.
			endif
			if 1. < cond_result_4 then
				set cond_result_4 = 1.
			endif
			set value_3 = 1. - cond_result_4
		else
			set numbers_0_4 = (min_2 - this_y) / 500.
			if numbers_0_4 < 340282366920938000000000000000000000000. then
				set cond_result_5 = numbers_0_4
			else
				set cond_result_5 = 340282366920938000000000000000000000000.
			endif
			if 1. < cond_result_5 then
				set cond_result_5 = 1.
			endif
			set value_3 = 1. - cond_result_5
		endif
		if value_2 < 340282366920938000000000000000000000000. then
			set cond_result = value_2
		else
			set cond_result = 340282366920938000000000000000000000000.
		endif
		if value_3 < cond_result then
			set cond_result = value_3
		endif
		set entry = new_LLEntry(new_PointRegionInfo(res, cond_result), LLEntry_prev[LinkedList_dummy[list_2]], LinkedList_dummy[list_2])
		set LLEntry_next[LLEntry_prev[LinkedList_dummy[list_2]]] = entry
		set LLEntry_prev[LinkedList_dummy[list_2]] = entry
		set LinkedList_size[list_2] = LinkedList_size[list_2] + 1
	endloop
	set RegionSpecifier_RegionSpecifier_area_result = null
	return list_2
endfunction

function updateAtmospheric takes nothing returns nothing
	local integer regions = vec2_getRegionSpecifiers(GetCameraTargetPositionX(), GetCameraTargetPositionY())
	local integer iterator
	local integer r
	call updateFog(regions)
	call updateColorCorrection(regions)
	call updateLighting(regions)
	set iterator = new_LLIterator_2(regions)
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
		set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
		set r = LLEntry_elem[LLIterator_current[iterator]]
		if PointRegionInfo_typeId[r] == 0 then
			call error("Double free: object of type PointRegionInfo")
		else
			set PointRegionInfo_nextFree[PointRegionInfo_firstFree] = r
			set PointRegionInfo_firstFree = PointRegionInfo_firstFree + 1
			set PointRegionInfo_typeId[r] = 0
		endif
	endloop
	if LLIterator_destroyOnClose[iterator] then
		if LLIterator_typeId[iterator] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator] = 0
		endif
	endif
	call LinkedList_onDestroy(regions)
	if LinkedList_typeId[regions] == 0 then
		call error("Double free: object of type LinkedList")
	else
		set LinkedList_nextFree[LinkedList_firstFree] = regions
		set LinkedList_firstFree = LinkedList_firstFree + 1
		set LinkedList_typeId[regions] = 0
	endif
endfunction

function dispatch_CallbackPeriodic_ClosureTimers_CallbackPeriodic_call takes integer this_54, integer cb returns nothing
	if CallbackPeriodic_typeId[this_54] <= 658 then
		if CallbackPeriodic_typeId[this_54] <= 657 then
			if CallbackPeriodic_typeId[this_54] <= 656 then
				call updateAtmospheric()
			else
				call DynamicEffectProxy_updateAll()
			endif
		else
			call HashSet_clear(FormationMovement_frameProcessedUnits)
		endif
	elseif CallbackPeriodic_typeId[this_54] <= 659 then
		call UnitTag_controlVisibility()
	else
		call TextTagUpdater_updatePositions()
	endif
endfunction

function CallbackPeriodic_staticCallback takes nothing returns nothing
	local integer Table_Table_loadInt_result = LoadInteger(Table_ht, TimerUtils_timerData, GetHandleId(GetExpiredTimer()))
	call dispatch_CallbackPeriodic_ClosureTimers_CallbackPeriodic_call(Table_Table_loadInt_result, Table_Table_loadInt_result)
endfunction

function registerPlayerUnitEvent takes playerunitevent p, code filter, code condition_2, code action_2 returns nothing
	local integer hid = GetHandleId(p)
	local integer k
	local filterfunc cond_result
	local trigger temp
	local player temp_2
	if RegisterEvents_t[hid] == null then
		set RegisterEvents_t[hid] = CreateTrigger()
		set k = bj_MAX_PLAYER_SLOTS - 1
		loop
			exitwhen k < 0
			set temp = RegisterEvents_t[hid]
			set temp_2 = Player_players[k]
			if filter != null then
				set cond_result = Filter(filter)
			else
				set cond_result = null
			endif
			call TriggerRegisterPlayerUnitEvent(temp, temp_2, p, cond_result)
			set k = k - 1
		endloop
	endif
	if condition_2 != null then
		call TriggerAddCondition(RegisterEvents_t[hid], Filter(condition_2))
	endif
	if action_2 != null then
		call TriggerAddAction(RegisterEvents_t[hid], action_2)
	endif
	set cond_result = null
	set temp = null
	set temp_2 = null
endfunction

function ClosureEvents_closure_impl takes integer this_54 returns nothing
	local integer i_3
	local trigger receiver
	call TriggerAddCondition(UnitIndexer_onIndexTrigger, Condition(ref_function_ClosureEvents_closure_impl))
	call TriggerAddCondition(UnitIndexer_onDeindexTrigger, Condition(ref_function_ClosureEvents_closure_impl_2))
	call TriggerAddAction(ClosureEvents_unitTrig, ref_function_ClosureEvents_closure_impl_3)
	call TriggerAddAction(ClosureEvents_leaveTrig, ref_function_ClosureEvents_closure_impl_4)
	call TriggerAddAction(ClosureEvents_keyTrig, ref_function_ClosureEvents_closure_impl_5)
	set i_3 = 0
	set this_54 = bj_MAX_PLAYERS - 1
	loop
		exitwhen i_3 > this_54
		call TriggerRegisterPlayerEvent(ClosureEvents_leaveTrig, Player_players[i_3], EVENT_PLAYER_LEAVE)
		set receiver = ClosureEvents_keyTrig
		call TriggerRegisterPlayerEvent(receiver, Player_players[i_3], EVENT_PLAYER_ARROW_DOWN_DOWN)
		call TriggerRegisterPlayerEvent(receiver, Player_players[i_3], EVENT_PLAYER_ARROW_DOWN_UP)
		call TriggerRegisterPlayerEvent(receiver, Player_players[i_3], EVENT_PLAYER_ARROW_UP_DOWN)
		call TriggerRegisterPlayerEvent(receiver, Player_players[i_3], EVENT_PLAYER_ARROW_UP_UP)
		call TriggerRegisterPlayerEvent(receiver, Player_players[i_3], EVENT_PLAYER_ARROW_LEFT_DOWN)
		call TriggerRegisterPlayerEvent(receiver, Player_players[i_3], EVENT_PLAYER_ARROW_LEFT_UP)
		call TriggerRegisterPlayerEvent(receiver, Player_players[i_3], EVENT_PLAYER_ARROW_RIGHT_DOWN)
		call TriggerRegisterPlayerEvent(receiver, Player_players[i_3], EVENT_PLAYER_ARROW_RIGHT_UP)
		call TriggerRegisterPlayerEvent(receiver, Player_players[i_3], EVENT_PLAYER_END_CINEMATIC)
		call TriggerRegisterPlayerEvent(receiver, Player_players[i_3], EVENT_PLAYER_MOUSE_UP)
		call TriggerRegisterPlayerEvent(receiver, Player_players[i_3], EVENT_PLAYER_MOUSE_DOWN)
		call TriggerRegisterPlayerEvent(receiver, Player_players[i_3], EVENT_PLAYER_MOUSE_MOVE)
		call TriggerRegisterPlayerChatEvent(receiver, Player_players[i_3], "", false)
		set i_3 = i_3 + 1
	endloop
	call registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT, null, ref_function_ClosureEvents_closure_impl_6, null)
	set receiver = null
endfunction

function OnUnitEnterLeave_closure_impl takes integer this_54 returns nothing
	local group receiver
	call TriggerRegisterEnterRegion(CreateTrigger(), MapBounds_boundRegion, Filter(ref_function_OnUnitEnterLeave_closure_impl))
	call registerPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_ORDER, null, ref_function_OnUnitEnterLeave_closure_impl_2, null)
	call GroupEnumUnitsInRect(OnUnitEnterLeave_preplacedUnits, MapBounds_boundRect, null)
	call ForGroup(OnUnitEnterLeave_preplacedUnits, ref_function_OnUnitEnterLeave_closure_impl_3)
	set receiver = OnUnitEnterLeave_preplacedUnits
	call GroupClear(receiver)
	call DestroyGroup(receiver)
	set receiver = null
endfunction

function MetadataStore_sync takes integer this_54 returns nothing
	local integer i_3 = 0
	local integer temp = 4
	local gamecache this_55
	local string missionKey
	loop
		exitwhen i_3 > temp
		set this_55 = MetadataStore_META_CACHE
		set missionKey = MetadataStore_mkey[this_54]
		if i_3 >= GamecacheKeys_count then
			call error("Network: trying to get invalid GC key")
		endif
		call SyncStoredInteger(this_55, missionKey, GamecacheKeys_keys[i_3])
		set i_3 = i_3 + 1
	endloop
	set this_55 = null
endfunction

function IterableMap_flush takes integer this_54 returns nothing
	local integer this_55
	if  not IterableMap__destroyed[this_54] then
		set this_55 = IterableMap_keys[this_54]
		if HashList_typeId[this_55] <= 824 then
			call FlushChildHashtable(HashList_ht, this_55)
			call FlushChildHashtable(HashList_occurences, this_55)
			set HashList_size[this_55] = 0
		else
			call HashSet_clear(this_55)
		endif
	endif
	call FlushChildHashtable(Table_ht, this_54)
endfunction

function HashSet_onDestroy takes integer this_54 returns nothing
	call FlushChildHashtable(HashSet_position, this_54)
	if HashList_typeId[this_54] <= 824 then
		call FlushChildHashtable(HashList_ht, this_54)
		call FlushChildHashtable(HashList_occurences, this_54)
		set HashList_size[this_54] = 0
	else
		call HashSet_clear(this_54)
	endif
endfunction

function destroyHashList takes integer this_54 returns nothing
	if HashList_typeId[this_54] <= 824 then
		call FlushChildHashtable(HashList_ht, this_54)
		call FlushChildHashtable(HashList_occurences, this_54)
		set HashList_size[this_54] = 0
	else
		call HashSet_clear(this_54)
	endif
	if HashList_typeId[this_54] == 0 then
		call error("Double free: object of type HashList")
	else
		set HashList_nextFree[HashList_firstFree] = this_54
		set HashList_firstFree = HashList_firstFree + 1
		set HashList_typeId[this_54] = 0
	endif
endfunction

function dispatch_HashList_destroyHashList takes integer this_54 returns nothing
	if HashList_typeId[this_54] <= 824 then
		call destroyHashList(this_54)
	else
		call HashSet_onDestroy(this_54)
		if HashList_typeId[this_54] == 0 then
			call error("Double free: object of type HashSet")
		else
			set HashList_nextFree[HashList_firstFree] = this_54
			set HashList_firstFree = HashList_firstFree + 1
			set HashList_typeId[this_54] = 0
		endif
	endif
endfunction

function IterableMap_onDestroy takes integer this_54 returns nothing
	call dispatch_HashList_destroyHashList(IterableMap_keys[this_54])
	set IterableMap__destroyed[this_54] = true
	if Table_typeId[this_54] <= 983 then
		call FlushChildHashtable(Table_ht, this_54)
	else
		call IterableMap_flush(this_54)
	endif
endfunction

function destroyTable takes integer this_54 returns nothing
	if Table_typeId[this_54] <= 983 then
		call FlushChildHashtable(Table_ht, this_54)
	else
		call IterableMap_flush(this_54)
	endif
	if Table_typeId[this_54] == 0 then
		call error("Double free: object of type Table")
	else
		set Table_nextFree[Table_firstFree] = this_54
		set Table_firstFree = Table_firstFree + 1
		set Table_typeId[this_54] = 0
	endif
endfunction

function dispatch_Table_destroyTable takes integer this_54 returns nothing
	if Table_typeId[this_54] <= 983 then
		call destroyTable(this_54)
	else
		call IterableMap_onDestroy(this_54)
		if Table_typeId[this_54] == 0 then
			call error("Double free: object of type IterableMap")
		else
			set Table_nextFree[Table_firstFree] = this_54
			set Table_firstFree = Table_firstFree + 1
			set Table_typeId[this_54] = 0
		endif
	endif
endfunction

function destroyHashWriter takes integer this_54 returns nothing
	if HashWriter_data[this_54] != 0 then
		call dispatch_Table_destroyTable(HashWriter_data[this_54])
	endif
	if DataWriter_typeId[this_54] == 0 then
		call error("Double free: object of type HashWriter")
	else
		set DataWriter_nextFree[DataWriter_firstFree] = this_54
		set DataWriter_firstFree = DataWriter_firstFree + 1
		set DataWriter_typeId[this_54] = 0
	endif
endfunction

function StringEncoder_onDestroy takes integer this_54 returns nothing
	local integer this_55
	local integer this_56
	if StringEncoder_inputReader[this_54] != 0 then
		set this_55 = StringEncoder_inputReader[this_54]
		call dispatch_Table_destroyTable(HashReader_data[this_55])
		if DataReader_typeId[this_55] == 0 then
			call error("Double free: object of type HashReader")
		else
			set DataReader_nextFree[DataReader_firstFree] = this_55
			set DataReader_firstFree = DataReader_firstFree + 1
			set DataReader_typeId[this_55] = 0
		endif
	endif
	if StringEncoder_inputWriter[this_54] != 0 then
		call destroyHashWriter(StringEncoder_inputWriter[this_54])
	endif
	if StringEncoder_outputReader[this_54] != 0 then
		set this_56 = StringEncoder_outputReader[this_54]
		call dispatch_Table_destroyTable(HashReader_data[this_56])
		if DataReader_typeId[this_56] == 0 then
			call error("Double free: object of type HashReader")
		else
			set DataReader_nextFree[DataReader_firstFree] = this_56
			set DataReader_firstFree = DataReader_firstFree + 1
			set DataReader_typeId[this_56] = 0
		endif
	endif
	if StringEncoder_outputWriter[this_54] != 0 then
		call destroyHashWriter(StringEncoder_outputWriter[this_54])
	endif
endfunction

function Network_onDestroy takes integer this_54 returns nothing
	local integer this_55 = Network_gcIntBuffer[this_54]
	local integer this_56
	local integer this_57
	local integer this_58
	local integer this_59
	local integer this_60
	local integer this_61
	local integer this_62
	if GamecacheBuffer_typeId[this_55] == 0 then
		call error("Double free: object of type GamecacheBuffer")
	else
		set GamecacheBuffer_nextFree[GamecacheBuffer_firstFree] = this_55
		set GamecacheBuffer_firstFree = GamecacheBuffer_firstFree + 1
		set GamecacheBuffer_typeId[this_55] = 0
	endif
	set this_56 = Network_gcRealBuffer[this_54]
	if GamecacheBuffer_typeId[this_56] == 0 then
		call error("Double free: object of type GamecacheBuffer")
	else
		set GamecacheBuffer_nextFree[GamecacheBuffer_firstFree] = this_56
		set GamecacheBuffer_firstFree = GamecacheBuffer_firstFree + 1
		set GamecacheBuffer_typeId[this_56] = 0
	endif
	set this_57 = Network_gcBooleanBuffer[this_54]
	if GamecacheBuffer_typeId[this_57] == 0 then
		call error("Double free: object of type GamecacheBuffer")
	else
		set GamecacheBuffer_nextFree[GamecacheBuffer_firstFree] = this_57
		set GamecacheBuffer_firstFree = GamecacheBuffer_firstFree + 1
		set GamecacheBuffer_typeId[this_57] = 0
	endif
	set this_58 = Network_gcStringBuffer[this_54]
	if GamecacheBuffer_typeId[this_58] == 0 then
		call error("Double free: object of type GamecacheBuffer")
	else
		set GamecacheBuffer_nextFree[GamecacheBuffer_firstFree] = this_58
		set GamecacheBuffer_firstFree = GamecacheBuffer_firstFree + 1
		set GamecacheBuffer_typeId[this_58] = 0
	endif
	set this_59 = Network_stringEncoder[this_54]
	call StringEncoder_onDestroy(this_59)
	if StringEncoder_typeId[this_59] == 0 then
		call error("Double free: object of type StringEncoder")
	else
		set StringEncoder_nextFree[StringEncoder_firstFree] = this_59
		set StringEncoder_firstFree = StringEncoder_firstFree + 1
		set StringEncoder_typeId[this_59] = 0
	endif
	set this_60 = Network_metadataStore[this_54]
	if MetadataStore_typeId[this_60] == 0 then
		call error("Double free: object of type MetadataStore")
	else
		set MetadataStore_nextFree[MetadataStore_firstFree] = this_60
		set MetadataStore_firstFree = MetadataStore_firstFree + 1
		set MetadataStore_typeId[this_60] = 0
	endif
	set this_61 = Network_finishCallback[this_54]
	if NetworkFinishedCallback_typeId[this_61] == 0 then
		call error("Double free: object of type NetworkFinishedCallback")
	else
		set NetworkFinishedCallback_nextFree[NetworkFinishedCallback_firstFree] = this_61
		set NetworkFinishedCallback_firstFree = NetworkFinishedCallback_firstFree + 1
		set NetworkFinishedCallback_typeId[this_61] = 0
	endif
	if Network_dataReader[this_54] != 0 then
		set this_62 = Network_dataReader[this_54]
		call dispatch_Table_destroyTable(HashReader_data[this_62])
		if DataReader_typeId[this_62] == 0 then
			call error("Double free: object of type HashReader")
		else
			set DataReader_nextFree[DataReader_firstFree] = this_62
			set DataReader_firstFree = DataReader_firstFree + 1
			set DataReader_typeId[this_62] = 0
		endif
	endif
	if Network_dataWriter[this_54] != 0 then
		call destroyHashWriter(Network_dataWriter[this_54])
	endif
endfunction

function HashReader_readInt takes integer this_54 returns integer
	local integer Table_Table_loadInt_result
	if HashReader_integerCount[this_54] <= HashReader_integerReadIndex[this_54] then
		call error("trying to read integer at position " + I2S(HashReader_integerReadIndex[this_54]) + " out of " + I2S(HashReader_integerCount[this_54]))
	endif
	set Table_Table_loadInt_result = LoadInteger(Table_ht, HashReader_data[this_54], HashReader_integerReadIndex[this_54])
	set HashReader_integerReadIndex[this_54] = HashReader_integerReadIndex[this_54] + 1
	return Table_Table_loadInt_result
endfunction

function HashReader_readString takes integer this_54 returns string
	local string Table_Table_loadString_result
	if HashReader_stringCount[this_54] <= HashReader_stringReadIndex[this_54] then
		call error("trying to read string at position " + I2S(HashReader_stringReadIndex[this_54]) + " out of " + I2S(HashReader_stringCount[this_54]))
	endif
	set Table_Table_loadString_result = LoadStr(Table_ht, HashReader_data[this_54], HashReader_stringReadIndex[this_54])
	set HashReader_stringReadIndex[this_54] = HashReader_stringReadIndex[this_54] + 1
	return Table_Table_loadString_result
endfunction

function TileData_onDestroy takes integer this_54 returns nothing
	local integer this_55 = TileData_tileMap[this_54]
	local integer this_56
	local integer this_57
	call IterableMap_onDestroy(this_55)
	if Table_typeId[this_55] == 0 then
		call error("Double free: object of type IterableMap")
	else
		set Table_nextFree[Table_firstFree] = this_55
		set Table_firstFree = Table_firstFree + 1
		set Table_typeId[this_55] = 0
	endif
	set this_56 = TileData_cellList[this_54]
	call LinkedList_onDestroy(this_56)
	if LinkedList_typeId[this_56] == 0 then
		call error("Double free: object of type LinkedList")
	else
		set LinkedList_nextFree[LinkedList_firstFree] = this_56
		set LinkedList_firstFree = LinkedList_firstFree + 1
		set LinkedList_typeId[this_56] = 0
	endif
	set this_57 = TileData_currentCell[this_54]
	if TerrainCell_typeId[this_57] == 0 then
		call error("Double free: object of type TerrainCell")
	else
		set TerrainCell_nextFree[TerrainCell_firstFree] = this_57
		set TerrainCell_firstFree = TerrainCell_firstFree + 1
		set TerrainCell_typeId[this_57] = 0
	endif
endfunction

function destroyHeightData takes integer this_54 returns nothing
	local integer this_55
	if HeightData_reader[this_54] != 0 then
		set this_55 = HeightData_reader[this_54]
		call dispatch_Table_destroyTable(HashReader_data[this_55])
		if DataReader_typeId[this_55] == 0 then
			call error("Double free: object of type HashReader")
		else
			set DataReader_nextFree[DataReader_firstFree] = this_55
			set DataReader_firstFree = DataReader_firstFree + 1
			set DataReader_typeId[this_55] = 0
		endif
	endif
	if DataSerializable_typeId[this_54] == 0 then
		call error("Double free: object of type HeightData")
	else
		set DataSerializable_nextFree[DataSerializable_firstFree] = this_54
		set DataSerializable_firstFree = DataSerializable_firstFree + 1
		set DataSerializable_typeId[this_54] = 0
	endif
endfunction

function TerrainData_onDestroy takes integer this_54 returns nothing
	local integer this_55 = TerrainData_tiles[this_54]
	call TileData_onDestroy(this_55)
	if DataSerializable_typeId[this_55] == 0 then
		call error("Double free: object of type TileData")
	else
		set DataSerializable_nextFree[DataSerializable_firstFree] = this_55
		set DataSerializable_firstFree = DataSerializable_firstFree + 1
		set DataSerializable_typeId[this_55] = 0
	endif
	call destroyHeightData(TerrainData_height[this_54])
endfunction

function dispatch_PersistableMiddleware_destroyPersistableMiddleware takes integer this_54 returns nothing
	if PersistableMiddleware_typeId[this_54] <= 942 then
		if PersistableMiddleware_typeId[this_54] == 0 then
			call error("Double free: object of type PersistableMiddleware")
		else
			set PersistableMiddleware_nextFree[PersistableMiddleware_firstFree] = this_54
			set PersistableMiddleware_firstFree = PersistableMiddleware_firstFree + 1
			set PersistableMiddleware_typeId[this_54] = 0
		endif
	elseif PersistableMiddleware_typeId[this_54] == 0 then
		call error("Double free: object of type XorEncryptor")
	else
		set PersistableMiddleware_nextFree[PersistableMiddleware_firstFree] = this_54
		set PersistableMiddleware_firstFree = PersistableMiddleware_firstFree + 1
		set PersistableMiddleware_typeId[this_54] = 0
	endif
endfunction

function RegionSaveData_onDestroy takes integer this_54 returns nothing
	local integer this_55 = RegionSaveData_terrainData[this_54]
	local integer this_56
	call TerrainData_onDestroy(this_55)
	if DataSerializable_typeId[this_55] == 0 then
		call error("Double free: object of type TerrainData")
	else
		set DataSerializable_nextFree[DataSerializable_firstFree] = this_55
		set DataSerializable_firstFree = DataSerializable_firstFree + 1
		set DataSerializable_typeId[this_55] = 0
	endif
	set this_56 = RegionSaveData_unitData[this_54]
	if DataSerializable_typeId[this_56] == 0 then
		call error("Double free: object of type MultipleUnitData")
	else
		set DataSerializable_nextFree[DataSerializable_firstFree] = this_56
		set DataSerializable_firstFree = DataSerializable_firstFree + 1
		set DataSerializable_typeId[this_56] = 0
	endif
	call RemoveRect(RegionSaveData_area[this_54])
	if Persistable_middleware[this_54] != 0 then
		call dispatch_PersistableMiddleware_destroyPersistableMiddleware(Persistable_middleware[this_54])
	endif
endfunction

function RegionSpecifier_snap takes integer this_54 returns nothing
	local unit this_57 = RegionSpecifier_what[this_54]
	local real temp = GetUnitX(this_57)
	local real tuple_temp = GetUnitY(this_57)
	local real this_55 = temp / 128.
	local integer cond_result
	local real this_56
	local integer cond_result_2
	local real temp_2
	local real tuple_temp_2
	if this_55 > 0. then
		set cond_result = R2I(this_55 + .5)
	else
		set cond_result = R2I(this_55 - .5)
	endif
	set temp_2 = cond_result * 128.
	set this_56 = tuple_temp / 128.
	if this_56 > 0. then
		set cond_result_2 = R2I(this_56 + .5)
	else
		set cond_result_2 = R2I(this_56 - .5)
	endif
	set tuple_temp_2 = cond_result_2 * 128.
	call SetUnitPosition(RegionSpecifier_what[this_54], temp_2, tuple_temp_2)
	call MoveRectTo(RegionSpecifier_area[this_54], temp_2, tuple_temp_2)
	set this_57 = null
endfunction

function RegionSpecifier_updateHintLines takes integer this_54 returns nothing
	local lightning this_55
	local rect this_56
	local rect this_57
	local lightning this_58
	local rect this_59
	local rect this_60
	local lightning this_61
	local rect this_62
	local rect this_63
	local lightning this_64
	local rect this_65
	local rect this_66
	local real temp
	local real temp_2
	local real temp_3
	local real temp_4
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	local real tuple_temp_4
	if Player_localPlayer == GetOwningPlayer(RegionSpecifier_what[this_54]) then
		set this_55 = RegionSpecifier_horizTop[this_54]
		set this_56 = RegionSpecifier_area[this_54]
		set temp = GetRectMinX(this_56)
		set tuple_temp = GetRectMaxY(this_56)
		set this_57 = RegionSpecifier_area[this_54]
		call MoveLightning(this_55, false, temp, tuple_temp, GetRectMaxX(this_57), GetRectMaxY(this_57))
		set this_58 = RegionSpecifier_horizBot[this_54]
		set this_59 = RegionSpecifier_area[this_54]
		set temp_2 = GetRectMinX(this_59)
		set tuple_temp_2 = GetRectMinY(this_59)
		set this_60 = RegionSpecifier_area[this_54]
		call MoveLightning(this_58, false, temp_2, tuple_temp_2, GetRectMaxX(this_60), GetRectMinY(this_60))
		set this_61 = RegionSpecifier_vertLeft[this_54]
		set this_62 = RegionSpecifier_area[this_54]
		set temp_3 = GetRectMinX(this_62)
		set tuple_temp_3 = GetRectMaxY(this_62)
		set this_63 = RegionSpecifier_area[this_54]
		call MoveLightning(this_61, false, temp_3, tuple_temp_3, GetRectMinX(this_63), GetRectMinY(this_63))
		set this_64 = RegionSpecifier_vertRight[this_54]
		set this_65 = RegionSpecifier_area[this_54]
		set temp_4 = GetRectMaxX(this_65)
		set tuple_temp_4 = GetRectMaxY(this_65)
		set this_66 = RegionSpecifier_area[this_54]
		call MoveLightning(this_64, false, temp_4, tuple_temp_4, GetRectMaxX(this_66), GetRectMinY(this_66))
	endif
	set this_55 = null
	set this_56 = null
	set this_57 = null
	set this_58 = null
	set this_59 = null
	set this_60 = null
	set this_61 = null
	set this_62 = null
	set this_63 = null
	set this_64 = null
	set this_65 = null
	set this_66 = null
endfunction

function RegionSpecifier_updateWeather takes integer this_54 returns nothing
	if RegionSpecifier_weatherEffect[this_54] != null then
		call RemoveWeatherEffect(RegionSpecifier_weatherEffect[this_54])
	endif
	if RegionSpecifier_weatherId[this_54] > 0 then
		set RegionSpecifier_weatherEffect[this_54] = AddWeatherEffect(RegionSpecifier_area[this_54], RegionSpecifier_weatherId[this_54])
		call EnableWeatherEffect(RegionSpecifier_weatherEffect[this_54], true)
	endif
endfunction

function RegionSpecifier_setHeight takes integer this_54, real amount returns nothing
	local rect this_55 = RegionSpecifier_area[this_54]
	local rect this_56 = RegionSpecifier_area[this_54]
	local real temp = GetRectMinX(this_56)
	local real tuple_temp = GetRectMinY(this_56)
	local rect this_57 = RegionSpecifier_area[this_54]
	call SetRect(this_55, temp, tuple_temp, GetRectMaxX(this_57) + 0., GetRectMinY(this_57) + amount)
	call RegionSpecifier_updateWeather(this_54)
	call RegionSpecifier_snap(this_54)
	call RegionSpecifier_updateHintLines(this_54)
	set this_55 = null
	set this_56 = null
	set this_57 = null
endfunction

function RegionSpecifier_setWidth takes integer this_54, real amount returns nothing
	local rect this_55 = RegionSpecifier_area[this_54]
	local rect this_56 = RegionSpecifier_area[this_54]
	local real temp = GetRectMinX(this_56)
	local real tuple_temp = GetRectMinY(this_56)
	local rect this_57 = RegionSpecifier_area[this_54]
	call SetRect(this_55, temp, tuple_temp, GetRectMinX(this_57) + amount, GetRectMaxY(this_57) + 0.)
	call RegionSpecifier_updateWeather(this_54)
	call RegionSpecifier_snap(this_54)
	call RegionSpecifier_updateHintLines(this_54)
	set this_55 = null
	set this_56 = null
	set this_57 = null
endfunction

function construct_RegionSpecifier takes integer this_54, player owner_4, real pos_x, real pos_y returns nothing
	local real temp
	local real temp_2
	local real temp_3
	set RegionSpecifier_horizTop[this_54] = AddLightning("DRAM", false, 0., 0., 0., 0.)
	set RegionSpecifier_horizBot[this_54] = AddLightning("DRAM", false, 0., 0., 0., 0.)
	set RegionSpecifier_vertLeft[this_54] = AddLightning("DRAM", false, 0., 0., 0., 0.)
	set RegionSpecifier_vertRight[this_54] = AddLightning("DRAM", false, 0., 0., 0., 0.)
	set RegionSpecifier_fog_state[this_54] = false
	set RegionSpecifier_fog_min[this_54] = 0.
	set RegionSpecifier_fog_max[this_54] = 0.
	set RegionSpecifier_fog_r[this_54] = 0.
	set RegionSpecifier_fog_g[this_54] = 0.
	set RegionSpecifier_fog_b[this_54] = 0.
	set RegionSpecifier_corrector_state[this_54] = false
	set RegionSpecifier_corrector_r[this_54] = 0
	set RegionSpecifier_corrector_g[this_54] = 0
	set RegionSpecifier_corrector_b[this_54] = 0
	set RegionSpecifier_weatherId[this_54] = 0
	set RegionSpecifier_dnc[this_54] = null
	set RegionSpecifier_weatherEffect[this_54] = null
	set RegionSpecifier_LinkedListModule_size = RegionSpecifier_LinkedListModule_size + 1
	if RegionSpecifier_LinkedListModule_size == 1 then
		set RegionSpecifier_LinkedListModule_first = this_54
	else
		set RegionSpecifier_LinkedListModule_next[RegionSpecifier_LinkedListModule_last] = this_54
	endif
	set RegionSpecifier_LinkedListModule_next[this_54] = 0
	set RegionSpecifier_LinkedListModule_last = this_54
	set RegionSpecifier_what[this_54] = CreateUnit(owner_4, 2016489592, pos_x, pos_y, 0)
	set RegionSpecifier_lookup[GetUnitUserData(RegionSpecifier_what[this_54])] = this_54
	call RegionSpecifier_snap(this_54)
	set temp = GetUnitX(RegionSpecifier_what[this_54]) - 64.
	set temp_2 = GetUnitY(RegionSpecifier_what[this_54]) - 64.
	set temp_3 = GetUnitX(RegionSpecifier_what[this_54]) + 64.
	set RegionSpecifier_area[this_54] = Rect(temp, temp_2, temp_3, GetUnitY(RegionSpecifier_what[this_54]) + 64.)
	call SetLightningColor(RegionSpecifier_horizTop[this_54], 0 * 1. / 255, 0 * 1. / 255, 0 * 1. / 255, 0 * 1. / 255)
	call SetLightningColor(RegionSpecifier_horizBot[this_54], 0 * 1. / 255, 0 * 1. / 255, 0 * 1. / 255, 0 * 1. / 255)
	call SetLightningColor(RegionSpecifier_vertLeft[this_54], 0 * 1. / 255, 0 * 1. / 255, 0 * 1. / 255, 0 * 1. / 255)
	call SetLightningColor(RegionSpecifier_vertRight[this_54], 0 * 1. / 255, 0 * 1. / 255, 0 * 1. / 255, 0 * 1. / 255)
	call RegionSpecifier_updateHintLines(this_54)
endfunction

function new_RegionSpecifier takes player owner_4, real pos_x, real pos_y returns integer
	local integer this_54
	if RegionSpecifier_firstFree == 0 then
		if RegionSpecifier_maxIndex < 32768 then
			set RegionSpecifier_maxIndex = RegionSpecifier_maxIndex + 1
			set this_54 = RegionSpecifier_maxIndex
		else
			call error("Out of memory: Could not create RegionSpecifier.")
			set this_54 = 0
		endif
	else
		set RegionSpecifier_firstFree = RegionSpecifier_firstFree - 1
		set this_54 = RegionSpecifier_nextFree[RegionSpecifier_firstFree]
	endif
	call construct_RegionSpecifier(this_54, owner_4, pos_x, pos_y)
	return this_54
endfunction

function player_selectedUnitsList takes player this_54 returns integer
	local integer list_2 = new_LinkedList()
	local integer this_55
	if ForGroupCallback_firstFree == 0 then
		if ForGroupCallback_maxIndex < 32768 then
			set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
			set this_55 = ForGroupCallback_maxIndex
			set ForGroupCallback_typeId[this_55] = 815
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
		set this_55 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
		set ForGroupCallback_typeId[this_55] = 815
	endif
	set list[this_55] = list_2
	set ClosureForGroups_tempCallbacks[ClosureForGroups_tempCallbacksCount] = this_55
	set ClosureForGroups_tempCallbacksCount = ClosureForGroups_tempCallbacksCount + 1
	call GroupEnumUnitsSelected(ClosureForGroups_DUMMY_GROUP, this_54, ClosureForGroups_filter)
	call popCallback()
	return list_2
endfunction

function unitFromIndex takes integer index returns unit
	call SaveFogStateHandle(Table_ht, TypeCasting_typecastdata, 0, ConvertFogState(index))
	return LoadUnitHandle(Table_ht, TypeCasting_typecastdata, 0)
endfunction

function player_deselectAll takes player this_54 returns nothing
	local integer list_2 = player_selectedUnitsList(this_54)
	local integer iterator = new_LLIterator_2(list_2)
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
		set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
		call SelectUnit(unitFromIndex(LLEntry_elem[LLIterator_current[iterator]]), false)
	endloop
	if LLIterator_destroyOnClose[iterator] then
		if LLIterator_typeId[iterator] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator] = 0
		endif
	endif
	call LinkedList_onDestroy(list_2)
	if LinkedList_typeId[list_2] == 0 then
		call error("Double free: object of type LinkedList")
	else
		set LinkedList_nextFree[LinkedList_firstFree] = list_2
		set LinkedList_firstFree = LinkedList_firstFree + 1
		set LinkedList_typeId[list_2] = 0
	endif
endfunction

function RegionCommands_closure_impl takes integer this_54, integer w_u returns nothing
	local integer this_55
	local integer this_56
	local rect this_57
	local rect this_58
	local integer this_59
	local player this_60
	local unit RegionSpecifier_RegionSpecifier_getUnit_result
	if  not RegionSaveData_valid[data[this_54]] then
		set this_55 = data[this_54]
		call RegionSaveData_onDestroy(this_55)
		if DataSerializable_typeId[this_55] == 0 then
			call error("Double free: object of type RegionSaveData")
		else
			set DataSerializable_nextFree[DataSerializable_firstFree] = this_55
			set DataSerializable_firstFree = DataSerializable_firstFree + 1
			set DataSerializable_typeId[this_55] = 0
		endif
	else
		set this_56 = data[this_54]
		set w_u = new_RegionSpecifier(owner[this_54], RegionSaveData_origin_x[this_56], RegionSaveData_origin_y[this_56])
		set this_57 = RegionSaveData_area[data[this_54]]
		call RegionSpecifier_setWidth(w_u, GetRectMaxX(this_57) - GetRectMinX(this_57))
		set this_58 = RegionSaveData_area[data[this_54]]
		call RegionSpecifier_setHeight(w_u, GetRectMaxY(this_58) - GetRectMinY(this_58))
		set RegionSpecifier_saveData[w_u] = data[this_54]
		call UnitAddAbility(RegionSpecifier_what[w_u], 1095577653)
		if Player_localPlayer == owner[this_54] then
			set this_59 = data[this_54]
			call SetCameraPosition(RegionSaveData_origin_x[this_59], RegionSaveData_origin_y[this_59])
		endif
		set this_60 = owner[this_54]
		set RegionSpecifier_RegionSpecifier_getUnit_result = RegionSpecifier_what[w_u]
		call player_deselectAll(this_60)
		if Player_localPlayer == this_60 then
			call SelectUnit(RegionSpecifier_RegionSpecifier_getUnit_result, true)
		endif
	endif
	set this_57 = null
	set this_58 = null
	set this_60 = null
	set RegionSpecifier_RegionSpecifier_getUnit_result = null
endfunction

function alloc_Closure takes nothing returns integer
	local integer this_54
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_54 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_54] = 790
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_54 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_54] = 790
	endif
	return this_54
endfunction

function try takes integer c returns boolean
	local boolean suppressErrors
	set Execute_tempCallbacks[Execute_tempCallbacksCount] = c
	set Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] = false
	set Execute_tempCallbacksCount = Execute_tempCallbacksCount + 1
	set suppressErrors = ErrorHandling_suppressErrorMessages
	set ErrorHandling_suppressErrorMessages = true
	call ForForce(Execute_executeForce, ref_function_executeCurrentCallback)
	set ErrorHandling_suppressErrorMessages = suppressErrors
	set Execute_tempCallbacksCount = Execute_tempCallbacksCount - 1
	set c = Execute_tempCallbacks[Execute_tempCallbacksCount]
	if ForForceCallback_typeId[c] == 0 then
		call error("Double free: object of type ForForceCallback")
	else
		set ForForceCallback_nextFree[ForForceCallback_firstFree] = c
		set ForForceCallback_firstFree = ForForceCallback_firstFree + 1
		set ForForceCallback_typeId[c] = 0
	endif
	return Execute_tempCallbacksSuccess[Execute_tempCallbacksCount]
endfunction

function Base64Encoder_encode takes integer this_54 returns nothing
	local integer clVar = alloc_Closure()
	set this_3[clVar] = this_54
	if  not try(clVar) then
		call error("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
	endif
endfunction

function BigString_onDestroy takes integer this_54 returns nothing
	local integer iterator = new_LLIterator_2(BigString_data[this_54])
	local integer elem
	local integer this_55
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
		set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
		set elem = LLEntry_elem[LLIterator_current[iterator]]
		if BigStringElement_typeId[elem] == 0 then
			call error("Double free: object of type BigStringElement")
		else
			set BigStringElement_nextFree[BigStringElement_firstFree] = elem
			set BigStringElement_firstFree = BigStringElement_firstFree + 1
			set BigStringElement_typeId[elem] = 0
		endif
	endloop
	if LLIterator_destroyOnClose[iterator] then
		if LLIterator_typeId[iterator] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator] = 0
		endif
	endif
	set this_55 = BigString_data[this_54]
	call LinkedList_onDestroy(this_55)
	if LinkedList_typeId[this_55] == 0 then
		call error("Double free: object of type LinkedList")
	else
		set LinkedList_nextFree[LinkedList_firstFree] = this_55
		set LinkedList_firstFree = LinkedList_firstFree + 1
		set LinkedList_typeId[this_55] = 0
	endif
endfunction

function Base64Encoder_onDestroy takes integer this_54 returns nothing
	local integer this_55
	local integer this_56
	if Base64Encoder_stringBuffer[this_54] != 0 then
		set this_55 = Base64Encoder_stringBuffer[this_54]
		call BigString_onDestroy(this_55)
		if BigString_typeId[this_55] == 0 then
			call error("Double free: object of type BigString")
		else
			set BigString_nextFree[BigString_firstFree] = this_55
			set BigString_firstFree = BigString_firstFree + 1
			set BigString_typeId[this_55] = 0
		endif
	endif
	set this_56 = Base64Encoder_byteBuffer[this_54]
	call dispatch_Table_destroyTable(ByteBuffer_buffer[this_56])
	if ByteBuffer_typeId[this_56] == 0 then
		call error("Double free: object of type ByteBuffer")
	else
		set ByteBuffer_nextFree[ByteBuffer_firstFree] = this_56
		set ByteBuffer_firstFree = ByteBuffer_firstFree + 1
		set ByteBuffer_typeId[this_56] = 0
	endif
endfunction

function destroyBase64DataEncoder takes integer this_54 returns nothing
	local integer this_55
	if Base64DataEncoder_encoder[this_54] != 0 then
		set this_55 = Base64DataEncoder_encoder[this_54]
		call Base64Encoder_onDestroy(this_55)
		if Base64Encoder_typeId[this_55] == 0 then
			call error("Double free: object of type Base64Encoder")
		else
			set Base64Encoder_nextFree[Base64Encoder_firstFree] = this_55
			set Base64Encoder_firstFree = Base64Encoder_firstFree + 1
			set Base64Encoder_typeId[this_55] = 0
		endif
	endif
	if DataEncoder_typeId[this_54] == 0 then
		call error("Double free: object of type Base64DataEncoder")
	else
		set DataEncoder_nextFree[DataEncoder_firstFree] = this_54
		set DataEncoder_firstFree = DataEncoder_firstFree + 1
		set DataEncoder_typeId[this_54] = 0
	endif
endfunction

function Base64DataEncoder_encode takes integer this_54 returns integer
	local integer temp = Base64DataEncoder_encoder[this_54]
	local integer temp_2
	set Base64DataEncoder_encoder[this_54] = 0
	call destroyBase64DataEncoder(this_54)
	call Base64Encoder_encode(temp)
	set temp_2 = Base64Encoder_stringBuffer[temp]
	set Base64Encoder_stringBuffer[temp] = 0
	call Base64Encoder_onDestroy(temp)
	if Base64Encoder_typeId[temp] == 0 then
		call error("Double free: object of type Base64Encoder")
	else
		set Base64Encoder_nextFree[Base64Encoder_firstFree] = temp
		set Base64Encoder_firstFree = Base64Encoder_firstFree + 1
		set Base64Encoder_typeId[temp] = 0
	endif
	return temp_2
endfunction

function BigString_checksum takes integer this_54 returns integer
	local integer sum = 0
	local integer iterator
	if BigString_currentReadString[this_54] != "" then
		set sum = 0 + StringHash(BigString_currentReadString[this_54])
	endif
	set iterator = new_LLIterator_2(BigString_data[this_54])
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
		set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
		set sum = sum + StringHash(BigStringElement_data[LLEntry_elem[LLIterator_current[iterator]]])
	endloop
	if LLIterator_destroyOnClose[iterator] then
		if LLIterator_typeId[iterator] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator] = 0
		endif
	endif
	if BigString_currentWriteString[this_54] != "" then
		set sum = sum + StringHash(BigString_currentWriteString[this_54])
	endif
	return sum
endfunction

function PacketWriter_write takes string packet returns nothing
	local integer temp
	local string result_2
	local integer i_3
	local integer temp_2
	if StringLength(packet) > 203 then
		call error("exceeded max packet length")
	endif
	if PacketWriter_currentPacket > 64 then
		call error("exceeded max packets per file")
	endif
	set temp = PacketWriter_currentPacket
	set result_2 = ""
	set i_3 = 1
	set temp_2 = 4
	loop
		exitwhen i_3 > temp_2
		set result_2 = Integer_hexs[ModuloInteger(temp, 16)] + result_2
		set temp = temp / 16
		set i_3 = i_3 + 1
	endloop
	call Preload("\")\r\n\tcall BlzSetAbilityTooltip('AXDT',\"" + packet + "\",$" + result_2 + ")\r\n//")
	set PacketWriter_currentPacket = PacketWriter_currentPacket + 1
endfunction

function BigString_hasData takes integer this_54 returns boolean
	local boolean andLeft
	local boolean andLeft_2
	if StringLength(BigString_currentReadString[this_54]) > 0 then
		set andLeft = true
	else
		set andLeft = LinkedList_size[BigString_data[this_54]] != 0
	endif
	if andLeft then
		set andLeft_2 = true
	else
		set andLeft_2 = StringLength(BigString_currentWriteString[this_54]) > 0
	endif
	return andLeft_2
endfunction

function BigString_read takes integer this_54 returns string
	local string result_2
	local string temp
	local integer this_55
	local integer top
	local integer result_3
	if StringLength(BigString_currentReadString[this_54]) > 0 then
		set temp = BigString_currentReadString[this_54]
		set BigString_currentReadString[this_54] = ""
		set result_2 = temp
	elseif LinkedList_size[BigString_data[this_54]] != 0 then
		set this_55 = BigString_data[this_54]
		set top = LLEntry_next[LinkedList_dummy[this_55]]
		set result_3 = 0
		if top != LinkedList_dummy[this_55] then
			set result_3 = LLEntry_elem[top]
			set LLEntry_next[LLEntry_prev[top]] = LLEntry_next[top]
			set LLEntry_prev[LLEntry_next[top]] = LLEntry_prev[top]
			if LLEntry_typeId[top] == 0 then
				call error("Double free: object of type LLEntry")
			else
				set LLEntry_nextFree[LLEntry_firstFree] = top
				set LLEntry_firstFree = LLEntry_firstFree + 1
				set LLEntry_typeId[top] = 0
			endif
			set LinkedList_size[this_55] = LinkedList_size[this_55] - 1
		endif
		set result_2 = BigStringElement_data[result_3]
		if BigStringElement_typeId[result_3] == 0 then
			call error("Double free: object of type BigStringElement")
		else
			set BigStringElement_nextFree[BigStringElement_firstFree] = result_3
			set BigStringElement_firstFree = BigStringElement_firstFree + 1
			set BigStringElement_typeId[result_3] = 0
		endif
	elseif StringLength(BigString_currentWriteString[this_54]) > 0 then
		set result_2 = BigString_currentWriteString[this_54]
		set BigString_currentWriteString[this_54] = ""
	else
		set result_2 = null
	endif
	return result_2
endfunction

function PacketWriter_write_2 takes integer data_2 returns nothing
	if BigString_maxLength[data_2] > 203 then
		call error("PacketWriter: trying to write a BigString with maxLength > MAX_PACKET_LENGTH")
	endif
	loop
		exitwhen  not BigString_hasData(data_2)
		call PacketWriter_write(BigString_read(data_2))
	endloop
	call BigString_onDestroy(data_2)
	if BigString_typeId[data_2] == 0 then
		call error("Double free: object of type BigString")
	else
		set BigString_nextFree[BigString_firstFree] = data_2
		set BigString_firstFree = BigString_firstFree + 1
		set BigString_typeId[data_2] = 0
	endif
endfunction

function dispatch_Persistable_Persistable_Persistable_onSaved takes integer this_54 returns nothing
	if DataSerializable_typeId[this_54] <= 751 then
		if DataSerializable_typeId[this_54] <= 750 then
		elseif Player_localPlayer == Persistable_owner[this_54] then
			call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 30., "|c006d619e>> |rYour settings have been saved.")
		endif
	else
		call RegionSaveData_onDestroy(this_54)
		if DataSerializable_typeId[this_54] == 0 then
			call error("Double free: object of type RegionSaveData")
		else
			set DataSerializable_nextFree[DataSerializable_firstFree] = this_54
			set DataSerializable_firstFree = DataSerializable_firstFree + 1
			set DataSerializable_typeId[this_54] = 0
		endif
	endif
endfunction

function Persistable_finishSave takes integer this_54, integer callback_4 returns nothing
	call dispatch_Persistable_Persistable_Persistable_onSaved(this_54)
	if callback_4 != 0 then
		if PersistableSaveCallback_typeId[callback_4] == 0 then
			call error("Double free: object of type PersistableSaveCallback")
		else
			set PersistableSaveCallback_firstFree = PersistableSaveCallback_firstFree + 1
			set PersistableSaveCallback_typeId[callback_4] = 0
		endif
	endif
endfunction

function destroyBase64DataWriter takes integer this_54 returns nothing
	local integer this_55
	if Base64DataWriter_encoder[this_54] != 0 then
		set this_55 = Base64DataWriter_encoder[this_54]
		call Base64Encoder_onDestroy(this_55)
		if Base64Encoder_typeId[this_55] == 0 then
			call error("Double free: object of type Base64Encoder")
		else
			set Base64Encoder_nextFree[Base64Encoder_firstFree] = this_55
			set Base64Encoder_firstFree = Base64Encoder_firstFree + 1
			set Base64Encoder_typeId[this_55] = 0
		endif
	endif
	if DataWriter_typeId[this_54] == 0 then
		call error("Double free: object of type Base64DataWriter")
	else
		set DataWriter_nextFree[DataWriter_firstFree] = this_54
		set DataWriter_firstFree = DataWriter_firstFree + 1
		set DataWriter_typeId[this_54] = 0
	endif
endfunction

function ByteBuffer_commitInt takes integer this_54 returns nothing
	set ByteBuffer_currentWriteIndex[this_54] = ByteBuffer_currentWriteIndex[this_54] + 1
	call SaveInteger(Table_ht, ByteBuffer_buffer[this_54], ByteBuffer_currentWriteIndex[this_54], ByteBuffer_currentWriteBytes_b1[this_54] + ByteBuffer_currentWriteBytes_b2[this_54] * 256 + ByteBuffer_currentWriteBytes_b3[this_54] * 65536 + ByteBuffer_currentWriteBytes_b4[this_54] * 16777216)
	set ByteBuffer_currentWriteBytes_b1[this_54] = 0
	set ByteBuffer_currentWriteBytes_b2[this_54] = 0
	set ByteBuffer_currentWriteBytes_b3[this_54] = 0
	set ByteBuffer_currentWriteBytes_b4[this_54] = 0
	set ByteBuffer_byteCount[this_54] = ByteBuffer_byteCount[this_54] + ByteBuffer_currentWriteByteIndex[this_54]
	set ByteBuffer_currentWriteByteIndex[this_54] = 0
endfunction

function ByteBuffer_writeByteInternal takes integer this_54, integer n returns nothing
	local integer pos
	local integer result_b1
	local integer result_b2
	local integer result_b3
	local integer result_b4
	local integer tuple_temp
	local integer tuple_temp_2
	local integer tuple_temp_3
	local integer tuple_temp_4
	if ByteBuffer_currentWriteByteIndex[this_54] > 3 then
		call ByteBuffer_commitInt(this_54)
	endif
	set tuple_temp = ByteBuffer_currentWriteBytes_b1[this_54]
	set tuple_temp_2 = ByteBuffer_currentWriteBytes_b2[this_54]
	set tuple_temp_3 = ByteBuffer_currentWriteBytes_b3[this_54]
	set tuple_temp_4 = ByteBuffer_currentWriteBytes_b4[this_54]
	set pos = ByteBuffer_currentWriteByteIndex[this_54]
	if pos > 1 then
		set result_b1 = tuple_temp
		set result_b2 = tuple_temp_2
		if pos == 3 then
			set result_b3 = tuple_temp_3
			set result_b4 = n
		else
			set result_b3 = n
			set result_b4 = tuple_temp_4
		endif
	elseif pos == 1 then
		set result_b1 = tuple_temp
		set result_b2 = n
		set result_b3 = tuple_temp_3
		set result_b4 = tuple_temp_4
	else
		set result_b1 = n
		set result_b2 = tuple_temp_2
		set result_b3 = tuple_temp_3
		set result_b4 = tuple_temp_4
	endif
	set ByteBuffer_currentWriteBytes_b1[this_54] = result_b1
	set ByteBuffer_currentWriteBytes_b2[this_54] = result_b2
	set ByteBuffer_currentWriteBytes_b3[this_54] = result_b3
	set ByteBuffer_currentWriteBytes_b4[this_54] = result_b4
	set ByteBuffer_currentWriteByteIndex[this_54] = ByteBuffer_currentWriteByteIndex[this_54] + 1
endfunction

function Base64DataWriter_writeBoolean takes integer this_54, boolean b returns nothing
	local integer cond_result
	set this_54 = Base64DataWriter_encoder[this_54]
	if b then
		set cond_result = 1
	else
		set cond_result = 0
	endif
	call ByteBuffer_writeByteInternal(Base64Encoder_byteBuffer[this_54], cond_result)
endfunction

function dispatch_DataWriter_DataInterfaces_DataWriter_writeBoolean takes integer this_54, boolean b returns nothing
	if DataWriter_typeId[this_54] <= 758 then
		call Base64DataWriter_writeBoolean(this_54, b)
	else
		call SaveBoolean(Table_ht, HashWriter_data[this_54], HashWriter_booleanWriteIndex[this_54], b)
		set HashWriter_booleanWriteIndex[this_54] = HashWriter_booleanWriteIndex[this_54] + 1
	endif
endfunction

function ByteBuffer_writeInt takes integer this_54, integer n returns nothing
	local integer value_2 = n
	local integer isNegative = 0
	if n < 0 then
		set value_2 = -2147483648 + n
		set isNegative = 1
	endif
	call ByteBuffer_writeByteInternal(this_54, ModuloInteger(value_2, 256))
	call ByteBuffer_writeByteInternal(this_54, (value_2 - value_2 / 65536 * 65536) / 256)
	call ByteBuffer_writeByteInternal(this_54, (value_2 - value_2 / 16777216 * 16777216) / 65536)
	call ByteBuffer_writeByteInternal(this_54, isNegative * 128 + value_2 / 16777216)
endfunction

function dispatch_DataWriter_DataInterfaces_DataWriter_writeInt takes integer this_54, integer number returns nothing
	if DataWriter_typeId[this_54] <= 758 then
		call ByteBuffer_writeInt(Base64Encoder_byteBuffer[Base64DataWriter_encoder[this_54]], number)
	else
		call SaveInteger(Table_ht, HashWriter_data[this_54], HashWriter_integerWriteIndex[this_54], number)
		set HashWriter_integerWriteIndex[this_54] = HashWriter_integerWriteIndex[this_54] + 1
	endif
endfunction

function ByteBuffer_writeShort takes integer this_54, integer n returns nothing
	call ByteBuffer_writeByteInternal(this_54, ModuloInteger(n, 256))
	call ByteBuffer_writeByteInternal(this_54, (n - n / 65536 * 65536) / 256)
endfunction

function Base64DataWriter_writeReal takes integer this_54, real number returns nothing
	local integer value_2 = R2I(number)
	local integer fractional = 0
	local integer this_55
	local integer cond_result
	local integer cond_result_2
	local real this_56
	local real cond_result_3
	if ModuloReal(number, 1.) > 0.0001 then
		set this_56 = number - value_2
		if this_56 < 0. then
			set cond_result_3 =  - this_56
		else
			set cond_result_3 = this_56
		endif
		set this_55 = R2I(1. / cond_result_3)
		if this_55 <= 0 then
			set cond_result_2 = 0
		else
			if this_55 >= 65535 then
				set cond_result = 65535
			else
				set cond_result = this_55
			endif
			set cond_result_2 = cond_result
		endif
		set fractional = cond_result_2
	endif
	call ByteBuffer_writeInt(Base64Encoder_byteBuffer[Base64DataWriter_encoder[this_54]], value_2)
	call ByteBuffer_writeShort(Base64Encoder_byteBuffer[Base64DataWriter_encoder[this_54]], fractional)
endfunction

function dispatch_DataWriter_DataInterfaces_DataWriter_writeReal takes integer this_54, real number returns nothing
	if DataWriter_typeId[this_54] <= 758 then
		call Base64DataWriter_writeReal(this_54, number)
	else
		call SaveReal(Table_ht, HashWriter_data[this_54], HashWriter_realWriteIndex[this_54], number)
		set HashWriter_realWriteIndex[this_54] = HashWriter_realWriteIndex[this_54] + 1
	endif
endfunction

function char takes string s returns integer
	local integer a
	if s == "/" then
		set char_return_c = 47
		return char_return_c
	elseif "\\" == s then
		set char_return_c = 92
		return char_return_c
	endif
	if "/" == s then
		set char_return_c = 47
		return char_return_c
	endif
	set a = StringUtils_s2c[StringHash(s) / 2033480 + 1002]
	if s != StringUtils_c2s[a] then
		set char_return_c = a + 32
		return char_return_c
	endif
	set char_return_c = a
	return char_return_c
endfunction

function Base64DataWriter_writeString takes integer this_54, string s returns nothing
	local integer this_55 = Base64DataWriter_encoder[this_54]
	local integer short = StringLength(s)
	local integer i_3
	local integer temp
	local integer this_56
	local integer tuple_temp
	call ByteBuffer_writeShort(Base64Encoder_byteBuffer[this_55], short)
	set i_3 = 0
	set temp = StringLength(s) - 1
	loop
		exitwhen i_3 > temp
		set this_56 = Base64DataWriter_encoder[this_54]
		set tuple_temp = char(SubString(s, i_3, i_3 + 1))
		call ByteBuffer_writeByteInternal(Base64Encoder_byteBuffer[this_56], tuple_temp)
		set i_3 = i_3 + 1
	endloop
endfunction

function dispatch_DataWriter_DataInterfaces_DataWriter_writeString takes integer this_54, string s returns nothing
	if DataWriter_typeId[this_54] <= 758 then
		call Base64DataWriter_writeString(this_54, s)
	else
		call SaveStr(Table_ht, HashWriter_data[this_54], HashWriter_stringWriteIndex[this_54], s)
		set HashWriter_stringWriteIndex[this_54] = HashWriter_stringWriteIndex[this_54] + 1
	endif
endfunction

function AtmosphericData_serialize takes integer this_54, integer writer_2 returns nothing
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeBoolean(writer_2, AtmosphericData_dnc[this_54] != null)
	if AtmosphericData_dnc[this_54] != null then
		call dispatch_DataWriter_DataInterfaces_DataWriter_writeString(writer_2, AtmosphericData_dnc[this_54])
	endif
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeBoolean(writer_2, AtmosphericData_fog_state[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeReal(writer_2, AtmosphericData_fog_r[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeReal(writer_2, AtmosphericData_fog_g[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeReal(writer_2, AtmosphericData_fog_b[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeReal(writer_2, AtmosphericData_fog_min[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeReal(writer_2, AtmosphericData_fog_max[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeBoolean(writer_2, AtmosphericData_corrector_state[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeInt(writer_2, AtmosphericData_corrector_r[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeInt(writer_2, AtmosphericData_corrector_g[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeInt(writer_2, AtmosphericData_corrector_b[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeInt(writer_2, AtmosphericData_weatherId[this_54])
endfunction

function dispatch_DataWriter_DataInterfaces_DataWriter_writeShort takes integer this_54, integer number returns nothing
	if DataWriter_typeId[this_54] <= 758 then
		call ByteBuffer_writeShort(Base64Encoder_byteBuffer[Base64DataWriter_encoder[this_54]], number)
	else
		call SaveInteger(Table_ht, HashWriter_data[this_54], HashWriter_integerWriteIndex[this_54], number)
		set HashWriter_integerWriteIndex[this_54] = HashWriter_integerWriteIndex[this_54] + 1
	endif
endfunction

function HeightData_serialize takes integer this_54, integer writer_2 returns nothing
	local integer i_3
	local integer temp
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeInt(writer_2, HeightData_size[this_54])
	set i_3 = 1
	set temp = HeightData_size[this_54]
	loop
		exitwhen i_3 > temp
		call dispatch_DataWriter_DataInterfaces_DataWriter_writeShort(writer_2, HashReader_readInt(HeightData_reader[this_54]))
		set i_3 = i_3 + 1
	endloop
endfunction

function dispatch_DataWriter_DataInterfaces_DataWriter_writeByte takes integer this_54, integer number returns nothing
	if DataWriter_typeId[this_54] <= 758 then
		call ByteBuffer_writeByteInternal(Base64Encoder_byteBuffer[Base64DataWriter_encoder[this_54]], number)
	else
		call SaveInteger(Table_ht, HashWriter_data[this_54], HashWriter_integerWriteIndex[this_54], number)
		set HashWriter_integerWriteIndex[this_54] = HashWriter_integerWriteIndex[this_54] + 1
	endif
endfunction

function SingleUnitData_serializeMandatory takes integer this_54, integer writer_2 returns nothing
	local playercolor this_55
	local integer value_2
	local integer i_3
	local integer temp
	local integer temp_2
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeShort(writer_2, SingleUnitData_dictionaryId[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeReal(writer_2, GetUnitX(SingleUnitData_what_u[this_54]) - SingleUnitData_origin_x[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeReal(writer_2, GetUnitY(SingleUnitData_what_u[this_54]) - SingleUnitData_origin_y[this_54])
	set temp_2 = writer_2
	set this_55 = YUnitData_pc[GetUnitUserData(SingleUnitData_what_u[this_54])]
	set value_2 = 0
	set i_3 = 0
	set temp = bj_MAX_PLAYER_SLOTS - 1
	loop
		exitwhen i_3 > temp
		if Playercolor_LOOKUP[i_3] == this_55 then
			set value_2 = i_3
			exitwhen true
		endif
		set i_3 = i_3 + 1
	endloop
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeByte(temp_2, value_2)
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeReal(writer_2, YUnitData_scale[GetUnitUserData(SingleUnitData_what_u[this_54])])
	set this_55 = null
endfunction

function SingleUnitData_serializeOptionals takes integer this_54, integer writer_2 returns nothing
	local integer flags_val = 0
	local integer this_val
	local integer cond_result_1
	local integer this_55
	local integer result_2
	local integer i_3
	local integer temp
	local integer this_val_2
	local integer cond_result_1_2
	local integer this_56
	local integer result_3
	local integer i_4
	local integer temp_2
	local integer this_val_3
	local integer cond_result_1_3
	local integer this_57
	local integer result_4
	local integer i_5
	local integer temp_3
	local integer this_val_4
	local integer cond_result_1_4
	local integer this_58
	local integer result_5
	local integer i_6
	local integer temp_4
	local integer this_val_5
	local integer cond_result_1_5
	local integer this_59
	local integer result_6
	local integer i_7
	local integer temp_5
	local integer this_val_6
	local integer cond_result_1_6
	local integer this_60
	local integer result_7
	local integer i_8
	local integer temp_6
	local integer this_val_7
	local integer cond_result_1_7
	local integer this_61
	local integer result_8
	local integer i_9
	local integer temp_7
	local integer this_val_8
	local integer cond_result_1_8
	local integer this_62
	local integer result_9
	local integer i_10
	local integer temp_8
	local integer index
	local integer tuple_temp
	local integer tuple_temp_2
	local integer tuple_temp_3
	if YUnitData_hasCustomName[GetUnitUserData(SingleUnitData_what_u[this_54])] then
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "custom name")
		set this_val = 0
		set this_55 = 2
		set result_2 = 1
		set i_3 = 1
		set temp = 1
		loop
			exitwhen i_3 > temp
			set result_2 = result_2 * this_55
			set i_3 = i_3 + 1
		endloop
		if ModuloInteger(this_val, result_2 * 2) < result_2 then
			set cond_result_1 = this_val + result_2
		else
			set cond_result_1 = this_val
		endif
		set flags_val = cond_result_1
	endif
	if YUnitData_hasCustomHeroName[GetUnitUserData(SingleUnitData_what_u[this_54])] then
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "custom h name")
		set this_val_2 = flags_val
		set this_56 = 2
		set result_3 = 1
		set i_4 = 1
		set temp_2 = 0
		loop
			exitwhen i_4 > temp_2
			set result_3 = result_3 * this_56
			set i_4 = i_4 + 1
		endloop
		if ModuloInteger(this_val_2, result_3 * 2) < result_3 then
			set cond_result_1_2 = this_val_2 + result_3
		else
			set cond_result_1_2 = this_val_2
		endif
		set flags_val = cond_result_1_2
	endif
	if YUnitData_hasCustomMaxLife[GetUnitUserData(SingleUnitData_what_u[this_54])] then
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "custom life")
		set this_val_3 = flags_val
		set this_57 = 2
		set result_4 = 1
		set i_5 = 1
		set temp_3 = 2
		loop
			exitwhen i_5 > temp_3
			set result_4 = result_4 * this_57
			set i_5 = i_5 + 1
		endloop
		if ModuloInteger(this_val_3, result_4 * 2) < result_4 then
			set cond_result_1_3 = this_val_3 + result_4
		else
			set cond_result_1_3 = this_val_3
		endif
		set flags_val = cond_result_1_3
	endif
	if YUnitData_hasCustomMaxMana[GetUnitUserData(SingleUnitData_what_u[this_54])] then
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "custom mana")
		set this_val_4 = flags_val
		set this_58 = 2
		set result_5 = 1
		set i_6 = 1
		set temp_4 = 3
		loop
			exitwhen i_6 > temp_4
			set result_5 = result_5 * this_58
			set i_6 = i_6 + 1
		endloop
		if ModuloInteger(this_val_4, result_5 * 2) < result_5 then
			set cond_result_1_4 = this_val_4 + result_5
		else
			set cond_result_1_4 = this_val_4
		endif
		set flags_val = cond_result_1_4
	endif
	if YUnitData_hasCustomDamage[GetUnitUserData(SingleUnitData_what_u[this_54])] then
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "custom dam")
		set this_val_5 = flags_val
		set this_59 = 2
		set result_6 = 1
		set i_7 = 1
		set temp_5 = 4
		loop
			exitwhen i_7 > temp_5
			set result_6 = result_6 * this_59
			set i_7 = i_7 + 1
		endloop
		if ModuloInteger(this_val_5, result_6 * 2) < result_6 then
			set cond_result_1_5 = this_val_5 + result_6
		else
			set cond_result_1_5 = this_val_5
		endif
		set flags_val = cond_result_1_5
	endif
	if YUnitData_hasCustomAttackCooldown[GetUnitUserData(SingleUnitData_what_u[this_54])] then
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "custom atk")
		set this_val_6 = flags_val
		set this_60 = 2
		set result_7 = 1
		set i_8 = 1
		set temp_6 = 5
		loop
			exitwhen i_8 > temp_6
			set result_7 = result_7 * this_60
			set i_8 = i_8 + 1
		endloop
		if ModuloInteger(this_val_6, result_7 * 2) < result_7 then
			set cond_result_1_6 = this_val_6 + result_7
		else
			set cond_result_1_6 = this_val_6
		endif
		set flags_val = cond_result_1_6
	endif
	if YUnitData_hasCustomFlyHeight[GetUnitUserData(SingleUnitData_what_u[this_54])] then
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "custom fly")
		set this_val_7 = flags_val
		set this_61 = 2
		set result_8 = 1
		set i_9 = 1
		set temp_7 = 6
		loop
			exitwhen i_9 > temp_7
			set result_8 = result_8 * this_61
			set i_9 = i_9 + 1
		endloop
		if ModuloInteger(this_val_7, result_8 * 2) < result_8 then
			set cond_result_1_7 = this_val_7 + result_8
		else
			set cond_result_1_7 = this_val_7
		endif
		set flags_val = cond_result_1_7
	endif
	if YUnitData_hasCustomTint[GetUnitUserData(SingleUnitData_what_u[this_54])] then
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "custom tint")
		set this_val_8 = flags_val
		set this_62 = 2
		set result_9 = 1
		set i_10 = 1
		set temp_8 = 7
		loop
			exitwhen i_10 > temp_8
			set result_9 = result_9 * this_62
			set i_10 = i_10 + 1
		endloop
		if ModuloInteger(this_val_8, result_9 * 2) < result_9 then
			set cond_result_1_8 = this_val_8 + result_9
		else
			set cond_result_1_8 = this_val_8
		endif
		set flags_val = cond_result_1_8
	endif
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeInt(writer_2, flags_val)
	if YUnitData_hasCustomName[GetUnitUserData(SingleUnitData_what_u[this_54])] then
		call dispatch_DataWriter_DataInterfaces_DataWriter_writeString(writer_2, GetUnitName(SingleUnitData_what_u[this_54]))
	endif
	if YUnitData_hasCustomHeroName[GetUnitUserData(SingleUnitData_what_u[this_54])] then
		call dispatch_DataWriter_DataInterfaces_DataWriter_writeString(writer_2, GetHeroProperName(SingleUnitData_what_u[this_54]))
	endif
	if YUnitData_hasCustomMaxLife[GetUnitUserData(SingleUnitData_what_u[this_54])] then
		call dispatch_DataWriter_DataInterfaces_DataWriter_writeInt(writer_2, R2I(GetUnitState(SingleUnitData_what_u[this_54], UNIT_STATE_MAX_LIFE)))
	endif
	if YUnitData_hasCustomMaxMana[GetUnitUserData(SingleUnitData_what_u[this_54])] then
		call dispatch_DataWriter_DataInterfaces_DataWriter_writeInt(writer_2, R2I(GetUnitState(SingleUnitData_what_u[this_54], UNIT_STATE_MAX_MANA)))
	endif
	if YUnitData_hasCustomDamage[GetUnitUserData(SingleUnitData_what_u[this_54])] then
		call dispatch_DataWriter_DataInterfaces_DataWriter_writeInt(writer_2, BlzGetUnitBaseDamage(SingleUnitData_what_u[this_54], 1))
	endif
	if YUnitData_hasCustomAttackCooldown[GetUnitUserData(SingleUnitData_what_u[this_54])] then
		call dispatch_DataWriter_DataInterfaces_DataWriter_writeReal(writer_2, BlzGetUnitAttackCooldown(SingleUnitData_what_u[this_54], 1))
	endif
	if YUnitData_hasCustomFlyHeight[GetUnitUserData(SingleUnitData_what_u[this_54])] then
		call dispatch_DataWriter_DataInterfaces_DataWriter_writeReal(writer_2, YUnitData_flyHeight[GetUnitUserData(SingleUnitData_what_u[this_54])])
	endif
	if YUnitData_hasCustomTint[GetUnitUserData(SingleUnitData_what_u[this_54])] then
		set index = GetUnitUserData(SingleUnitData_what_u[this_54])
		set tuple_temp = YUnitData_tint_green[index]
		set tuple_temp_2 = YUnitData_tint_blue[index]
		set tuple_temp_3 = YUnitData_tint_alpha[index]
		call dispatch_DataWriter_DataInterfaces_DataWriter_writeByte(writer_2, YUnitData_tint_red[index])
		call dispatch_DataWriter_DataInterfaces_DataWriter_writeByte(writer_2, tuple_temp)
		call dispatch_DataWriter_DataInterfaces_DataWriter_writeByte(writer_2, tuple_temp_2)
		call dispatch_DataWriter_DataInterfaces_DataWriter_writeByte(writer_2, tuple_temp_3)
	endif
endfunction

function SingleUnitData_serialize takes integer this_54, integer writer_2 returns nothing
	call SingleUnitData_serializeMandatory(this_54, writer_2)
	call SingleUnitData_serializeOptionals(this_54, writer_2)
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "serialized unit")
endfunction

function UnitDictionary_serialize takes integer this_54, integer writer_2 returns nothing
	local integer i_3
	local integer temp
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeShort(writer_2, UnitDictionary_currentId[this_54])
	set i_3 = 1
	set temp = UnitDictionary_currentId[this_54]
	loop
		exitwhen i_3 > temp
		call dispatch_DataWriter_DataInterfaces_DataWriter_writeString(writer_2, LoadStr(Table_ht, UnitDictionary_dictionary[this_54], i_3 - 1))
		set i_3 = i_3 + 1
	endloop
endfunction

function new_HLIterator takes integer list_2 returns integer
	local integer this_54
	if HLIterator_firstFree == 0 then
		if HLIterator_maxIndex < 32768 then
			set HLIterator_maxIndex = HLIterator_maxIndex + 1
			set this_54 = HLIterator_maxIndex
			set HLIterator_typeId[this_54] = 823
		else
			call error("Out of memory: Could not create HLIterator.")
			set this_54 = 0
		endif
	else
		set HLIterator_firstFree = HLIterator_firstFree - 1
		set this_54 = HLIterator_nextFree[HLIterator_firstFree]
		set HLIterator_typeId[this_54] = 823
	endif
	set HLIterator_i[this_54] = 0
	set HLIterator_list[this_54] = list_2
	return this_54
endfunction

function MultipleUnitData_serialize takes integer this_54, integer writer_2 returns nothing
	local integer iterator
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeInt(writer_2, HashList_size[MultipleUnitData_list[this_54]])
	set iterator = new_HLIterator(MultipleUnitData_list[this_54])
	loop
		exitwhen HLIterator_i[iterator] >= HashList_size[HLIterator_list[iterator]]
		set HLIterator_i[iterator] = HLIterator_i[iterator] + 1
		call SingleUnitData_serialize(LoadInteger(HashList_ht, HLIterator_list[iterator], HLIterator_i[iterator] - 1), writer_2)
	endloop
	if HLIterator_typeId[iterator] == 0 then
		call error("Double free: object of type HLIterator")
	else
		set HLIterator_nextFree[HLIterator_firstFree] = iterator
		set HLIterator_firstFree = HLIterator_firstFree + 1
		set HLIterator_typeId[iterator] = 0
	endif
	call UnitDictionary_serialize(MultipleUnitData_dictionary[this_54], writer_2)
endfunction

function PlayerSettings_serialize takes integer this_54, integer writer_2 returns nothing
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeByte(writer_2, PlayerSettings_preferredPlayerColor[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeBoolean(writer_2, PlayerSettings_preferredNameColorEnabled[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeByte(writer_2, PlayerSettings_preferredNameColor_red[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeByte(writer_2, PlayerSettings_preferredNameColor_green[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeByte(writer_2, PlayerSettings_preferredNameColor_blue[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeString(writer_2, PlayerSettings_preferredName[this_54])
endfunction

function TileData_serialize takes integer this_54, integer writer_2 returns nothing
	local integer iterator
	local integer iterator_2
	local integer HashList_HashList_get_result
	local integer Table_Table_loadInt_result
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeByte(writer_2, HashList_size[IterableMap_keys[TileData_tileMap[this_54]]])
	set iterator = new_HLIterator(IterableMap_keys[TileData_tileMap[this_54]])
	loop
		exitwhen HLIterator_i[iterator] >= HashList_size[HLIterator_list[iterator]]
		set HLIterator_i[iterator] = HLIterator_i[iterator] + 1
		set HashList_HashList_get_result = LoadInteger(HashList_ht, HLIterator_list[iterator], HLIterator_i[iterator] - 1)
		set Table_Table_loadInt_result = LoadInteger(Table_ht, TileData_tileMap[this_54], HashList_HashList_get_result)
		call dispatch_DataWriter_DataInterfaces_DataWriter_writeByte(writer_2, HashList_HashList_get_result)
		call dispatch_DataWriter_DataInterfaces_DataWriter_writeInt(writer_2, Table_Table_loadInt_result)
	endloop
	if HLIterator_typeId[iterator] == 0 then
		call error("Double free: object of type HLIterator")
	else
		set HLIterator_nextFree[HLIterator_firstFree] = iterator
		set HLIterator_firstFree = HLIterator_firstFree + 1
		set HLIterator_typeId[iterator] = 0
	endif
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeShort(writer_2, LinkedList_size[TileData_cellList[this_54]])
	set iterator_2 = new_LLIterator_2(TileData_cellList[this_54])
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator_2]] == LLIterator_dummy[iterator_2]
		set LLIterator_current[iterator_2] = LLEntry_next[LLIterator_current[iterator_2]]
		call dispatch_DataWriter_DataInterfaces_DataWriter_writeString(writer_2, TerrainCell_data[LLEntry_elem[LLIterator_current[iterator_2]]])
	endloop
	if LLIterator_destroyOnClose[iterator_2] then
		if LLIterator_typeId[iterator_2] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator_2
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator_2] = 0
		endif
	endif
endfunction

function RegionSaveData_serialize takes integer this_54, integer writer_2 returns nothing
	local integer this_55
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeReal(writer_2, RegionSaveData_origin_x[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeReal(writer_2, RegionSaveData_origin_y[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeReal(writer_2, RegionSaveData_dimensions_x[this_54])
	call dispatch_DataWriter_DataInterfaces_DataWriter_writeReal(writer_2, RegionSaveData_dimensions_y[this_54])
	set this_55 = RegionSaveData_terrainData[this_54]
	call TileData_serialize(TerrainData_tiles[this_55], writer_2)
	call HeightData_serialize(TerrainData_height[this_55], writer_2)
	call MultipleUnitData_serialize(RegionSaveData_unitData[this_54], writer_2)
	call AtmosphericData_serialize(RegionSaveData_atmosphericData[this_54], writer_2)
endfunction

function dispatch_DataSerializable_DataInterfaces_DataSerializable_serialize takes integer this_54, integer dw returns nothing
	if DataSerializable_typeId[this_54] <= 751 then
		if DataSerializable_typeId[this_54] <= 748 then
			if DataSerializable_typeId[this_54] <= 747 then
				if DataSerializable_typeId[this_54] <= 746 then
					call AtmosphericData_serialize(this_54, dw)
				endif
			else
				call HeightData_serialize(this_54, dw)
			endif
		elseif DataSerializable_typeId[this_54] <= 749 then
			call MultipleUnitData_serialize(this_54, dw)
		else
			call PlayerSettings_serialize(this_54, dw)
		endif
	elseif DataSerializable_typeId[this_54] <= 754 then
		if DataSerializable_typeId[this_54] <= 753 then
			if DataSerializable_typeId[this_54] <= 752 then
				call RegionSaveData_serialize(this_54, dw)
			else
				call SingleUnitData_serialize(this_54, dw)
			endif
		else
			call TileData_serialize(TerrainData_tiles[this_54], dw)
			call HeightData_serialize(TerrainData_height[this_54], dw)
		endif
	elseif DataSerializable_typeId[this_54] <= 755 then
		call TileData_serialize(this_54, dw)
	else
		call UnitDictionary_serialize(this_54, dw)
	endif
endfunction

function new_Base64DataEncoder takes integer encoder_2 returns integer
	local integer this_54
	if DataEncoder_firstFree == 0 then
		if DataEncoder_maxIndex < 32768 then
			set DataEncoder_maxIndex = DataEncoder_maxIndex + 1
			set this_54 = DataEncoder_maxIndex
			set DataEncoder_typeId[this_54] = 740
		else
			call error("Out of memory: Could not create Base64DataEncoder.")
			set this_54 = 0
		endif
	else
		set DataEncoder_firstFree = DataEncoder_firstFree - 1
		set this_54 = DataEncoder_nextFree[DataEncoder_firstFree]
		set DataEncoder_typeId[this_54] = 740
	endif
	set Base64DataEncoder_encoder[this_54] = encoder_2
	return this_54
endfunction

function new_BigString takes integer maxLength returns integer
	local integer this_54
	if BigString_firstFree == 0 then
		if BigString_maxIndex < 32768 then
			set BigString_maxIndex = BigString_maxIndex + 1
			set this_54 = BigString_maxIndex
			set BigString_typeId[this_54] = 645
		else
			call error("Out of memory: Could not create BigString.")
			set this_54 = 0
		endif
	else
		set BigString_firstFree = BigString_firstFree - 1
		set this_54 = BigString_nextFree[BigString_firstFree]
		set BigString_typeId[this_54] = 645
	endif
	set BigString_currentWriteString[this_54] = ""
	set BigString_currentReadString[this_54] = ""
	set BigString_length[this_54] = 0
	if maxLength > 4096 then
		call error("BigString: maxLength needs to be under BIGSTRING_MAX_CHUNK_LENGTH.")
	endif
	set BigString_maxLength[this_54] = maxLength
	set BigString_data[this_54] = new_LinkedList()
	return this_54
endfunction

function new_Table takes nothing returns integer
	local integer this_54
	if Table_firstFree == 0 then
		if Table_maxIndex < 32768 then
			set Table_maxIndex = Table_maxIndex + 1
			set this_54 = Table_maxIndex
			set Table_typeId[this_54] = 982
		else
			call error("Out of memory: Could not create Table.")
			set this_54 = 0
		endif
	else
		set Table_firstFree = Table_firstFree - 1
		set this_54 = Table_nextFree[Table_firstFree]
		set Table_typeId[this_54] = 982
	endif
	return this_54
endfunction

function new_ByteBuffer takes nothing returns integer
	local integer this_54
	if ByteBuffer_firstFree == 0 then
		if ByteBuffer_maxIndex < 32768 then
			set ByteBuffer_maxIndex = ByteBuffer_maxIndex + 1
			set this_54 = ByteBuffer_maxIndex
			set ByteBuffer_typeId[this_54] = 653
		else
			call error("Out of memory: Could not create ByteBuffer.")
			set this_54 = 0
		endif
	else
		set ByteBuffer_firstFree = ByteBuffer_firstFree - 1
		set this_54 = ByteBuffer_nextFree[ByteBuffer_firstFree]
		set ByteBuffer_typeId[this_54] = 653
	endif
	set ByteBuffer_buffer[this_54] = new_Table()
	set ByteBuffer_currentWriteBytes_b1[this_54] = 0
	set ByteBuffer_currentWriteBytes_b2[this_54] = 0
	set ByteBuffer_currentWriteBytes_b3[this_54] = 0
	set ByteBuffer_currentWriteBytes_b4[this_54] = 0
	set ByteBuffer_currentWriteByteIndex[this_54] = 0
	set ByteBuffer_currentReadBytes_b1[this_54] = 0
	set ByteBuffer_currentReadBytes_b2[this_54] = 0
	set ByteBuffer_currentReadBytes_b3[this_54] = 0
	set ByteBuffer_currentReadBytes_b4[this_54] = 0
	set ByteBuffer_currentReadByteIndex[this_54] = 0
	set ByteBuffer_currentWriteIndex[this_54] = -1
	set ByteBuffer_currentReadIndex[this_54] = -1
	set ByteBuffer_byteCount[this_54] = 0
	return this_54
endfunction

function new_Base64Encoder takes integer maxChunkLength returns integer
	local integer this_54
	if Base64Encoder_firstFree == 0 then
		if Base64Encoder_maxIndex < 32768 then
			set Base64Encoder_maxIndex = Base64Encoder_maxIndex + 1
			set this_54 = Base64Encoder_maxIndex
			set Base64Encoder_typeId[this_54] = 637
		else
			call error("Out of memory: Could not create Base64Encoder.")
			set this_54 = 0
		endif
	else
		set Base64Encoder_firstFree = Base64Encoder_firstFree - 1
		set this_54 = Base64Encoder_nextFree[Base64Encoder_firstFree]
		set Base64Encoder_typeId[this_54] = 637
	endif
	set Base64Encoder_byteBuffer[this_54] = new_ByteBuffer()
	set Base64Encoder_stringBuffer[this_54] = new_BigString(maxChunkLength)
	return this_54
endfunction

function ByteBuffer_loadInt takes integer this_54 returns nothing
	local integer value_2
	local integer isNegative
	local integer Table_Table_loadInt_result
	set ByteBuffer_currentReadIndex[this_54] = ByteBuffer_currentReadIndex[this_54] + 1
	set Table_Table_loadInt_result = LoadInteger(Table_ht, ByteBuffer_buffer[this_54], ByteBuffer_currentReadIndex[this_54])
	set value_2 = Table_Table_loadInt_result
	set isNegative = 0
	if Table_Table_loadInt_result < 0 then
		set value_2 = -2147483648 + Table_Table_loadInt_result
		set isNegative = 1
	endif
	set ByteBuffer_currentReadBytes_b1[this_54] = ModuloInteger(value_2, 256)
	set ByteBuffer_currentReadBytes_b2[this_54] = (value_2 - value_2 / 65536 * 65536) / 256
	set ByteBuffer_currentReadBytes_b3[this_54] = (value_2 - value_2 / 16777216 * 16777216) / 65536
	set ByteBuffer_currentReadBytes_b4[this_54] = isNegative * 128 + value_2 / 16777216
	set ByteBuffer_currentReadByteIndex[this_54] = 0
endfunction

function construct_BigString2 takes integer this_54, integer data_2, integer maxLength returns nothing
	local integer iterator
	local integer elem
	set BigString_currentWriteString[this_54] = ""
	set BigString_currentReadString[this_54] = ""
	set BigString_length[this_54] = 0
	set iterator = new_LLIterator_2(data_2)
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
		set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
		set elem = LLEntry_elem[LLIterator_current[iterator]]
		if StringLength(BigStringElement_data[elem]) > maxLength then
			call error("BigString: trying to construct a BigString with one of the elements above the requested max size.")
		endif
		set BigString_length[this_54] = BigString_length[this_54] + StringLength(BigStringElement_data[elem])
	endloop
	if LLIterator_destroyOnClose[iterator] then
		if LLIterator_typeId[iterator] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator] = 0
		endif
	endif
	set BigString_maxLength[this_54] = maxLength
	set BigString_data[this_54] = data_2
endfunction

function executeWhileInternal takes integer resetCount_2, integer condition_2, integer action_2 returns nothing
	local integer this_54
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_54 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_54] = 792
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_54 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_54] = 792
	endif
	set condition[this_54] = condition_2
	set resetCount[this_54] = resetCount_2
	set action[this_54] = action_2
	if  not try(this_54) then
		call error("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
	endif
endfunction

function executeWhile takes integer resetCount_2, integer condition_2, integer action_2 returns nothing
	call executeWhileInternal(resetCount_2, condition_2, action_2)
	if LimitedExecuteCondition_typeId[condition_2] == 0 then
		call error("Double free: object of type LimitedExecuteCondition")
	else
		set LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree] = condition_2
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree + 1
		set LimitedExecuteCondition_typeId[condition_2] = 0
	endif
	if LimitedExecuteAction_typeId[action_2] == 0 then
		call error("Double free: object of type LimitedExecuteAction")
	else
		set LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree] = action_2
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree + 1
		set LimitedExecuteAction_typeId[action_2] = 0
	endif
endfunction

function Base64Decoder_decode takes integer this_54 returns nothing
	local integer count_3
	local integer data_2
	local integer this_55
	local integer this_56
	local integer this_57
	local integer this_58
	local integer this_59
	if Base64Decoder_stringBuffer[this_54] == 0 then
		set data_2 = Base64Decoder_chunkList[this_54]
		if BigString_firstFree == 0 then
			if BigString_maxIndex < 32768 then
				set BigString_maxIndex = BigString_maxIndex + 1
				set this_55 = BigString_maxIndex
				set BigString_typeId[this_55] = 645
			else
				call error("Out of memory: Could not create BigString.")
				set this_55 = 0
			endif
		else
			set BigString_firstFree = BigString_firstFree - 1
			set this_55 = BigString_nextFree[BigString_firstFree]
			set BigString_typeId[this_55] = 645
		endif
		call construct_BigString2(this_55, data_2, 4096)
		set Base64Decoder_stringBuffer[this_54] = this_55
	elseif Base64Decoder_chunkList[this_54] != 0 then
		set this_56 = Base64Decoder_chunkList[this_54]
		call LinkedList_onDestroy(this_56)
		if LinkedList_typeId[this_56] == 0 then
			call error("Double free: object of type LinkedList")
		else
			set LinkedList_nextFree[LinkedList_firstFree] = this_56
			set LinkedList_firstFree = LinkedList_firstFree + 1
			set LinkedList_typeId[this_56] = 0
		endif
	endif
	set Base64Decoder_chunkList[this_54] = 0
	set count_3 = BigString_length[Base64Decoder_stringBuffer[this_54]] / 4 - 1
	set Base64_loopCounter = 0
	set Base64_loopActions = count_3
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_57 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_57] = 869
		else
			call error("Out of memory: Could not create Closure.")
			set this_57 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_57 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_57] = 869
	endif
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_58 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_58] = 845
		else
			call error("Out of memory: Could not create Closure.")
			set this_58 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_58 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_58] = 845
	endif
	set this[this_58] = this_54
	call executeWhile(500, this_57, this_58)
	set this_59 = Base64Decoder_byteBuffer[this_54]
	if ByteBuffer_currentWriteByteIndex[this_59] > 0 then
		call ByteBuffer_commitInt(this_59)
	endif
	call ByteBuffer_loadInt(this_59)
endfunction

function Base64Decoder_onDestroy takes integer this_54 returns nothing
	local integer iterator
	local integer elem
	local integer this_55
	local integer this_56
	local integer this_57
	if Base64Decoder_byteBuffer[this_54] != 0 then
		set this_55 = Base64Decoder_byteBuffer[this_54]
		call dispatch_Table_destroyTable(ByteBuffer_buffer[this_55])
		if ByteBuffer_typeId[this_55] == 0 then
			call error("Double free: object of type ByteBuffer")
		else
			set ByteBuffer_nextFree[ByteBuffer_firstFree] = this_55
			set ByteBuffer_firstFree = ByteBuffer_firstFree + 1
			set ByteBuffer_typeId[this_55] = 0
		endif
	endif
	if Base64Decoder_stringBuffer[this_54] != 0 then
		set this_56 = Base64Decoder_stringBuffer[this_54]
		call BigString_onDestroy(this_56)
		if BigString_typeId[this_56] == 0 then
			call error("Double free: object of type BigString")
		else
			set BigString_nextFree[BigString_firstFree] = this_56
			set BigString_firstFree = BigString_firstFree + 1
			set BigString_typeId[this_56] = 0
		endif
	endif
	if Base64Decoder_chunkList[this_54] != 0 then
		set iterator = new_LLIterator_2(Base64Decoder_chunkList[this_54])
		loop
			exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
			set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
			set elem = LLEntry_elem[LLIterator_current[iterator]]
			if BigStringElement_typeId[elem] == 0 then
				call error("Double free: object of type BigStringElement")
			else
				set BigStringElement_nextFree[BigStringElement_firstFree] = elem
				set BigStringElement_firstFree = BigStringElement_firstFree + 1
				set BigStringElement_typeId[elem] = 0
			endif
		endloop
		if LLIterator_destroyOnClose[iterator] then
			if LLIterator_typeId[iterator] == 0 then
				call error("Double free: object of type LLIterator")
			else
				set LLIterator_nextFree[LLIterator_firstFree] = iterator
				set LLIterator_firstFree = LLIterator_firstFree + 1
				set LLIterator_typeId[iterator] = 0
			endif
		endif
		set this_57 = Base64Decoder_chunkList[this_54]
		call LinkedList_onDestroy(this_57)
		if LinkedList_typeId[this_57] == 0 then
			call error("Double free: object of type LinkedList")
		else
			set LinkedList_nextFree[LinkedList_firstFree] = this_57
			set LinkedList_firstFree = LinkedList_firstFree + 1
			set LinkedList_typeId[this_57] = 0
		endif
	endif
endfunction

function new_Base64Decoder takes integer data_2 returns integer
	local integer this_54
	if Base64Decoder_firstFree == 0 then
		if Base64Decoder_maxIndex < 32768 then
			set Base64Decoder_maxIndex = Base64Decoder_maxIndex + 1
			set this_54 = Base64Decoder_maxIndex
			set Base64Decoder_typeId[this_54] = 636
		else
			call error("Out of memory: Could not create Base64Decoder.")
			set this_54 = 0
		endif
	else
		set Base64Decoder_firstFree = Base64Decoder_firstFree - 1
		set this_54 = Base64Decoder_nextFree[Base64Decoder_firstFree]
		set Base64Decoder_typeId[this_54] = 636
	endif
	set Base64Decoder_byteBuffer[this_54] = new_ByteBuffer()
	set Base64Decoder_stringBuffer[this_54] = data_2
	return this_54
endfunction

function transform takes integer bs returns integer
	local integer decoder_2 = new_Base64Decoder(bs)
	local integer this_54
	local integer this_55
	local integer clVar
	local integer temp
	call Base64Decoder_decode(decoder_2)
	set bs = new_Base64Encoder(203)
	set XorEncryptor_keyPos = 0
	set XorEncryptor_counter = 0
	set XorEncryptor_counterMax = ByteBuffer_byteCount[Base64Decoder_byteBuffer[decoder_2]]
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_54 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_54] = 891
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_54 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_54] = 891
	endif
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_55 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_55] = 867
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_55 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_55] = 867
	endif
	set encoder[this_55] = bs
	set decoder[this_55] = decoder_2
	call executeWhile(1024, this_54, this_55)
	set clVar = alloc_Closure()
	set this_3[clVar] = bs
	if  not try(clVar) then
		call error("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
	endif
	call Base64Decoder_onDestroy(decoder_2)
	if Base64Decoder_typeId[decoder_2] == 0 then
		call error("Double free: object of type Base64Decoder")
	else
		set Base64Decoder_nextFree[Base64Decoder_firstFree] = decoder_2
		set Base64Decoder_firstFree = Base64Decoder_firstFree + 1
		set Base64Decoder_typeId[decoder_2] = 0
	endif
	set temp = Base64Encoder_stringBuffer[bs]
	set Base64Encoder_stringBuffer[bs] = 0
	call Base64Encoder_onDestroy(bs)
	if Base64Encoder_typeId[bs] == 0 then
		call error("Double free: object of type Base64Encoder")
	else
		set Base64Encoder_nextFree[Base64Encoder_firstFree] = bs
		set Base64Encoder_firstFree = Base64Encoder_firstFree + 1
		set Base64Encoder_typeId[bs] = 0
	endif
	return temp
endfunction

function Persistable_save takes integer this_54, integer callback_4 returns nothing
	local integer data_2
	local integer this_55
	local integer DataInterfaces_DataEncoder_encode_result
	local integer DataInterfaces_DataWriter_intoEncoder_result
	local integer temp
	local string Persistable_Persistable_getPath_result
	if Player_localPlayer == Persistable_owner[this_54] then
		if DataWriter_firstFree == 0 then
			if DataWriter_maxIndex < 32768 then
				set DataWriter_maxIndex = DataWriter_maxIndex + 1
				set this_55 = DataWriter_maxIndex
				set DataWriter_typeId[this_55] = 758
			else
				call error("Out of memory: Could not create Base64DataWriter.")
				set this_55 = 0
			endif
		else
			set DataWriter_firstFree = DataWriter_firstFree - 1
			set this_55 = DataWriter_nextFree[DataWriter_firstFree]
			set DataWriter_typeId[this_55] = 758
		endif
		set Base64DataWriter_encoder[this_55] = new_Base64Encoder(203)
		if DataWriter_typeId[this_55] <= 758 then
			call dispatch_DataSerializable_DataInterfaces_DataSerializable_serialize(this_54, this_55)
		else
			call dispatch_DataSerializable_DataInterfaces_DataSerializable_serialize(this_54, this_55)
		endif
		if DataWriter_typeId[this_55] <= 758 then
			set temp = Base64DataWriter_encoder[this_55]
			set Base64DataWriter_encoder[this_55] = 0
			call destroyBase64DataWriter(this_55)
			set DataInterfaces_DataWriter_intoEncoder_result = new_Base64DataEncoder(temp)
		else
			set DataInterfaces_DataWriter_intoEncoder_result = 0
		endif
		set DataInterfaces_DataEncoder_encode_result = Base64DataEncoder_encode(DataInterfaces_DataWriter_intoEncoder_result)
		set data_2 = DataInterfaces_DataEncoder_encode_result
		if Persistable_middleware[this_54] != 0 then
			set data_2 = transform(DataInterfaces_DataEncoder_encode_result)
		endif
		set PacketWriter_currentPacket = 1
		call PreloadGenClear()
		call PreloadGenStart()
		call PacketWriter_write(I2S(BigString_checksum(data_2)))
		call PacketWriter_write_2(data_2)
		if DataSerializable_typeId[this_54] <= 751 then
			set Persistable_Persistable_getPath_result = "yarp2/settings.pld"
		else
			set Persistable_Persistable_getPath_result = "yarp2/saves/" + RegionSaveData_name[this_54] + ".pld"
		endif
		call Preload("\" )\r\nendfunction\r\nfunction AAA takes nothing returns nothing \r\n//")
		call PreloadGenEnd(Persistable_Persistable_getPath_result)
	endif
	call Persistable_finishSave(this_54, callback_4)
endfunction

function PlayerSettings_applySettings takes integer this_54 returns nothing
	local string name
	local string cond_result
	local player this_55
	local integer this_green
	local integer this_blue
	local integer temp
	local string result_2
	local integer i_3
	local integer temp_2
	local integer temp_3
	local string result_3
	local integer i_4
	local integer temp_4
	local integer temp_5
	local string result_4
	local integer i_5
	local integer temp_6
	local string temp_7
	local string temp_8
	if PlayerSettings_preferredPlayerColor[this_54] != 255 then
		call SetPlayerColor(Persistable_owner[this_54], Playercolor_LOOKUP[PlayerSettings_preferredPlayerColor[this_54]])
	else
		call SetPlayerColor(Persistable_owner[this_54], Playercolor_LOOKUP[GetPlayerId(Persistable_owner[this_54])])
	endif
	if PlayerSettings_preferredName[this_54] == "" then
		set cond_result = GetPlayerName(Persistable_owner[this_54])
	else
		set cond_result = PlayerSettings_preferredName[this_54]
	endif
	set name = cond_result
	if PlayerSettings_preferredNameColorEnabled[this_54] then
		set this_55 = Persistable_owner[this_54]
		set this_green = PlayerSettings_preferredNameColor_green[this_54]
		set this_blue = PlayerSettings_preferredNameColor_blue[this_54]
		set temp = PlayerSettings_preferredNameColor_red[this_54]
		set result_2 = ""
		set i_3 = 1
		set temp_2 = 2
		loop
			exitwhen i_3 > temp_2
			set result_2 = Integer_hexs[ModuloInteger(temp, 16)] + result_2
			set temp = temp / 16
			set i_3 = i_3 + 1
		endloop
		set temp_7 = "|cff" + result_2
		set temp_3 = this_green
		set result_3 = ""
		set i_4 = 1
		set temp_4 = 2
		loop
			exitwhen i_4 > temp_4
			set result_3 = Integer_hexs[ModuloInteger(temp_3, 16)] + result_3
			set temp_3 = temp_3 / 16
			set i_4 = i_4 + 1
		endloop
		set temp_8 = temp_7 + result_3
		set temp_5 = this_blue
		set result_4 = ""
		set i_5 = 1
		set temp_6 = 2
		loop
			exitwhen i_5 > temp_6
			set result_4 = Integer_hexs[ModuloInteger(temp_5, 16)] + result_4
			set temp_5 = temp_5 / 16
			set i_5 = i_5 + 1
		endloop
		call SetPlayerName(this_55, temp_8 + result_4 + name + "|r")
	else
		call SetPlayerName(Persistable_owner[this_54], cond_result)
	endif
	set this_55 = null
endfunction

function PlayerSettings_onLoaded takes integer this_54, integer status returns nothing
	if status != 0 then
		if Player_localPlayer == Persistable_owner[this_54] then
			call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 30., "|c006d619e>> |rYour settings have been re-initialized.")
		endif
		call Persistable_save(this_54, 0)
		set PlayerSettings_preferredPlayerColor[this_54] = 255
		set PlayerSettings_preferredNameColor_red[this_54] = 0
		set PlayerSettings_preferredNameColor_green[this_54] = 0
		set PlayerSettings_preferredNameColor_blue[this_54] = 0
		set PlayerSettings_preferredNameColorEnabled[this_54] = false
		set PlayerSettings_preferredName[this_54] = ""
	elseif Player_localPlayer == Persistable_owner[this_54] then
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 30., "|c006d619e>> |rYour settings have been loaded.")
	endif
	call PlayerSettings_applySettings(this_54)
endfunction

function RegionSaveData_onLoaded takes integer this_54, integer status returns nothing
	if Player_localPlayer == Persistable_owner[this_54] then
		if status == 0 then
		elseif status == 1 then
			call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 30., "|c00b65e2bWarning >> |rCouldn't load the save file. No file exists or it has been corrupted.")
		elseif status == 2 then
			call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 30., "|c00b65e2bWarning >> |rCouldn't load the save file. It has been corrupted or is outdated.")
		endif
	endif
	if status == 0 then
		call SetRect(RegionSaveData_area[this_54], ( - (RegionSaveData_dimensions_x[this_54] / 2.)) + MapBounds_playableCenter_x, ( - (RegionSaveData_dimensions_y[this_54] / 2.)) + MapBounds_playableCenter_y, RegionSaveData_dimensions_x[this_54] / 2. + MapBounds_playableCenter_x, RegionSaveData_dimensions_y[this_54] / 2. + MapBounds_playableCenter_y)
		set RegionSaveData_valid[this_54] = true
	endif
endfunction

function dispatch_Persistable_Persistable_Persistable_onLoaded takes integer this_54, integer w_status returns nothing
	if DataSerializable_typeId[this_54] <= 751 then
		if DataSerializable_typeId[this_54] <= 750 then
		else
			call PlayerSettings_onLoaded(this_54, w_status)
		endif
	else
		call RegionSaveData_onLoaded(this_54, w_status)
	endif
endfunction

function Persistable_finishLoad takes integer this_54, integer status, integer callback_4 returns nothing
	call dispatch_Persistable_Persistable_Persistable_onLoaded(this_54, status)
	if callback_4 != 0 then
		call RegionCommands_closure_impl(callback_4, status)
		if PersistableLoadCallback_typeId[callback_4] == 0 then
			call error("Double free: object of type PersistableLoadCallback")
		else
			set PersistableLoadCallback_nextFree[PersistableLoadCallback_firstFree] = callback_4
			set PersistableLoadCallback_firstFree = PersistableLoadCallback_firstFree + 1
			set PersistableLoadCallback_typeId[callback_4] = 0
		endif
	endif
endfunction

function ByteBuffer_readByteInternal takes integer this_54 returns integer
	local integer pos
	local integer result_2
	local integer tuple_temp
	local integer tuple_temp_2
	local integer tuple_temp_3
	local integer tuple_temp_4
	if ByteBuffer_currentReadByteIndex[this_54] > 3 then
		call ByteBuffer_loadInt(this_54)
	endif
	set tuple_temp = ByteBuffer_currentReadBytes_b1[this_54]
	set tuple_temp_2 = ByteBuffer_currentReadBytes_b2[this_54]
	set tuple_temp_3 = ByteBuffer_currentReadBytes_b3[this_54]
	set tuple_temp_4 = ByteBuffer_currentReadBytes_b4[this_54]
	set pos = ByteBuffer_currentReadByteIndex[this_54]
	if pos > 1 then
		if pos == 3 then
			set result_2 = tuple_temp_4
		else
			set result_2 = tuple_temp_3
		endif
	elseif pos == 1 then
		set result_2 = tuple_temp_2
	else
		set result_2 = tuple_temp
	endif
	set ByteBuffer_currentReadByteIndex[this_54] = ByteBuffer_currentReadByteIndex[this_54] + 1
	return result_2
endfunction

function HashReader_readBoolean takes integer this_54 returns boolean
	local boolean Table_Table_loadBoolean_result
	if HashReader_booleanCount[this_54] <= HashReader_booleanReadIndex[this_54] then
		call error("trying to read boolean at position " + I2S(HashReader_booleanReadIndex[this_54]) + " out of " + I2S(HashReader_booleanCount[this_54]))
	endif
	set Table_Table_loadBoolean_result = LoadBoolean(Table_ht, HashReader_data[this_54], HashReader_booleanReadIndex[this_54])
	set HashReader_booleanReadIndex[this_54] = HashReader_booleanReadIndex[this_54] + 1
	return Table_Table_loadBoolean_result
endfunction

function dispatch_DataReader_DataInterfaces_DataReader_readBoolean takes integer this_54 returns boolean
	local boolean DataInterfaces_DataReader_readBoolean_result
	local boolean wval
	local integer this_55
	if DataReader_typeId[this_54] <= 743 then
		if DataReader_typeId[this_54] <= 742 then
			set DataInterfaces_DataReader_readBoolean_result = ByteBuffer_readByteInternal(Base64DataReader_buffer[this_54]) != 0
		else
			set wval = dispatch_DataReader_DataInterfaces_DataReader_readBoolean(HashDataProxyReader_source[this_54])
			set this_55 = HashDataProxyReader_proxyWriter[this_54]
			call SaveBoolean(Table_ht, HashWriter_data[this_55], HashWriter_booleanWriteIndex[this_55], wval)
			set HashWriter_booleanWriteIndex[this_55] = HashWriter_booleanWriteIndex[this_55] + 1
			set DataInterfaces_DataReader_readBoolean_result = wval
		endif
	else
		set DataInterfaces_DataReader_readBoolean_result = HashReader_readBoolean(this_54)
	endif
	return DataInterfaces_DataReader_readBoolean_result
endfunction

function ByteBuffer_readInt takes integer this_54 returns integer
	return ByteBuffer_readByteInternal(this_54) + ByteBuffer_readByteInternal(this_54) * BitwiseInit_powShift[8] + ByteBuffer_readByteInternal(this_54) * BitwiseInit_powShift[16] + ByteBuffer_readByteInternal(this_54) * BitwiseInit_powShift[24]
endfunction

function dispatch_DataReader_DataInterfaces_DataReader_readInt takes integer this_54 returns integer
	local integer DataInterfaces_DataReader_readInt_result
	local integer wval
	local integer this_55
	if DataReader_typeId[this_54] <= 743 then
		if DataReader_typeId[this_54] <= 742 then
			set DataInterfaces_DataReader_readInt_result = ByteBuffer_readInt(Base64DataReader_buffer[this_54])
		else
			set wval = dispatch_DataReader_DataInterfaces_DataReader_readInt(HashDataProxyReader_source[this_54])
			set this_55 = HashDataProxyReader_proxyWriter[this_54]
			call SaveInteger(Table_ht, HashWriter_data[this_55], HashWriter_integerWriteIndex[this_55], wval)
			set HashWriter_integerWriteIndex[this_55] = HashWriter_integerWriteIndex[this_55] + 1
			set DataInterfaces_DataReader_readInt_result = wval
		endif
	else
		set DataInterfaces_DataReader_readInt_result = HashReader_readInt(this_54)
	endif
	return DataInterfaces_DataReader_readInt_result
endfunction

function Base64DataReader_readReal takes integer this_54 returns real
	local integer ByteBuffer_ByteBuffer_readInt_result = ByteBuffer_readInt(Base64DataReader_buffer[this_54])
	local integer this_55 = Base64DataReader_buffer[this_54]
	local integer ByteBuffer_ByteBuffer_readShort_result = ByteBuffer_readByteInternal(this_55) + ByteBuffer_readByteInternal(this_55) * BitwiseInit_powShift[8]
	local real fractional = 0.
	if ByteBuffer_ByteBuffer_readShort_result > 0 then
		set fractional = 1. / (ByteBuffer_ByteBuffer_readShort_result * 1.)
	endif
	return ByteBuffer_ByteBuffer_readInt_result + fractional
endfunction

function HashReader_readReal takes integer this_54 returns real
	local real Table_Table_loadReal_result
	if HashReader_realCount[this_54] <= HashReader_realReadIndex[this_54] then
		call error("trying to read real at position " + I2S(HashReader_realReadIndex[this_54]) + " out of " + I2S(HashReader_realCount[this_54]))
	endif
	set Table_Table_loadReal_result = LoadReal(Table_ht, HashReader_data[this_54], HashReader_realReadIndex[this_54])
	set HashReader_realReadIndex[this_54] = HashReader_realReadIndex[this_54] + 1
	return Table_Table_loadReal_result
endfunction

function dispatch_DataReader_DataInterfaces_DataReader_readReal takes integer this_54 returns real
	local real DataInterfaces_DataReader_readReal_result
	local real wval
	local integer this_55
	if DataReader_typeId[this_54] <= 743 then
		if DataReader_typeId[this_54] <= 742 then
			set DataInterfaces_DataReader_readReal_result = Base64DataReader_readReal(this_54)
		else
			set wval = dispatch_DataReader_DataInterfaces_DataReader_readReal(HashDataProxyReader_source[this_54])
			set this_55 = HashDataProxyReader_proxyWriter[this_54]
			call SaveReal(Table_ht, HashWriter_data[this_55], HashWriter_realWriteIndex[this_55], wval)
			set HashWriter_realWriteIndex[this_55] = HashWriter_realWriteIndex[this_55] + 1
			set DataInterfaces_DataReader_readReal_result = wval
		endif
	else
		set DataInterfaces_DataReader_readReal_result = HashReader_readReal(this_54)
	endif
	return DataInterfaces_DataReader_readReal_result
endfunction

function char_toString takes integer this_c returns string
	if this_c > 127 then
		return ""
	endif
	return StringUtils_c2s[this_c]
endfunction

function Base64DataReader_readString takes integer this_54 returns string
	local integer this_55 = Base64DataReader_buffer[this_54]
	local string value_2 = ""
	local integer i_3 = 1
	local integer temp = ByteBuffer_readByteInternal(this_55) + ByteBuffer_readByteInternal(this_55) * BitwiseInit_powShift[8]
	loop
		exitwhen i_3 > temp
		set value_2 = value_2 + char_toString(ByteBuffer_readByteInternal(Base64DataReader_buffer[this_54]))
		set i_3 = i_3 + 1
	endloop
	return value_2
endfunction

function dispatch_DataReader_DataInterfaces_DataReader_readString takes integer this_54 returns string
	local string DataInterfaces_DataReader_readString_result
	local string wval
	local integer this_55
	if DataReader_typeId[this_54] <= 743 then
		if DataReader_typeId[this_54] <= 742 then
			set DataInterfaces_DataReader_readString_result = Base64DataReader_readString(this_54)
		else
			set wval = dispatch_DataReader_DataInterfaces_DataReader_readString(HashDataProxyReader_source[this_54])
			set this_55 = HashDataProxyReader_proxyWriter[this_54]
			call SaveStr(Table_ht, HashWriter_data[this_55], HashWriter_stringWriteIndex[this_55], wval)
			set HashWriter_stringWriteIndex[this_55] = HashWriter_stringWriteIndex[this_55] + 1
			set DataInterfaces_DataReader_readString_result = wval
		endif
	else
		set DataInterfaces_DataReader_readString_result = HashReader_readString(this_54)
	endif
	return DataInterfaces_DataReader_readString_result
endfunction

function AtmosphericData_deserialize takes integer this_54, integer reader_2 returns nothing
	if dispatch_DataReader_DataInterfaces_DataReader_readBoolean(reader_2) then
		set AtmosphericData_dnc[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readString(reader_2)
	endif
	set AtmosphericData_fog_state[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readBoolean(reader_2)
	set AtmosphericData_fog_r[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readReal(reader_2)
	set AtmosphericData_fog_g[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readReal(reader_2)
	set AtmosphericData_fog_b[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readReal(reader_2)
	set AtmosphericData_fog_min[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readReal(reader_2)
	set AtmosphericData_fog_max[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readReal(reader_2)
	set AtmosphericData_corrector_state[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readBoolean(reader_2)
	set AtmosphericData_corrector_r[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readInt(reader_2)
	set AtmosphericData_corrector_g[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readInt(reader_2)
	set AtmosphericData_corrector_b[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readInt(reader_2)
	set AtmosphericData_weatherId[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readInt(reader_2)
endfunction

function dispatch_DataReader_DataInterfaces_DataReader_readShort takes integer this_54 returns integer
	local integer DataInterfaces_DataReader_readShort_result
	local integer this_55
	local integer wval
	local integer this_56
	if DataReader_typeId[this_54] <= 743 then
		if DataReader_typeId[this_54] <= 742 then
			set this_55 = Base64DataReader_buffer[this_54]
			set DataInterfaces_DataReader_readShort_result = ByteBuffer_readByteInternal(this_55) + ByteBuffer_readByteInternal(this_55) * BitwiseInit_powShift[8]
		else
			set wval = dispatch_DataReader_DataInterfaces_DataReader_readShort(HashDataProxyReader_source[this_54])
			set this_56 = HashDataProxyReader_proxyWriter[this_54]
			call SaveInteger(Table_ht, HashWriter_data[this_56], HashWriter_integerWriteIndex[this_56], wval)
			set HashWriter_integerWriteIndex[this_56] = HashWriter_integerWriteIndex[this_56] + 1
			set DataInterfaces_DataReader_readShort_result = wval
		endif
	else
		set DataInterfaces_DataReader_readShort_result = HashReader_readInt(this_54)
	endif
	return DataInterfaces_DataReader_readShort_result
endfunction

function new_HashReader takes integer data_2, integer integerCount, integer realCount, integer stringCount, integer booleanCount returns integer
	local integer this_54
	if DataReader_firstFree == 0 then
		if DataReader_maxIndex < 32768 then
			set DataReader_maxIndex = DataReader_maxIndex + 1
			set this_54 = DataReader_maxIndex
			set DataReader_typeId[this_54] = 744
		else
			call error("Out of memory: Could not create HashReader.")
			set this_54 = 0
		endif
	else
		set DataReader_firstFree = DataReader_firstFree - 1
		set this_54 = DataReader_nextFree[DataReader_firstFree]
		set DataReader_typeId[this_54] = 744
	endif
	set HashReader_integerReadIndex[this_54] = 0
	set HashReader_realReadIndex[this_54] = 0
	set HashReader_stringReadIndex[this_54] = 0
	set HashReader_booleanReadIndex[this_54] = 0
	set HashReader_integerCount[this_54] = 0
	set HashReader_realCount[this_54] = 0
	set HashReader_stringCount[this_54] = 0
	set HashReader_booleanCount[this_54] = 0
	set HashReader_data[this_54] = data_2
	set HashReader_integerCount[this_54] = integerCount
	set HashReader_realCount[this_54] = realCount
	set HashReader_stringCount[this_54] = stringCount
	set HashReader_booleanCount[this_54] = booleanCount
	return this_54
endfunction

function new_HashWriter takes nothing returns integer
	local integer this_54
	if DataWriter_firstFree == 0 then
		if DataWriter_maxIndex < 32768 then
			set DataWriter_maxIndex = DataWriter_maxIndex + 1
			set this_54 = DataWriter_maxIndex
			set DataWriter_typeId[this_54] = 759
		else
			call error("Out of memory: Could not create HashWriter.")
			set this_54 = 0
		endif
	else
		set DataWriter_firstFree = DataWriter_firstFree - 1
		set this_54 = DataWriter_nextFree[DataWriter_firstFree]
		set DataWriter_typeId[this_54] = 759
	endif
	set HashWriter_data[this_54] = new_Table()
	set HashWriter_integerWriteIndex[this_54] = 0
	set HashWriter_realWriteIndex[this_54] = 0
	set HashWriter_stringWriteIndex[this_54] = 0
	set HashWriter_booleanWriteIndex[this_54] = 0
	return this_54
endfunction

function HeightData_deserialize takes integer this_54, integer reader_2 returns nothing
	local integer writer_2 = new_HashWriter()
	local integer size = dispatch_DataReader_DataInterfaces_DataReader_readInt(reader_2)
	local integer i_3 = 1
	local integer temp = size
	local integer number
	local integer reader_3
	loop
		exitwhen i_3 > temp
		set number = dispatch_DataReader_DataInterfaces_DataReader_readShort(reader_2)
		call SaveInteger(Table_ht, HashWriter_data[writer_2], HashWriter_integerWriteIndex[writer_2], number)
		set HashWriter_integerWriteIndex[writer_2] = HashWriter_integerWriteIndex[writer_2] + 1
		set i_3 = i_3 + 1
	endloop
	set HeightData_size[this_54] = size
	set reader_3 = new_HashReader(HashWriter_data[writer_2], HashWriter_integerWriteIndex[writer_2], HashWriter_realWriteIndex[writer_2], HashWriter_stringWriteIndex[writer_2], HashWriter_booleanWriteIndex[writer_2])
	set HashWriter_data[writer_2] = 0
	call destroyHashWriter(writer_2)
	set HeightData_reader[this_54] = reader_3
endfunction

function dispatch_DataReader_DataInterfaces_DataReader_readByte takes integer this_54 returns integer
	local integer DataInterfaces_DataReader_readByte_result
	local integer wval
	local integer this_55
	if DataReader_typeId[this_54] <= 743 then
		if DataReader_typeId[this_54] <= 742 then
			set DataInterfaces_DataReader_readByte_result = ByteBuffer_readByteInternal(Base64DataReader_buffer[this_54])
		else
			set wval = dispatch_DataReader_DataInterfaces_DataReader_readByte(HashDataProxyReader_source[this_54])
			set this_55 = HashDataProxyReader_proxyWriter[this_54]
			call SaveInteger(Table_ht, HashWriter_data[this_55], HashWriter_integerWriteIndex[this_55], wval)
			set HashWriter_integerWriteIndex[this_55] = HashWriter_integerWriteIndex[this_55] + 1
			set DataInterfaces_DataReader_readByte_result = wval
		endif
	else
		set DataInterfaces_DataReader_readByte_result = HashReader_readInt(this_54)
	endif
	return DataInterfaces_DataReader_readByte_result
endfunction

function SingleUnitData_deserializeMandatory takes integer this_54, integer reader_2 returns nothing
	local real tuple_temp
	local real tuple_temp_2
	set SingleUnitData_dictionaryId[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readShort(reader_2)
	set tuple_temp = dispatch_DataReader_DataInterfaces_DataReader_readReal(reader_2)
	set tuple_temp_2 = dispatch_DataReader_DataInterfaces_DataReader_readReal(reader_2)
	set SingleUnitData_pos_x[this_54] = tuple_temp
	set SingleUnitData_pos_y[this_54] = tuple_temp_2
	set SingleUnitData_playerColorId[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readByte(reader_2)
	set SingleUnitData_size[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readReal(reader_2)
endfunction

function SingleUnitData_deserializeOptionals takes integer this_54, integer reader_2 returns nothing
	local integer tuple_temp = dispatch_DataReader_DataInterfaces_DataReader_readInt(reader_2)
	local integer flags_val = tuple_temp
	local integer this_val = tuple_temp
	local integer this_55 = 2
	local integer result_2 = 1
	local integer i_3 = 1
	local integer temp = 1
	local integer this_val_2
	local integer this_56
	local integer result_3
	local integer i_4
	local integer temp_2
	local integer this_val_3
	local integer this_57
	local integer result_4
	local integer i_5
	local integer temp_3
	local integer this_val_4
	local integer this_58
	local integer result_5
	local integer i_6
	local integer temp_4
	local integer this_val_5
	local integer this_59
	local integer result_6
	local integer i_7
	local integer temp_5
	local integer this_val_6
	local integer this_60
	local integer result_7
	local integer i_8
	local integer temp_6
	local integer this_val_7
	local integer this_61
	local integer result_8
	local integer i_9
	local integer temp_7
	local integer this_val_8
	local integer this_62
	local integer result_9
	local integer i_10
	local integer temp_8
	local integer tuple_temp_2
	local integer tuple_temp_3
	local integer tuple_temp_4
	local integer tuple_temp_5
	loop
		exitwhen i_3 > temp
		set result_2 = result_2 * this_55
		set i_3 = i_3 + 1
	endloop
	if ModuloInteger(this_val, result_2 * 2) >= result_2 then
		set SingleUnitData_customName[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readString(reader_2)
	endif
	set this_val_2 = flags_val
	set this_56 = 2
	set result_3 = 1
	set i_4 = 1
	set temp_2 = 0
	loop
		exitwhen i_4 > temp_2
		set result_3 = result_3 * this_56
		set i_4 = i_4 + 1
	endloop
	if ModuloInteger(this_val_2, result_3 * 2) >= result_3 then
		set SingleUnitData_customHeroName[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readString(reader_2)
	endif
	set this_val_3 = flags_val
	set this_57 = 2
	set result_4 = 1
	set i_5 = 1
	set temp_3 = 2
	loop
		exitwhen i_5 > temp_3
		set result_4 = result_4 * this_57
		set i_5 = i_5 + 1
	endloop
	if ModuloInteger(this_val_3, result_4 * 2) >= result_4 then
		set SingleUnitData_maxLife[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readInt(reader_2)
	endif
	set this_val_4 = flags_val
	set this_58 = 2
	set result_5 = 1
	set i_6 = 1
	set temp_4 = 3
	loop
		exitwhen i_6 > temp_4
		set result_5 = result_5 * this_58
		set i_6 = i_6 + 1
	endloop
	if ModuloInteger(this_val_4, result_5 * 2) >= result_5 then
		set SingleUnitData_maxMana[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readInt(reader_2)
	endif
	set this_val_5 = flags_val
	set this_59 = 2
	set result_6 = 1
	set i_7 = 1
	set temp_5 = 4
	loop
		exitwhen i_7 > temp_5
		set result_6 = result_6 * this_59
		set i_7 = i_7 + 1
	endloop
	if ModuloInteger(this_val_5, result_6 * 2) >= result_6 then
		set SingleUnitData_damage[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readInt(reader_2)
	endif
	set this_val_6 = flags_val
	set this_60 = 2
	set result_7 = 1
	set i_8 = 1
	set temp_6 = 5
	loop
		exitwhen i_8 > temp_6
		set result_7 = result_7 * this_60
		set i_8 = i_8 + 1
	endloop
	if ModuloInteger(this_val_6, result_7 * 2) >= result_7 then
		set SingleUnitData_attackCooldown[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readReal(reader_2)
	endif
	set this_val_7 = flags_val
	set this_61 = 2
	set result_8 = 1
	set i_9 = 1
	set temp_7 = 6
	loop
		exitwhen i_9 > temp_7
		set result_8 = result_8 * this_61
		set i_9 = i_9 + 1
	endloop
	if ModuloInteger(this_val_7, result_8 * 2) >= result_8 then
		set SingleUnitData_flyHeight[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readReal(reader_2)
	endif
	set this_val_8 = flags_val
	set this_62 = 2
	set result_9 = 1
	set i_10 = 1
	set temp_8 = 7
	loop
		exitwhen i_10 > temp_8
		set result_9 = result_9 * this_62
		set i_10 = i_10 + 1
	endloop
	if ModuloInteger(this_val_8, result_9 * 2) >= result_9 then
		set tuple_temp_2 = dispatch_DataReader_DataInterfaces_DataReader_readByte(reader_2)
		set tuple_temp_3 = dispatch_DataReader_DataInterfaces_DataReader_readByte(reader_2)
		set tuple_temp_4 = dispatch_DataReader_DataInterfaces_DataReader_readByte(reader_2)
		set tuple_temp_5 = dispatch_DataReader_DataInterfaces_DataReader_readByte(reader_2)
		set SingleUnitData_tint_red[this_54] = tuple_temp_2
		set SingleUnitData_tint_green[this_54] = tuple_temp_3
		set SingleUnitData_tint_blue[this_54] = tuple_temp_4
		set SingleUnitData_tint_alpha[this_54] = tuple_temp_5
	endif
	set SingleUnitData_flags_val[this_54] = flags_val
endfunction

function SingleUnitData_deserialize takes integer this_54, integer reader_2 returns nothing
	call SingleUnitData_deserializeMandatory(this_54, reader_2)
	call SingleUnitData_deserializeOptionals(this_54, reader_2)
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "deserialized unit")
endfunction

function UnitDictionary_deserialize takes integer this_54, integer reader_2 returns nothing
	local integer i_3 = 1
	local integer temp = dispatch_DataReader_DataInterfaces_DataReader_readShort(reader_2)
	local string uid
	loop
		exitwhen i_3 > temp
		set uid = dispatch_DataReader_DataInterfaces_DataReader_readString(reader_2)
		call SaveStr(Table_ht, UnitDictionary_dictionary[this_54], i_3 - 1, uid)
		call SaveInteger(Table_ht, UnitDictionary_dictionary[this_54], StringHash(uid), i_3 - 1)
		set i_3 = i_3 + 1
	endloop
endfunction

function HashList_incrOccurences takes integer this_54, integer elem returns nothing
	call SaveInteger(HashList_occurences, this_54, elem, LoadInteger(HashList_occurences, this_54, elem) + 1)
endfunction

function HashSet_add_1 takes integer this_54, integer elems_0 returns nothing
	if LoadInteger(HashList_occurences, this_54, elems_0) <= 0 then
		call SaveInteger(HashSet_position, this_54, elems_0, HashList_size[this_54])
		call SaveInteger(HashList_ht, this_54, HashList_size[this_54], elems_0)
		call HashList_incrOccurences(this_54, elems_0)
		set HashList_size[this_54] = HashList_size[this_54] + 1
	endif
endfunction

function dispatch_HashList_HashList_HashList_add_1 takes integer this_54, integer elems_0 returns nothing
	if HashList_typeId[this_54] <= 824 then
		call SaveInteger(HashList_ht, this_54, HashList_size[this_54], elems_0)
		call HashList_incrOccurences(this_54, elems_0)
		set HashList_size[this_54] = HashList_size[this_54] + 1
	else
		call HashSet_add_1(this_54, elems_0)
	endif
endfunction

function new_SingleUnitData takes nothing returns integer
	local integer this_54
	if DataSerializable_firstFree == 0 then
		if DataSerializable_maxIndex < 32768 then
			set DataSerializable_maxIndex = DataSerializable_maxIndex + 1
			set this_54 = DataSerializable_maxIndex
			set DataSerializable_typeId[this_54] = 753
		else
			call error("Out of memory: Could not create SingleUnitData.")
			set this_54 = 0
		endif
	else
		set DataSerializable_firstFree = DataSerializable_firstFree - 1
		set this_54 = DataSerializable_nextFree[DataSerializable_firstFree]
		set DataSerializable_typeId[this_54] = 753
	endif
	return this_54
endfunction

function MultipleUnitData_deserialize takes integer this_54, integer reader_2 returns nothing
	local integer i_3 = 0
	local integer temp = dispatch_DataReader_DataInterfaces_DataReader_readInt(reader_2) - 1
	local integer data_2
	loop
		exitwhen i_3 > temp
		set data_2 = new_SingleUnitData()
		call SingleUnitData_deserialize(data_2, reader_2)
		call dispatch_HashList_HashList_HashList_add_1(MultipleUnitData_list[this_54], data_2)
		set i_3 = i_3 + 1
	endloop
	call UnitDictionary_deserialize(MultipleUnitData_dictionary[this_54], reader_2)
endfunction

function PlayerSettings_deserialize takes integer this_54, integer reader_2 returns nothing
	set PlayerSettings_preferredPlayerColor[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readByte(reader_2)
	set PlayerSettings_preferredNameColorEnabled[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readBoolean(reader_2)
	set PlayerSettings_preferredNameColor_red[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readByte(reader_2)
	set PlayerSettings_preferredNameColor_green[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readByte(reader_2)
	set PlayerSettings_preferredNameColor_blue[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readByte(reader_2)
	set PlayerSettings_preferredName[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readString(reader_2)
endfunction

function IterableMap_put takes integer this_54, integer key, integer value_2 returns nothing
	call SaveInteger(Table_ht, this_54, key, value_2)
	if LoadInteger(HashList_occurences, IterableMap_keys[this_54], key) <= 0 then
		call dispatch_HashList_HashList_HashList_add_1(IterableMap_keys[this_54], key)
	endif
endfunction

function new_TerrainCell takes string data_2 returns integer
	local integer this_54
	if TerrainCell_firstFree == 0 then
		if TerrainCell_maxIndex < 32768 then
			set TerrainCell_maxIndex = TerrainCell_maxIndex + 1
			set this_54 = TerrainCell_maxIndex
			set TerrainCell_typeId[this_54] = 986
		else
			call error("Out of memory: Could not create TerrainCell.")
			set this_54 = 0
		endif
	else
		set TerrainCell_firstFree = TerrainCell_firstFree - 1
		set this_54 = TerrainCell_nextFree[TerrainCell_firstFree]
		set TerrainCell_typeId[this_54] = 986
	endif
	set TerrainCell_current[this_54] = 0
	set TerrainCell_data[this_54] = data_2
	return this_54
endfunction

function TileData_deserialize takes integer this_54, integer reader_2 returns nothing
	local integer count_3 = dispatch_DataReader_DataInterfaces_DataReader_readByte(reader_2)
	local integer i_3 = 1
	local integer temp = count_3
	local integer key
	local integer wval
	local integer i_4
	local integer temp_2
	local string cell
	local integer this_55
	local integer entry
	loop
		exitwhen i_3 > temp
		set key = dispatch_DataReader_DataInterfaces_DataReader_readByte(reader_2)
		set wval = dispatch_DataReader_DataInterfaces_DataReader_readInt(reader_2)
		call IterableMap_put(TileData_tileMap[this_54], key, wval)
		set i_3 = i_3 + 1
	endloop
	set count_3 = dispatch_DataReader_DataInterfaces_DataReader_readShort(reader_2)
	set i_4 = 1
	set temp_2 = count_3
	loop
		exitwhen i_4 > temp_2
		set cell = dispatch_DataReader_DataInterfaces_DataReader_readString(reader_2)
		set this_55 = TileData_cellList[this_54]
		set entry = new_LLEntry(new_TerrainCell(cell), LLEntry_prev[LinkedList_dummy[this_55]], LinkedList_dummy[this_55])
		set LLEntry_next[LLEntry_prev[LinkedList_dummy[this_55]]] = entry
		set LLEntry_prev[LinkedList_dummy[this_55]] = entry
		set LinkedList_size[this_55] = LinkedList_size[this_55] + 1
		set i_4 = i_4 + 1
	endloop
endfunction

function RegionSaveData_deserialize takes integer this_54, integer reader_2 returns nothing
	local integer this_55
	set RegionSaveData_origin_x[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readReal(reader_2)
	set RegionSaveData_origin_y[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readReal(reader_2)
	set RegionSaveData_dimensions_x[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readReal(reader_2)
	set RegionSaveData_dimensions_y[this_54] = dispatch_DataReader_DataInterfaces_DataReader_readReal(reader_2)
	set this_55 = RegionSaveData_terrainData[this_54]
	call TileData_deserialize(TerrainData_tiles[this_55], reader_2)
	call HeightData_deserialize(TerrainData_height[this_55], reader_2)
	call MultipleUnitData_deserialize(RegionSaveData_unitData[this_54], reader_2)
	call AtmosphericData_deserialize(RegionSaveData_atmosphericData[this_54], reader_2)
endfunction

function dispatch_DataSerializable_DataInterfaces_DataSerializable_deserialize takes integer this_54, integer dr returns nothing
	if DataSerializable_typeId[this_54] <= 751 then
		if DataSerializable_typeId[this_54] <= 748 then
			if DataSerializable_typeId[this_54] <= 747 then
				if DataSerializable_typeId[this_54] <= 746 then
					call AtmosphericData_deserialize(this_54, dr)
				endif
			else
				call HeightData_deserialize(this_54, dr)
			endif
		elseif DataSerializable_typeId[this_54] <= 749 then
			call MultipleUnitData_deserialize(this_54, dr)
		else
			call PlayerSettings_deserialize(this_54, dr)
		endif
	elseif DataSerializable_typeId[this_54] <= 754 then
		if DataSerializable_typeId[this_54] <= 753 then
			if DataSerializable_typeId[this_54] <= 752 then
				call RegionSaveData_deserialize(this_54, dr)
			else
				call SingleUnitData_deserialize(this_54, dr)
			endif
		else
			call TileData_deserialize(TerrainData_tiles[this_54], dr)
			call HeightData_deserialize(TerrainData_height[this_54], dr)
		endif
	elseif DataSerializable_typeId[this_54] <= 755 then
		call TileData_deserialize(this_54, dr)
	else
		call UnitDictionary_deserialize(this_54, dr)
	endif
endfunction

function Persistable_closure_impl takes integer this_54, integer status, integer reader_2 returns nothing
	if status == 1 then
		call Persistable_finishLoad(this_41[this_54], 3, callback_3[this_54])
	else
		set status = HashReader_readInt(reader_2)
		if status == 0 then
			if Player_localPlayer != Persistable_owner[this_41[this_54]] then
				call dispatch_DataSerializable_DataInterfaces_DataSerializable_deserialize(this_41[this_54], reader_2)
			endif
			call Persistable_finishLoad(this_41[this_54], 0, callback_3[this_54])
		else
			call Persistable_finishLoad(this_41[this_54], status, callback_3[this_54])
		endif
	endif
endfunction

function dispatch_NetworkFinishedCallback_Network_NetworkFinishedCallback_onFinish takes integer this_54, integer status, integer buffer returns nothing
	local integer buffer_2
	local integer i_3
	local integer temp
	if NetworkFinishedCallback_typeId[this_54] <= 904 then
		if NetworkFinishedCallback_typeId[this_54] <= 903 then
			if NetworkFinishedCallback_typeId[this_54] <= 902 then
				call error("Network: did not specify any callback function")
			else
				call Persistable_closure_impl(this_54, status, buffer)
			endif
		else
			set buffer_2 = buffer
			if Player_localPlayer != owner_2[this_54] then
				set i_3 = 0
				set temp = count_2[this_54]
				loop
					exitwhen i_3 > temp
					call HashReader_readInt(buffer_2)
					set i_3 = i_3 + 1
				endloop
			endif
		endif
	elseif NetworkFinishedCallback_typeId[this_54] <= 905 then
		if Player_localPlayer != owner_3[this_54] then
			call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "received " + HashReader_readString(buffer))
		endif
	else
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "network!")
	endif
endfunction

function Network_abort takes integer this_54 returns nothing
	call dispatch_NetworkFinishedCallback_Network_NetworkFinishedCallback_onFinish(Network_finishCallback[this_54], 1, 0)
	call Network_onDestroy(this_54)
	if Network_typeId[this_54] == 0 then
		call error("Double free: object of type Network")
	else
		set Network_nextFree[Network_firstFree] = this_54
		set Network_firstFree = Network_firstFree + 1
		set Network_typeId[this_54] = 0
	endif
endfunction

function GamecacheBuffer_getSynchronizerFunction takes integer this_54 returns integer
	local integer synchronizer_2 = 0
	local integer temp = GamecacheBuffer_bufferType[this_54]
	local integer this_55
	local integer this_56
	local integer this_57
	if temp == 0 then
		if SynchronizerFunction_firstFree == 0 then
			if SynchronizerFunction_maxIndex < 32768 then
				set SynchronizerFunction_maxIndex = SynchronizerFunction_maxIndex + 1
				set this_55 = SynchronizerFunction_maxIndex
				set SynchronizerFunction_typeId[this_55] = 979
			else
				call error("Out of memory: Could not create Closure.")
				set this_55 = 0
			endif
		else
			set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree - 1
			set this_55 = SynchronizerFunction_nextFree[SynchronizerFunction_firstFree]
			set SynchronizerFunction_typeId[this_55] = 979
		endif
		set this_7[this_55] = this_54
		set synchronizer_2 = this_55
	elseif temp == 1 then
		if SynchronizerFunction_firstFree == 0 then
			if SynchronizerFunction_maxIndex < 32768 then
				set SynchronizerFunction_maxIndex = SynchronizerFunction_maxIndex + 1
				set this_56 = SynchronizerFunction_maxIndex
				set SynchronizerFunction_typeId[this_56] = 980
			else
				call error("Out of memory: Could not create Closure.")
				set this_56 = 0
			endif
		else
			set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree - 1
			set this_56 = SynchronizerFunction_nextFree[SynchronizerFunction_firstFree]
			set SynchronizerFunction_typeId[this_56] = 980
		endif
		set this_8[this_56] = this_54
		set synchronizer_2 = this_56
	elseif temp == 2 then
		if SynchronizerFunction_firstFree == 0 then
			if SynchronizerFunction_maxIndex < 32768 then
				set SynchronizerFunction_maxIndex = SynchronizerFunction_maxIndex + 1
				set this_57 = SynchronizerFunction_maxIndex
				set SynchronizerFunction_typeId[this_57] = 981
			else
				call error("Out of memory: Could not create Closure.")
				set this_57 = 0
			endif
		else
			set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree - 1
			set this_57 = SynchronizerFunction_nextFree[SynchronizerFunction_firstFree]
			set SynchronizerFunction_typeId[this_57] = 981
		endif
		set this_9[this_57] = this_54
		set synchronizer_2 = this_57
	endif
	return synchronizer_2
endfunction

function GamecacheBuffer_sync takes integer this_54 returns nothing
	local integer GamecacheBuffer_GamecacheBuffer_getSynchronizerFunction_result = GamecacheBuffer_getSynchronizerFunction(this_54)
	local integer this_55
	local integer this_56
	set GamecacheBuffer_syncCounter[this_54] = 0
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_55 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_55] = 871
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_55 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_55] = 871
	endif
	set this_10[this_55] = this_54
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_56 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_56] = 847
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_56 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_56] = 847
	endif
	set synchronizer[this_56] = GamecacheBuffer_GamecacheBuffer_getSynchronizerFunction_result
	set this_11[this_56] = this_54
	call executeWhile(128, this_55, this_56)
	if SynchronizerFunction_typeId[GamecacheBuffer_GamecacheBuffer_getSynchronizerFunction_result] == 0 then
		call error("Double free: object of type SynchronizerFunction")
	else
		set SynchronizerFunction_nextFree[SynchronizerFunction_firstFree] = GamecacheBuffer_GamecacheBuffer_getSynchronizerFunction_result
		set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree + 1
		set SynchronizerFunction_typeId[GamecacheBuffer_GamecacheBuffer_getSynchronizerFunction_result] = 0
	endif
endfunction

function Network_writeBooleans takes integer this_54 returns nothing
	local integer this_55
	local integer this_56
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_55 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_55] = 880
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_55 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_55] = 880
	endif
	set this_26[this_55] = this_54
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_56 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_56] = 856
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_56 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_56] = 856
	endif
	set this_27[this_56] = this_54
	call executeWhile(128, this_55, this_56)
endfunction

function Network_writeInts takes integer this_54 returns nothing
	local integer this_55
	local integer this_56
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_55 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_55] = 876
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_55 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_55] = 876
	endif
	set this_18[this_55] = this_54
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_56 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_56] = 852
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_56 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_56] = 852
	endif
	set this_19[this_56] = this_54
	call executeWhile(128, this_55, this_56)
endfunction

function Network_writeReals takes integer this_54 returns nothing
	local integer this_55
	local integer this_56
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_55 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_55] = 878
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_55 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_55] = 878
	endif
	set this_22[this_55] = this_54
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_56 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_56] = 854
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_56 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_56] = 854
	endif
	set this_23[this_56] = this_54
	call executeWhile(128, this_55, this_56)
endfunction

function Network_writeStrings takes integer this_54 returns nothing
	local integer this_55
	local integer this_56
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_55 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_55] = 882
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_55 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_55] = 882
	endif
	set this_30[this_55] = this_54
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_56 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_56] = 858
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_56 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_56] = 858
	endif
	set this_31[this_56] = this_54
	call executeWhile(128, this_55, this_56)
endfunction

function bitset_add takes integer this_val, integer v returns integer
	local integer this_54 = 2
	local integer result_2 = 1
	local integer i_3 = 1
	local integer temp = v
	local integer cond_result_1
	loop
		exitwhen i_3 > temp
		set result_2 = result_2 * this_54
		set i_3 = i_3 + 1
	endloop
	if ModuloInteger(this_val, result_2 * 2) < result_2 then
		set cond_result_1 = this_val + result_2
	else
		set cond_result_1 = this_val
	endif
	set bitset_add_return_val = cond_result_1
	return bitset_add_return_val
endfunction

function SimpleSynchronizer_addOfflinePlayers takes integer this_54 returns nothing
	local integer i_3 = 0
	local integer temp = bj_MAX_PLAYER_SLOTS - 1
	local player this_55
	local boolean andLeft
	local integer tuple_temp
	loop
		exitwhen i_3 > temp
		set this_55 = Player_players[i_3]
		if GetPlayerSlotState(this_55) == PLAYER_SLOT_STATE_PLAYING then
			set andLeft = GetPlayerController(this_55) == MAP_CONTROL_USER
		else
			set andLeft = false
		endif
		if  not andLeft then
			set tuple_temp = bitset_add(SimpleSynchronizer_syncedPlayers_val[this_54], i_3)
			set SimpleSynchronizer_syncedPlayers_val[this_54] = tuple_temp
		endif
		set i_3 = i_3 + 1
	endloop
	set this_55 = null
endfunction

function getDummy takes nothing returns unit
	local unit receiver = CreateUnit(Basics_DUMMY_PLAYER, 1751543663, MapBounds_boundMax_x, MapBounds_boundMax_y, 0)
	call UnitAddAbility(receiver, 1097167976)
	call PauseUnit(receiver, true)
	call SetUnitScale(receiver, 0., 0., 0.)
	set getDummytempReturn = receiver
	set receiver = null
	return getDummytempReturn
endfunction

function construct_SimpleSynchronizer takes integer this_54 returns nothing
	set SimpleSynchronizer_syncedPlayers_val[this_54] = 0
	set SimpleSynchronizer_callback[this_54] = 0
	set SimpleSynchronizer_LinkedListModule_size = SimpleSynchronizer_LinkedListModule_size + 1
	if SimpleSynchronizer_LinkedListModule_size == 1 then
		set SimpleSynchronizer_LinkedListModule_first = this_54
		set SimpleSynchronizer_LinkedListModule_prev[this_54] = 0
	else
		set SimpleSynchronizer_LinkedListModule_prev[this_54] = SimpleSynchronizer_LinkedListModule_last
		set SimpleSynchronizer_LinkedListModule_next[SimpleSynchronizer_LinkedListModule_last] = this_54
		set SimpleSynchronizer_LinkedListModule_prev[SimpleSynchronizer_LinkedListModule_first] = this_54
	endif
	set SimpleSynchronizer_LinkedListModule_next[this_54] = 0
	set SimpleSynchronizer_LinkedListModule_last = this_54
	set SimpleSynchronizer_dummy[this_54] = getDummy()
	set SimpleSynchronizer_reverseLookup[GetUnitUserData(SimpleSynchronizer_dummy[this_54])] = this_54
endfunction

function new_SimpleSynchronizer takes nothing returns integer
	local integer this_54
	if SimpleSynchronizer_firstFree == 0 then
		if SimpleSynchronizer_maxIndex < 32768 then
			set SimpleSynchronizer_maxIndex = SimpleSynchronizer_maxIndex + 1
			set this_54 = SimpleSynchronizer_maxIndex
			set SimpleSynchronizer_typeId[this_54] = 956
		else
			call error("Out of memory: Could not create SimpleSynchronizer.")
			set this_54 = 0
		endif
	else
		set SimpleSynchronizer_firstFree = SimpleSynchronizer_firstFree - 1
		set this_54 = SimpleSynchronizer_nextFree[SimpleSynchronizer_firstFree]
		set SimpleSynchronizer_typeId[this_54] = 956
	endif
	call construct_SimpleSynchronizer(this_54)
	return this_54
endfunction

function player_onceSelect takes player this_54, unit what_2 returns nothing
	local integer this_55
	local unit u
	local unit u_2
	call GroupEnumUnitsSelected(Group_ENUM_GROUP, this_54, null)
	set SyncSimple_last = null
	set SyncSimple_count = 0
	if ForGroupCallback_firstFree == 0 then
		if ForGroupCallback_maxIndex < 32768 then
			set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
			set this_55 = ForGroupCallback_maxIndex
			set ForGroupCallback_typeId[this_55] = 816
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
		set this_55 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
		set ForGroupCallback_typeId[this_55] = 816
	endif
	set ClosureForGroups_tempCallbacks[ClosureForGroups_tempCallbacksCount] = this_55
	set ClosureForGroups_tempCallbacksCount = ClosureForGroups_tempCallbacksCount + 1
	call GroupEnumUnitsSelected(ClosureForGroups_DUMMY_GROUP, this_54, ClosureForGroups_filter)
	call popCallback()
	if SyncSimple_count >= 12 then
		set u = SyncSimple_last
		if Player_localPlayer == this_54 then
			call SelectUnit(u, false)
		endif
	endif
	if Player_localPlayer == this_54 then
		if Player_localPlayer == this_54 then
			call SelectUnit(what_2, true)
		endif
		if Player_localPlayer == this_54 then
			call SelectUnit(what_2, false)
		endif
	endif
	if SyncSimple_count >= 12 then
		set u_2 = SyncSimple_last
		if Player_localPlayer == this_54 then
			call SelectUnit(u_2, true)
		endif
	endif
	set u = null
	set u_2 = null
endfunction

function Network_sendRound takes integer this_54 returns nothing
	local integer synchronizer_2 = new_SimpleSynchronizer()
	local integer this_55 = Network_gcIntBuffer[this_54]
	local integer this_56
	local integer this_57
	local integer this_58
	local integer this_59
	set GamecacheBuffer_writeIndex[this_55] = -1
	set GamecacheBuffer_readIndex[this_55] = -1
	set this_56 = Network_gcRealBuffer[this_54]
	set GamecacheBuffer_writeIndex[this_56] = -1
	set GamecacheBuffer_readIndex[this_56] = -1
	set this_57 = Network_gcBooleanBuffer[this_54]
	set GamecacheBuffer_writeIndex[this_57] = -1
	set GamecacheBuffer_readIndex[this_57] = -1
	set this_58 = Network_gcStringBuffer[this_54]
	set GamecacheBuffer_writeIndex[this_58] = -1
	set GamecacheBuffer_readIndex[this_58] = -1
	call FlushStoredMission(Network_DATA_CACHE, Network_mkey[this_54])
	call FlushStoredMission(Network_STRING_CACHE, Network_mkey[this_54])
	if Player_localPlayer == Network_sender[this_54] then
		call Network_writeInts(this_54)
		call Network_writeBooleans(this_54)
		call Network_writeReals(this_54)
		call Network_writeStrings(this_54)
		call GamecacheBuffer_sync(Network_gcIntBuffer[this_54])
		call GamecacheBuffer_sync(Network_gcBooleanBuffer[this_54])
		call GamecacheBuffer_sync(Network_gcRealBuffer[this_54])
		call GamecacheBuffer_sync(Network_gcStringBuffer[this_54])
	endif
	call SimpleSynchronizer_addOfflinePlayers(synchronizer_2)
	call player_onceSelect(Player_localPlayer, SimpleSynchronizer_dummy[synchronizer_2])
	if SynchronizationCallback_firstFree == 0 then
		if SynchronizationCallback_maxIndex < 32768 then
			set SynchronizationCallback_maxIndex = SynchronizationCallback_maxIndex + 1
			set this_59 = SynchronizationCallback_maxIndex
			set SynchronizationCallback_typeId[this_59] = 977
		else
			call error("Out of memory: Could not create Closure.")
			set this_59 = 0
		endif
	else
		set SynchronizationCallback_firstFree = SynchronizationCallback_firstFree - 1
		set this_59 = SynchronizationCallback_nextFree[SynchronizationCallback_firstFree]
		set SynchronizationCallback_typeId[this_59] = 977
	endif
	set this_34[this_59] = this_54
	set SimpleSynchronizer_callback[synchronizer_2] = this_59
endfunction

function StringEncoder_encode takes integer this_54 returns nothing
	local integer this_55 = StringEncoder_inputWriter[this_54]
	local integer reader_2 = new_HashReader(HashWriter_data[this_55], HashWriter_integerWriteIndex[this_55], HashWriter_realWriteIndex[this_55], HashWriter_stringWriteIndex[this_55], HashWriter_booleanWriteIndex[this_55])
	local integer this_56
	local integer this_57
	local integer this_58
	local integer reader_3
	set HashWriter_data[this_55] = 0
	call destroyHashWriter(this_55)
	set StringEncoder_inputReader[this_54] = reader_2
	set StringEncoder_inputWriter[this_54] = 0
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_56 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_56] = 887
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_56 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_56] = 887
	endif
	set this_47[this_56] = this_54
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_57 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_57] = 863
		else
			call error("Out of memory: Could not create Closure.")
			set this_57 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_57 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_57] = 863
	endif
	set this_48[this_57] = this_54
	call executeWhile(128, this_56, this_57)
	set this_58 = StringEncoder_outputWriter[this_54]
	set reader_3 = new_HashReader(HashWriter_data[this_58], HashWriter_integerWriteIndex[this_58], HashWriter_realWriteIndex[this_58], HashWriter_stringWriteIndex[this_58], HashWriter_booleanWriteIndex[this_58])
	set HashWriter_data[this_58] = 0
	call destroyHashWriter(this_58)
	set StringEncoder_outputReader[this_54] = reader_3
	set StringEncoder_outputWriter[this_54] = 0
endfunction

function Network_sendMetadata takes integer this_54 returns nothing
	local player this_55 = Network_sender[this_54]
	local integer cond_result
	local integer temp
	local integer this_56
	local integer reader_2
	local integer this_57
	local integer this_58
	local integer result_2
	local integer result_3
	local integer result_4
	local integer result_5
	local integer cond_result_2
	local integer this_59
	local boolean andLeft
	local integer tuple_temp
	local integer tuple_temp_2
	local integer tuple_temp_3
	local integer tuple_temp_4
	if GetPlayerSlotState(this_55) == PLAYER_SLOT_STATE_PLAYING then
		set andLeft = GetPlayerController(this_55) == MAP_CONTROL_USER
	else
		set andLeft = false
	endif
	if  not andLeft then
		call Network_abort(this_54)
		set this_55 = null
		return
	endif
	if Player_localPlayer == Network_sender[this_54] then
		set this_56 = Network_dataWriter[this_54]
		set reader_2 = new_HashReader(HashWriter_data[this_56], HashWriter_integerWriteIndex[this_56], HashWriter_realWriteIndex[this_56], HashWriter_stringWriteIndex[this_56], HashWriter_booleanWriteIndex[this_56])
		set HashWriter_data[this_56] = 0
		call destroyHashWriter(this_56)
		set Network_dataReader[this_54] = reader_2
		set Network_dataWriter[this_54] = 0
		if LimitedExecuteCondition_firstFree == 0 then
			if LimitedExecuteCondition_maxIndex < 32768 then
				set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
				set this_57 = LimitedExecuteCondition_maxIndex
				set LimitedExecuteCondition_typeId[this_57] = 875
			else
				call error("Out of memory: Could not create Closure.")
				set this_57 = 0
			endif
		else
			set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
			set this_57 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
			set LimitedExecuteCondition_typeId[this_57] = 875
		endif
		set this_16[this_57] = this_54
		if LimitedExecuteAction_firstFree == 0 then
			if LimitedExecuteAction_maxIndex < 32768 then
				set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
				set this_58 = LimitedExecuteAction_maxIndex
				set LimitedExecuteAction_typeId[this_58] = 851
			else
				call error("Out of memory: Could not create Closure.")
				set this_58 = 0
			endif
		else
			set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
			set this_58 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
			set LimitedExecuteAction_typeId[this_58] = 851
		endif
		set this_17[this_58] = this_54
		call executeWhile(128, this_57, this_58)
		call StringEncoder_encode(Network_stringEncoder[this_54])
		set result_2 = HashReader_integerCount[Network_dataReader[this_54]]
		set result_3 = HashReader_realCount[Network_dataReader[this_54]]
		set result_4 = HashReader_booleanCount[Network_dataReader[this_54]]
		set result_5 = HashReader_integerCount[StringEncoder_outputReader[Network_stringEncoder[this_54]]]
		if result_2 > -2147483648 then
			set cond_result_2 = result_2
		else
			set cond_result_2 = -2147483648
		endif
		if result_3 > cond_result_2 then
			set cond_result_2 = result_3
		endif
		if result_4 > cond_result_2 then
			set cond_result_2 = result_4
		endif
		if result_5 > cond_result_2 then
			set cond_result_2 = result_5
		endif
		set temp = cond_result_2 / GamecacheKeys_count
		if ModuloInteger(cond_result_2, GamecacheKeys_count) > 0 then
			set cond_result = 1
		else
			set cond_result = 0
		endif
		set Network_meta_ints[this_54] = result_2
		set Network_meta_reals[this_54] = result_3
		set Network_meta_booleans[this_54] = result_4
		set Network_meta_asciiInts[this_54] = result_5
		set Network_meta_syncs[this_54] = temp + cond_result
		set Network_metaReceived[this_54] = true
		set this_59 = Network_metadataStore[this_54]
		set tuple_temp = Network_meta_reals[this_54]
		set tuple_temp_2 = Network_meta_booleans[this_54]
		set tuple_temp_3 = Network_meta_asciiInts[this_54]
		set tuple_temp_4 = Network_meta_syncs[this_54]
		call StoreInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_59], MetadataStore_META_INTEGER_KEY, Network_meta_ints[this_54])
		call StoreInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_59], MetadataStore_META_REAL_KEY, tuple_temp)
		call StoreInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_59], MetadataStore_META_BOOLEAN_KEY, tuple_temp_2)
		call StoreInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_59], MetadataStore_META_STRING_KEY, tuple_temp_3)
		call StoreInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_59], MetadataStore_META_SYNC_ROUNDS_KEY, tuple_temp_4)
		call MetadataStore_sync(Network_metadataStore[this_54])
	endif
	call Network_sendRound(this_54)
	set this_55 = null
endfunction

function Network_write takes integer this_54, integer callback_4 returns nothing
	local integer this_55
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_55 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_55] = 796
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_55 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_55] = 796
	endif
	set this_15[this_55] = this_54
	set callback_2[this_55] = callback_4
	if  not try(this_55) then
		call error("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
	endif
endfunction

function destroyBase64DataReader takes integer this_54 returns nothing
	local integer this_55
	if Base64DataReader_buffer[this_54] != 0 then
		set this_55 = Base64DataReader_buffer[this_54]
		call dispatch_Table_destroyTable(ByteBuffer_buffer[this_55])
		if ByteBuffer_typeId[this_55] == 0 then
			call error("Double free: object of type ByteBuffer")
		else
			set ByteBuffer_nextFree[ByteBuffer_firstFree] = this_55
			set ByteBuffer_firstFree = ByteBuffer_firstFree + 1
			set ByteBuffer_typeId[this_55] = 0
		endif
	endif
	if DataReader_typeId[this_54] == 0 then
		call error("Double free: object of type Base64DataReader")
	else
		set DataReader_nextFree[DataReader_firstFree] = this_54
		set DataReader_firstFree = DataReader_firstFree + 1
		set DataReader_typeId[this_54] = 0
	endif
endfunction

function dispatch_DataReader_destroyDataReader takes integer this_54 returns nothing
	if DataReader_typeId[this_54] <= 742 then
		if DataReader_typeId[this_54] <= 741 then
			if DataReader_typeId[this_54] == 0 then
				call error("Double free: object of type DataReader")
			else
				set DataReader_nextFree[DataReader_firstFree] = this_54
				set DataReader_firstFree = DataReader_firstFree + 1
				set DataReader_typeId[this_54] = 0
			endif
		else
			call destroyBase64DataReader(this_54)
		endif
	elseif DataReader_typeId[this_54] <= 743 then
		if DataReader_typeId[this_54] == 0 then
			call error("Double free: object of type HashDataProxyReader")
		else
			set DataReader_nextFree[DataReader_firstFree] = this_54
			set DataReader_firstFree = DataReader_firstFree + 1
			set DataReader_typeId[this_54] = 0
		endif
	else
		call dispatch_Table_destroyTable(HashReader_data[this_54])
		if DataReader_typeId[this_54] == 0 then
			call error("Double free: object of type HashReader")
		else
			set DataReader_nextFree[DataReader_firstFree] = this_54
			set DataReader_firstFree = DataReader_firstFree + 1
			set DataReader_typeId[this_54] = 0
		endif
	endif
endfunction

function Persistable_readIntoNetwork takes integer this_54, integer network_2 returns nothing
	local boolean readSuccess
	local integer reader_2
	local integer this_55
	local integer this_56
	local integer this_57
	local integer this_58
	local integer this_59
	local integer this_60
	if Box_firstFree == 0 then
		if Box_maxIndex < 32768 then
			set Box_maxIndex = Box_maxIndex + 1
			set this_55 = Box_maxIndex
			set Box_typeId[this_55] = 649
		else
			call error("Out of memory: Could not create Box.")
			set this_55 = 0
		endif
	else
		set Box_firstFree = Box_firstFree - 1
		set this_55 = Box_nextFree[Box_firstFree]
		set Box_typeId[this_55] = 649
	endif
	set Box_inner[this_55] = 0
	if Box_firstFree == 0 then
		if Box_maxIndex < 32768 then
			set Box_maxIndex = Box_maxIndex + 1
			set this_56 = Box_maxIndex
			set Box_typeId[this_56] = 649
		else
			call error("Out of memory: Could not create Box.")
			set this_56 = 0
		endif
	else
		set Box_firstFree = Box_firstFree - 1
		set this_56 = Box_nextFree[Box_firstFree]
		set Box_typeId[this_56] = 649
	endif
	set Box_inner[this_56] = 0
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_57 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_57] = 801
		else
			call error("Out of memory: Could not create Closure.")
			set this_57 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_57 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_57] = 801
	endif
	set this_39[this_57] = this_54
	set readerBox[this_57] = this_56
	set readSuccess = try(this_57)
	set reader_2 = Box_inner[this_56]
	if Box_typeId[this_56] == 0 then
		call error("Double free: object of type Box")
	else
		set Box_nextFree[Box_firstFree] = this_56
		set Box_firstFree = Box_firstFree + 1
		set Box_typeId[this_56] = 0
	endif
	if readSuccess and reader_2 != 0 then
		if NetworkWriteCallback_firstFree == 0 then
			if NetworkWriteCallback_maxIndex < 32768 then
				set NetworkWriteCallback_maxIndex = NetworkWriteCallback_maxIndex + 1
				set this_58 = NetworkWriteCallback_maxIndex
				set NetworkWriteCallback_typeId[this_58] = 908
			else
				call error("Out of memory: Could not create Closure.")
				set this_58 = 0
			endif
		else
			set NetworkWriteCallback_firstFree = NetworkWriteCallback_firstFree - 1
			set this_58 = NetworkWriteCallback_nextFree[NetworkWriteCallback_firstFree]
			set NetworkWriteCallback_typeId[this_58] = 908
		endif
		call Network_write(network_2, this_58)
		if ForForceCallback_firstFree == 0 then
			if ForForceCallback_maxIndex < 32768 then
				set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
				set this_59 = ForForceCallback_maxIndex
				set ForForceCallback_typeId[this_59] = 802
			else
				call error("Out of memory: Could not create Closure.")
				set this_59 = 0
			endif
		else
			set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
			set this_59 = ForForceCallback_nextFree[ForForceCallback_firstFree]
			set ForForceCallback_typeId[this_59] = 802
		endif
		set network[this_59] = network_2
		set reader[this_59] = reader_2
		set this_40[this_59] = this_54
		if try(this_59) then
			if Box_typeId[this_55] == 0 then
				call error("Double free: object of type Box")
			else
				set Box_nextFree[Box_firstFree] = this_55
				set Box_firstFree = Box_firstFree + 1
				set Box_typeId[this_55] = 0
			endif
			if reader_2 != 0 then
				call dispatch_DataReader_destroyDataReader(reader_2)
			endif
			return
		else
			set Box_inner[this_55] = 2
		endif
	else
		set Box_inner[this_55] = 1
	endif
	if NetworkWriteCallback_firstFree == 0 then
		if NetworkWriteCallback_maxIndex < 32768 then
			set NetworkWriteCallback_maxIndex = NetworkWriteCallback_maxIndex + 1
			set this_60 = NetworkWriteCallback_maxIndex
			set NetworkWriteCallback_typeId[this_60] = 909
		else
			call error("Out of memory: Could not create Closure.")
			set this_60 = 0
		endif
	else
		set NetworkWriteCallback_firstFree = NetworkWriteCallback_firstFree - 1
		set this_60 = NetworkWriteCallback_nextFree[NetworkWriteCallback_firstFree]
		set NetworkWriteCallback_typeId[this_60] = 909
	endif
	set statusBox[this_60] = this_55
	call Network_write(network_2, this_60)
	if Box_typeId[this_55] == 0 then
		call error("Double free: object of type Box")
	else
		set Box_nextFree[Box_firstFree] = this_55
		set Box_firstFree = Box_firstFree + 1
		set Box_typeId[this_55] = 0
	endif
	if reader_2 != 0 then
		call dispatch_DataReader_destroyDataReader(reader_2)
	endif
endfunction

function new_GamecacheBuffer takes gamecache gc, string parentKey, integer bufferType returns integer
	local integer this_54
	if GamecacheBuffer_firstFree == 0 then
		if GamecacheBuffer_maxIndex < 32768 then
			set GamecacheBuffer_maxIndex = GamecacheBuffer_maxIndex + 1
			set this_54 = GamecacheBuffer_maxIndex
			set GamecacheBuffer_typeId[this_54] = 821
		else
			call error("Out of memory: Could not create GamecacheBuffer.")
			set this_54 = 0
		endif
	else
		set GamecacheBuffer_firstFree = GamecacheBuffer_firstFree - 1
		set this_54 = GamecacheBuffer_nextFree[GamecacheBuffer_firstFree]
		set GamecacheBuffer_typeId[this_54] = 821
	endif
	set GamecacheBuffer_writeIndex[this_54] = -1
	set GamecacheBuffer_readIndex[this_54] = -1
	set GamecacheBuffer_syncCounter[this_54] = 0
	set GamecacheBuffer_gc[this_54] = gc
	set GamecacheBuffer_parentKey[this_54] = parentKey
	set GamecacheBuffer_bufferType[this_54] = bufferType
	return this_54
endfunction

function new_MetadataStore takes nothing returns integer
	local integer this_54
	if MetadataStore_firstFree == 0 then
		if MetadataStore_maxIndex < 32768 then
			set MetadataStore_maxIndex = MetadataStore_maxIndex + 1
			set this_54 = MetadataStore_maxIndex
			set MetadataStore_typeId[this_54] = 899
		else
			call error("Out of memory: Could not create MetadataStore.")
			set this_54 = 0
		endif
	else
		set MetadataStore_firstFree = MetadataStore_firstFree - 1
		set this_54 = MetadataStore_nextFree[MetadataStore_firstFree]
		set MetadataStore_typeId[this_54] = 899
	endif
	if this_54 >= GamecacheKeys_count then
		call error("Network: trying to get invalid GC key")
	endif
	set MetadataStore_mkey[this_54] = GamecacheKeys_keys[this_54]
	call FlushStoredMission(MetadataStore_META_CACHE, MetadataStore_mkey[this_54])
	return this_54
endfunction

function new_StringEncoder takes nothing returns integer
	local integer this_54
	if StringEncoder_firstFree == 0 then
		if StringEncoder_maxIndex < 32768 then
			set StringEncoder_maxIndex = StringEncoder_maxIndex + 1
			set this_54 = StringEncoder_maxIndex
			set StringEncoder_typeId[this_54] = 965
		else
			call error("Out of memory: Could not create StringEncoder.")
			set this_54 = 0
		endif
	else
		set StringEncoder_firstFree = StringEncoder_firstFree - 1
		set this_54 = StringEncoder_nextFree[StringEncoder_firstFree]
		set StringEncoder_typeId[this_54] = 965
	endif
	set StringEncoder_currentValue[this_54] = ""
	set StringEncoder_counter[this_54] = 0
	set StringEncoder_inputWriter[this_54] = new_HashWriter()
	set StringEncoder_outputWriter[this_54] = new_HashWriter()
	return this_54
endfunction

function construct_Network takes integer this_54, player sender returns nothing
	local integer this_55
	if this_54 >= GamecacheKeys_count then
		call error("Network: trying to get invalid GC key")
	endif
	set Network_mkey[this_54] = GamecacheKeys_keys[this_54]
	set Network_dataWriter[this_54] = new_HashWriter()
	set Network_stringEncoder[this_54] = new_StringEncoder()
	set Network_gcIntBuffer[this_54] = new_GamecacheBuffer(Network_DATA_CACHE, Network_mkey[this_54], 0)
	set Network_gcRealBuffer[this_54] = new_GamecacheBuffer(Network_DATA_CACHE, Network_mkey[this_54], 1)
	set Network_gcBooleanBuffer[this_54] = new_GamecacheBuffer(Network_DATA_CACHE, Network_mkey[this_54], 2)
	set Network_gcStringBuffer[this_54] = new_GamecacheBuffer(Network_STRING_CACHE, Network_mkey[this_54], 0)
	set Network_metadataStore[this_54] = new_MetadataStore()
	set Network_meta_ints[this_54] = 0
	set Network_meta_reals[this_54] = 0
	set Network_meta_booleans[this_54] = 0
	set Network_meta_asciiInts[this_54] = 0
	set Network_meta_syncs[this_54] = 0
	set Network_metaReceived[this_54] = false
	set Network_counters_ints[this_54] = 0
	set Network_counters_reals[this_54] = 0
	set Network_counters_booleans[this_54] = 0
	set Network_counters_asciiInts[this_54] = 0
	set Network_counters_syncs[this_54] = 0
	if NetworkFinishedCallback_firstFree == 0 then
		if NetworkFinishedCallback_maxIndex < 32768 then
			set NetworkFinishedCallback_maxIndex = NetworkFinishedCallback_maxIndex + 1
			set this_55 = NetworkFinishedCallback_maxIndex
			set NetworkFinishedCallback_typeId[this_55] = 902
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set NetworkFinishedCallback_firstFree = NetworkFinishedCallback_firstFree - 1
		set this_55 = NetworkFinishedCallback_nextFree[NetworkFinishedCallback_firstFree]
		set NetworkFinishedCallback_typeId[this_55] = 902
	endif
	set Network_finishCallback[this_54] = this_55
	set Network_sender[this_54] = sender
endfunction

function new_Network takes player sender returns integer
	local integer this_54
	if Network_firstFree == 0 then
		if Network_maxIndex < 32768 then
			set Network_maxIndex = Network_maxIndex + 1
			set this_54 = Network_maxIndex
			set Network_typeId[this_54] = 900
		else
			call error("Out of memory: Could not create Network.")
			set this_54 = 0
		endif
	else
		set Network_firstFree = Network_firstFree - 1
		set this_54 = Network_nextFree[Network_firstFree]
		set Network_typeId[this_54] = 900
	endif
	call construct_Network(this_54, sender)
	return this_54
endfunction

function Persistable_load takes integer this_54, integer callback_4 returns nothing
	local integer network_2 = new_Network(Persistable_owner[this_54])
	local integer this_55
	if Player_localPlayer == Persistable_owner[this_54] then
		call Persistable_readIntoNetwork(this_54, network_2)
	endif
	if NetworkFinishedCallback_firstFree == 0 then
		if NetworkFinishedCallback_maxIndex < 32768 then
			set NetworkFinishedCallback_maxIndex = NetworkFinishedCallback_maxIndex + 1
			set this_55 = NetworkFinishedCallback_maxIndex
			set NetworkFinishedCallback_typeId[this_55] = 903
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set NetworkFinishedCallback_firstFree = NetworkFinishedCallback_firstFree - 1
		set this_55 = NetworkFinishedCallback_nextFree[NetworkFinishedCallback_firstFree]
		set NetworkFinishedCallback_typeId[this_55] = 903
	endif
	set this_41[this_55] = this_54
	set callback_3[this_55] = callback_4
	set Network_finishCallback[network_2] = this_55
	call Network_sendMetadata(network_2)
endfunction

function new_XorEncryptor takes nothing returns integer
	local integer this_54
	if PersistableMiddleware_firstFree == 0 then
		if PersistableMiddleware_maxIndex < 32768 then
			set PersistableMiddleware_maxIndex = PersistableMiddleware_maxIndex + 1
			set this_54 = PersistableMiddleware_maxIndex
			set PersistableMiddleware_typeId[this_54] = 943
		else
			call error("Out of memory: Could not create XorEncryptor.")
			set this_54 = 0
		endif
	else
		set PersistableMiddleware_firstFree = PersistableMiddleware_firstFree - 1
		set this_54 = PersistableMiddleware_nextFree[PersistableMiddleware_firstFree]
		set PersistableMiddleware_typeId[this_54] = 943
	endif
	return this_54
endfunction

function construct_PlayerSettings takes integer this_54, player owner_4 returns nothing
	local integer middleware = new_XorEncryptor()
	set Persistable_owner[this_54] = owner_4
	set Persistable_middleware[this_54] = middleware
	set PlayerSettings_lookup[GetPlayerId(owner_4)] = this_54
endfunction

function new_PlayerSettings takes player owner_4 returns integer
	local integer this_54
	if DataSerializable_firstFree == 0 then
		if DataSerializable_maxIndex < 32768 then
			set DataSerializable_maxIndex = DataSerializable_maxIndex + 1
			set this_54 = DataSerializable_maxIndex
			set DataSerializable_typeId[this_54] = 751
		else
			call error("Out of memory: Could not create PlayerSettings.")
			set this_54 = 0
		endif
	else
		set DataSerializable_firstFree = DataSerializable_firstFree - 1
		set this_54 = DataSerializable_nextFree[DataSerializable_firstFree]
		set DataSerializable_typeId[this_54] = 751
	endif
	call construct_PlayerSettings(this_54, owner_4)
	return this_54
endfunction

function PlayerSettings_closure_impl takes integer this_54 returns nothing
	local integer i_3 = 0
	set this_54 = bj_MAX_PLAYERS - 1
	loop
		exitwhen i_3 > this_54
		call Persistable_load(new_PlayerSettings(Player_players[i_3]), 0)
		set i_3 = i_3 + 1
	endloop
endfunction

function vec2_rotate takes real this_x, real this_y, real angl_radians returns real
	local real c = Cos(angl_radians)
	local real s = Sin(angl_radians)
	set vec2_rotate_return_x = this_x * c - this_y * s
	set vec2_rotate_return_y = this_x * s + this_y * c
	return vec2_rotate_return_x
endfunction

function FormationSettings_getPos takes integer this_54, integer totalUnits, integer orderCount, real origin_x, real origin_y, real target_x_2, real target_y_2 returns real
	local real tuple_temp = target_x_2 - origin_x
	local real tuple_temp_2 = target_y_2 - origin_y
	local real len = SquareRoot(tuple_temp * tuple_temp + tuple_temp_2 * tuple_temp_2)
	local real x = 0.
	local real y = 0.
	local integer firstRowCount
	local real row
	local real column
	local real spacing
	local real factor
	local real factor_2
	local real factor_3
	local real tuple_temp_3
	local real tuple_temp_4
	if len > 0.0 then
		set x = tuple_temp / len
		set y = tuple_temp_2 / len
	endif
	set tuple_temp_3 = vec2_rotate(x, y, 1.570796371)
	set tuple_temp_4 = vec2_rotate_return_y
	set firstRowCount = ModuloInteger(totalUnits, FormationSettings_rectWidth[this_54])
	set row = 0.
	if firstRowCount == 0 then
		set row = orderCount / FormationSettings_rectWidth[this_54] * 1.
	elseif orderCount >= firstRowCount then
		set row = ((orderCount - firstRowCount) / FormationSettings_rectWidth[this_54] + 1) * 1.
	endif
	set column = 0.
	if firstRowCount != 0 and row == 0. and firstRowCount != FormationSettings_rectWidth[this_54] then
		set spacing = (FormationSettings_rectWidth[this_54] - 1) * 1. / firstRowCount
		set column = 0. + spacing / 2. + spacing * orderCount
	else
		set column = ModuloInteger(orderCount - firstRowCount, FormationSettings_rectWidth[this_54]) * 1.
	endif
	set factor = FormationSettings_rectVertSpacing[this_54]
	set factor_2 = FormationSettings_rectHorizSpacing[this_54]
	set factor_3 = (FormationSettings_rectWidth[this_54] - 1) * 1. / 2
	set origin_x = FormationSettings_rectHorizSpacing[this_54]
	set FormationSettings_getPos_return_x = target_x_2 - x * row * factor + (tuple_temp_3 * column * factor_2 - tuple_temp_3 * factor_3 * origin_x)
	set FormationSettings_getPos_return_y = target_y_2 - y * row * factor + (tuple_temp_4 * column * factor_2 - tuple_temp_4 * factor_3 * origin_x)
	return FormationSettings_getPos_return_x
endfunction

function SimpleFormationData_closure_impl takes integer this_54 returns nothing
	call IssuePointOrderById(what[this_54], 851986, FormationSettings_getPos(settings[this_54], totalCount[this_54], count[this_54], SimpleFormationData_center_x[this_6[this_54]], SimpleFormationData_center_y[this_6[this_54]], target_x[this_54], target_y[this_54]), FormationSettings_getPos_return_y)
endfunction

function getTimer takes nothing returns timer
	local timer receiver
	if TimerUtils_freeTimersCount > 0 then
		set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount - 1
		call SaveInteger(Table_ht, TimerUtils_timerData, GetHandleId(TimerUtils_freeTimers[TimerUtils_freeTimersCount]), 0)
		set receiver = null
		return TimerUtils_freeTimers[TimerUtils_freeTimersCount]
	else
		set receiver = CreateTimer()
		call SaveInteger(Table_ht, TimerUtils_timerData, GetHandleId(receiver), 0)
		set getTimertempReturn = receiver
		set receiver = null
		return getTimertempReturn
	endif
endfunction

function timer_setData takes timer this_54, integer data_2 returns nothing
	call SaveInteger(Table_ht, TimerUtils_timerData, GetHandleId(this_54), data_2)
endfunction

function CallbackSingle_start takes integer this_54, real time returns nothing
	local timer receiver = getTimer()
	call timer_setData(receiver, this_54)
	call TimerStart(receiver, time, false, ref_function_CallbackSingle_closure_impl)
	set CallbackSingle_t[this_54] = receiver
	set receiver = null
endfunction

function destroyHashMap takes integer this_54 returns nothing
	if Table_typeId[this_54] <= 983 then
		call FlushChildHashtable(Table_ht, this_54)
	else
		call IterableMap_flush(this_54)
	endif
	if Table_typeId[this_54] == 0 then
		call error("Double free: object of type HashMap")
	else
		set Table_nextFree[Table_firstFree] = this_54
		set Table_firstFree = Table_firstFree + 1
		set Table_typeId[this_54] = 0
	endif
endfunction

function dispatch_HashMap_destroyHashMap takes integer this_54 returns nothing
	if Table_typeId[this_54] <= 983 then
		call destroyHashMap(this_54)
	else
		call IterableMap_onDestroy(this_54)
		if Table_typeId[this_54] == 0 then
			call error("Double free: object of type IterableMap")
		else
			set Table_nextFree[Table_firstFree] = this_54
			set Table_firstFree = Table_firstFree + 1
			set Table_typeId[this_54] = 0
		endif
	endif
endfunction

function SimpleFormationData_onDestroy takes integer this_54 returns nothing
	local integer iterator = new_LLIterator_2(SimpleFormationData_unitList[this_54])
	local integer this_55
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
		set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
		set YUnitData_simpleFormation[GetUnitUserData(unitFromIndex(LLEntry_elem[LLIterator_current[iterator]]))] = 0
	endloop
	if LLIterator_destroyOnClose[iterator] then
		if LLIterator_typeId[iterator] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator] = 0
		endif
	endif
	set this_55 = SimpleFormationData_unitList[this_54]
	call LinkedList_onDestroy(this_55)
	if LinkedList_typeId[this_55] == 0 then
		call error("Double free: object of type LinkedList")
	else
		set LinkedList_nextFree[LinkedList_firstFree] = this_55
		set LinkedList_firstFree = LinkedList_firstFree + 1
		set LinkedList_typeId[this_55] = 0
	endif
	call dispatch_HashMap_destroyHashMap(SimpleFormationData_unitOrdersX[this_54])
	call dispatch_HashMap_destroyHashMap(SimpleFormationData_unitOrdersY[this_54])
endfunction

function SimpleFormationData_issueOrders takes integer this_54 returns nothing
	local real target_x_2 = 0.
	local real target_y_2 = 0.
	local integer totalCount_2 = LinkedList_size[SimpleFormationData_unitList[this_54]]
	local integer count_3 = 0
	local integer iterator = new_LLIterator_2(SimpleFormationData_unitList[this_54])
	local unit what_2
	local integer id
	local integer settings_2
	local integer iterator_2
	local unit what_3
	local integer this_55
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
		set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
		set what_2 = unitFromIndex(LLEntry_elem[LLIterator_current[iterator]])
		set id = GetUnitUserData(what_2)
		set target_x_2 = target_x_2 + LoadInteger(Table_ht, SimpleFormationData_unitOrdersX[this_54], id) / 1000.
		set target_y_2 = target_y_2 + LoadInteger(Table_ht, SimpleFormationData_unitOrdersY[this_54], id) / 1000.
		call IssueImmediateOrderById(what_2, 851972)
		call SetUnitPathing(what_2, false)
	endloop
	if LLIterator_destroyOnClose[iterator] then
		if LLIterator_typeId[iterator] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator] = 0
		endif
	endif
	set target_x_2 = target_x_2 / totalCount_2
	set target_y_2 = target_y_2 / totalCount_2
	set settings_2 = FormationMovement_playerFormationModes[GetPlayerId(SimpleFormationData_owner[this_54])]
	set iterator_2 = new_LLIterator_2(SimpleFormationData_unitList[this_54])
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator_2]] == LLIterator_dummy[iterator_2]
		set LLIterator_current[iterator_2] = LLEntry_next[LLIterator_current[iterator_2]]
		set what_3 = unitFromIndex(LLEntry_elem[LLIterator_current[iterator_2]])
		if CallbackSingle_firstFree == 0 then
			if CallbackSingle_maxIndex < 32768 then
				set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
				set this_55 = CallbackSingle_maxIndex
				set CallbackSingle_typeId[this_55] = 667
			else
				call error("Out of memory: Could not create Closure.")
				set this_55 = 0
			endif
		else
			set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
			set this_55 = CallbackSingle_nextFree[CallbackSingle_firstFree]
			set CallbackSingle_typeId[this_55] = 667
		endif
		set what[this_55] = what_3
		set settings[this_55] = settings_2
		set totalCount[this_55] = totalCount_2
		set count[this_55] = count_3
		set this_6[this_55] = this_54
		set target_x[this_55] = target_x_2
		set target_y[this_55] = target_y_2
		call CallbackSingle_start(this_55, 0.)
		set count_3 = count_3 + 1
	endloop
	if LLIterator_destroyOnClose[iterator_2] then
		if LLIterator_typeId[iterator_2] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator_2
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator_2] = 0
		endif
	endif
	call SimpleFormationData_onDestroy(this_54)
	if SimpleFormationData_typeId[this_54] == 0 then
		call error("Double free: object of type SimpleFormationData")
	else
		set SimpleFormationData_nextFree[SimpleFormationData_firstFree] = this_54
		set SimpleFormationData_firstFree = SimpleFormationData_firstFree + 1
		set SimpleFormationData_typeId[this_54] = 0
	endif
	set what_2 = null
	set what_3 = null
endfunction

function LinkedList_closure_impl takes integer this_54, unit u returns nothing
	local integer this_55 = result[this_54]
	local integer entry
	set this_54 = GetHandleId(u)
	set entry = new_LLEntry(this_54, LLEntry_prev[LinkedList_dummy[this_55]], LinkedList_dummy[this_55])
	set LLEntry_next[LLEntry_prev[LinkedList_dummy[this_55]]] = entry
	set LLEntry_prev[LinkedList_dummy[this_55]] = entry
	set LinkedList_size[this_55] = LinkedList_size[this_55] + 1
endfunction

function UnitDictionary_getIdForUid takes integer this_54, string uid returns integer
	local integer hash = StringHash(uid)
	if HaveSavedInteger(Table_ht, UnitDictionary_dictionary[this_54], hash) then
		return LoadInteger(Table_ht, UnitDictionary_dictionary[this_54], hash)
	else
		call SaveInteger(Table_ht, UnitDictionary_dictionary[this_54], hash, UnitDictionary_currentId[this_54])
		call SaveStr(Table_ht, UnitDictionary_dictionary[this_54], UnitDictionary_currentId[this_54], uid)
		set UnitDictionary_currentId[this_54] = UnitDictionary_currentId[this_54] + 1
		return UnitDictionary_currentId[this_54] - 1
	endif
endfunction

function getUidForId takes integer id returns string
	local string result_2
	local integer remainingValue
	local integer byteno
	local integer charValue
	if HaveSavedString(CodegenUtils_REGISTRIES, 1, id) then
		return LoadStr(CodegenUtils_REGISTRIES, 1, id)
	else
		set result_2 = ""
		set remainingValue = id
		set byteno = 0
		loop
			exitwhen byteno > 3
			set charValue = ModuloInteger(remainingValue, 256)
			set remainingValue = remainingValue / 256
			set result_2 = SubString(".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~.................................................................................................................................", charValue, charValue + 1) + result_2
			set byteno = byteno + 1
		endloop
		return result_2
	endif
endfunction

function SingleUnitData_scan takes integer this_54, rect area_2, unit what_u, integer dictionary returns nothing
	local integer UnitData_UnitDictionary_getIdForUid_result
	local real temp
	local real tuple_temp
	set SingleUnitData_what_u[this_54] = what_u
	set temp = GetRectCenterX(area_2)
	set tuple_temp = GetRectCenterY(area_2)
	set SingleUnitData_origin_x[this_54] = temp
	set SingleUnitData_origin_y[this_54] = tuple_temp
	set UnitData_UnitDictionary_getIdForUid_result = UnitDictionary_getIdForUid(dictionary, getUidForId(GetUnitTypeId(what_u)))
	set SingleUnitData_dictionaryId[this_54] = UnitData_UnitDictionary_getIdForUid_result
endfunction

function unit_isShop takes unit this_54 returns boolean
	return LoadInteger(HashList_occurences, Registry_REGISTRY_SHOPS, GetUnitTypeId(this_54)) > 0
endfunction

function MultipleUnitData_closure_impl takes integer this_54, unit what_2 returns nothing
	local player who_2 = GetOwningPlayer(what_2)
	local integer id = GetUnitTypeId(what_2)
	local integer data_2
	local boolean andLeft
	if id != 2016489591 and id != 2016489592 and ( not unit_isShop(what_2)) then
		set andLeft = who_2 == GetOwningPlayer(what_2)
	else
		set andLeft = false
	endif
	if andLeft then
		set data_2 = new_SingleUnitData()
		call SingleUnitData_scan(data_2, area[this_54], what_2, MultipleUnitData_dictionary[this_53[this_54]])
		call dispatch_HashList_HashList_HashList_add_1(MultipleUnitData_list[this_53[this_54]], data_2)
	endif
	set who_2 = null
endfunction

function SelectionUtil_closure_impl takes integer this_54, unit u returns nothing
	local integer entry
	set this_54 = list[this_54]
	set entry = new_LLEntry(GetHandleId(u), LLEntry_prev[LinkedList_dummy[this_54]], LinkedList_dummy[this_54])
	set LLEntry_next[LLEntry_prev[LinkedList_dummy[this_54]]] = entry
	set LLEntry_prev[LinkedList_dummy[this_54]] = entry
	set LinkedList_size[this_54] = LinkedList_size[this_54] + 1
endfunction

function UnitInfo_calculateText takes integer this_54 returns string
	local string str = ""
	local integer iter_11
	local integer LinkedList_LLIterator_next_result
	if UnitInfo_name[this_54] != "" then
		set str = "" + UnitInfo_name[this_54] + "\n"
	endif
	if UnitInfo_shortDesc[this_54] != "" then
		set str = str + UnitInfo_shortDesc[this_54] + "\n"
	endif
	set iter_11 = LinkedList_staticItr_2(UnitInfo_speech[this_54])
	loop
		exitwhen LLEntry_next[LLIterator_current[iter_11]] == LLIterator_dummy[iter_11]
		set LLIterator_current[iter_11] = LLEntry_next[LLIterator_current[iter_11]]
		set LinkedList_LLIterator_next_result = LLEntry_elem[LLIterator_current[iter_11]]
		if TimerGetElapsed(GameTimer_gameTimer) - UnitSpeech_timestamp[LinkedList_LLIterator_next_result] < 2 then
			set str = str + UnitSpeech_text[LinkedList_LLIterator_next_result] + "\n"
		else
			if UnitSpeech_typeId[LinkedList_LLIterator_next_result] == 0 then
				call error("Double free: object of type UnitSpeech")
			else
				set UnitSpeech_nextFree[UnitSpeech_firstFree] = LinkedList_LLIterator_next_result
				set UnitSpeech_firstFree = UnitSpeech_firstFree + 1
				set UnitSpeech_typeId[LinkedList_LLIterator_next_result] = 0
			endif
			call LLIterator_remove(iter_11)
		endif
	endloop
	return str
endfunction

function char_getWidth takes integer this_c returns integer
	if this_c > 127 then
		return 0
	endif
	return StringUtils_width[this_c]
endfunction

function string_getWidth takes string this_54 returns integer
	local integer width = 0
	local integer i_3 = 0
	local integer temp = StringLength(this_54) - 1
	loop
		exitwhen i_3 > temp
		set width = width + char_getWidth(char(SubString(this_54, i_3, i_3 + 1)))
		set i_3 = i_3 + 1
	endloop
	return width
endfunction

function string_indexOf takes string this_54, string s returns integer
	local integer i_3 = 0
	local integer temp = StringLength(this_54) - StringLength(s)
	loop
		exitwhen i_3 > temp
		if SubString(this_54, i_3, i_3 + StringLength(s)) == s then
			return i_3
		endif
		set i_3 = i_3 + 1
	endloop
	return -1
endfunction

function string_indexOf_2 takes string this_54, string s, integer startpos returns integer
	local integer temp = StringLength(this_54) - StringLength(s)
	loop
		exitwhen startpos > temp
		if SubString(this_54, startpos, startpos + StringLength(s)) == s then
			return startpos
		endif
		set startpos = startpos + 1
	endloop
	return -1
endfunction

function getTextCenteredOffset takes string text, real size returns real
	local string str = text
	local integer colorIndexOf = string_indexOf(text, "|cff")
	loop
		exitwhen colorIndexOf <= 0
		set str = SubString(str, 0, colorIndexOf) + SubString(str, colorIndexOf + 10, StringLength(str))
		set colorIndexOf = string_indexOf_2(str, "|cff", colorIndexOf)
	endloop
	return string_getWidth(str) / 1000. * size * UnitTag_centerFactor
endfunction

function stringToIndex takes string s returns integer
	local integer hash = StringHash(s)
	if  not HaveSavedString(Table_ht, TypeCasting_typecastdata, hash) then
		call SaveStr(Table_ht, TypeCasting_typecastdata, hash, s)
	endif
	return hash
endfunction

function string_split takes string this_54, string splitBy returns integer
	local integer list_2 = new_LinkedList()
	local integer offset = StringLength(splitBy)
	local string str = this_54
	local integer splitIndex
	local string first
	local string second
	local integer entry
	local integer entry_2
	loop
		set splitIndex = string_indexOf(str, splitBy)
		if splitIndex == -1 then
			set entry = new_LLEntry(stringToIndex(str), LLEntry_prev[LinkedList_dummy[list_2]], LinkedList_dummy[list_2])
			set LLEntry_next[LLEntry_prev[LinkedList_dummy[list_2]]] = entry
			set LLEntry_prev[LinkedList_dummy[list_2]] = entry
			set LinkedList_size[list_2] = LinkedList_size[list_2] + 1
			exitwhen true
		endif
		set first = SubString(str, 0, splitIndex)
		set second = SubString(str, splitIndex + offset, StringLength(str))
		set entry_2 = new_LLEntry(stringToIndex(first), LLEntry_prev[LinkedList_dummy[list_2]], LinkedList_dummy[list_2])
		set LLEntry_next[LLEntry_prev[LinkedList_dummy[list_2]]] = entry_2
		set LLEntry_prev[LinkedList_dummy[list_2]] = entry_2
		set LinkedList_size[list_2] = LinkedList_size[list_2] + 1
		set str = second
	endloop
	return list_2
endfunction

function UnitTag_calculateOffset takes integer this_54 returns real
	local real maxOffset = 0.
	local integer lines = 0
	local integer iterator = new_LLIterator_2(string_split(UnitTag_text[this_54], "\n"))
	local real numbers_1
	local real maxNumber
	local real cond_result
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
		set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
		set numbers_1 = getTextCenteredOffset(LoadStr(Table_ht, TypeCasting_typecastdata, LLEntry_elem[LLIterator_current[iterator]]), 8.)
		set maxNumber = Real_REAL_MIN
		if maxOffset > maxNumber then
			set cond_result = maxOffset
		else
			set cond_result = maxNumber
		endif
		set maxNumber = cond_result
		if numbers_1 > cond_result then
			set cond_result = numbers_1
		endif
		set maxNumber = cond_result
		set maxOffset = cond_result
		set lines = lines + 1
	endloop
	if LLIterator_destroyOnClose[iterator] then
		if LLIterator_typeId[iterator] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator] = 0
		endif
	endif
	set UnitTag_calculateOffset_return_x = ( - UnitTag_staticOffset) - maxOffset
	set UnitTag_calculateOffset_return_y = 0.
	set UnitTag_calculateOffset_return_z = 32. + 32. * lines
	return UnitTag_calculateOffset_return_x
endfunction

function UnitTag_update takes integer this_54 returns nothing
	local string UnitTag_UnitInfo_calculateText_result = UnitInfo_calculateText(UnitTag_info[this_54])
	local integer this_55
	local integer this_56
	local string text
	local integer this_57
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	set UnitTag_text[this_54] = UnitTag_UnitInfo_calculateText_result
	if UnitTag_text[this_54] != "" then
		set UnitTag_shown[this_54] = true
	else
		set UnitTag_shown[this_54] = false
		if UnitTag_tag[this_54] != 0 then
			set this_55 = UnitTag_tag[this_54]
			call TextTagUpdater_onDestroy(this_55)
			if TextTagUpdater_typeId[this_55] == 0 then
				call error("Double free: object of type TextTagUpdater")
			else
				set TextTagUpdater_nextFree[TextTagUpdater_firstFree] = this_55
				set TextTagUpdater_firstFree = TextTagUpdater_firstFree + 1
				set TextTagUpdater_typeId[this_55] = 0
			endif
			set UnitTag_tag[this_54] = 0
		endif
	endif
	if UnitTag_tag[this_54] != 0 then
		set this_56 = UnitTag_tag[this_54]
		set text = UnitTag_text[this_54]
		if TextTagUpdater_tag[this_56] != null then
			call SetTextTagText(TextTagUpdater_tag[this_56], text, 0.0184)
		endif
		set this_57 = UnitTag_tag[this_54]
		set tuple_temp = UnitTag_calculateOffset(this_54)
		set tuple_temp_2 = UnitTag_calculateOffset_return_y
		set tuple_temp_3 = UnitTag_calculateOffset_return_z
		set TextTagUpdater_offset_x[this_57] = tuple_temp
		set TextTagUpdater_offset_y[this_57] = tuple_temp_2
		set TextTagUpdater_offset_z[this_57] = tuple_temp_3
	endif
endfunction

function dispatch_HashMap_HashMap_HashMap_put takes integer this_54, integer key, integer value_2 returns nothing
	if Table_typeId[this_54] <= 983 then
		call SaveInteger(Table_ht, this_54, key, value_2)
	else
		call IterableMap_put(this_54, key, value_2)
	endif
endfunction

function new_TextTagHandle takes nothing returns integer
	local integer this_54
	if TextTagHandle_firstFree == 0 then
		if TextTagHandle_maxIndex < 32768 then
			set TextTagHandle_maxIndex = TextTagHandle_maxIndex + 1
			set this_54 = TextTagHandle_maxIndex
		else
			call error("Out of memory: Could not create TextTagHandle.")
			set this_54 = 0
		endif
	else
		set TextTagHandle_firstFree = TextTagHandle_firstFree - 1
		set this_54 = TextTagHandle_nextFree[TextTagHandle_firstFree]
	endif
	set TextTagHandle_tag[this_54] = CreateTextTag()
	call dispatch_HashMap_HashMap_HashMap_put(TextTagHandle_lookup, GetHandleId(TextTagHandle_tag[this_54]), this_54)
	return this_54
endfunction

function TextTagRecycler_getTextTag takes nothing returns texttag
	local texttag tag = null
	local integer tagHandle
	local integer this_54
	local integer top
	local integer result_2
	if LinkedList_size[TextTagRecycler_recycled] == 0 then
		set tagHandle = new_TextTagHandle()
		if tagHandle != 0 then
			call SetTextTagVisibility(TextTagHandle_tag[tagHandle], true)
			call SetTextTagText(TextTagHandle_tag[tagHandle], "", 0)
			set tag = TextTagHandle_tag[tagHandle]
		endif
	else
		set this_54 = TextTagRecycler_recycled
		set top = LLEntry_prev[LinkedList_dummy[this_54]]
		set result_2 = 0
		if top != LinkedList_dummy[this_54] then
			set result_2 = LLEntry_elem[top]
			set LLEntry_next[LLEntry_prev[top]] = LLEntry_next[top]
			set LLEntry_prev[LLEntry_next[top]] = LLEntry_prev[top]
			if LLEntry_typeId[top] == 0 then
				call error("Double free: object of type LLEntry")
			else
				set LLEntry_nextFree[LLEntry_firstFree] = top
				set LLEntry_firstFree = LLEntry_firstFree + 1
				set LLEntry_typeId[top] = 0
			endif
			set LinkedList_size[this_54] = LinkedList_size[this_54] - 1
		endif
		call SetTextTagVisibility(TextTagHandle_tag[result_2], true)
		call SetTextTagText(TextTagHandle_tag[result_2], "", 0)
		set tag = TextTagHandle_tag[result_2]
	endif
	set TextTagRecycler_getTextTagtempReturn = tag
	set tag = null
	return TextTagRecycler_getTextTagtempReturn
endfunction

function construct_TextTagUpdater takes integer this_54, unit parent returns nothing
	set TextTagUpdater_tag[this_54] = TextTagRecycler_getTextTag()
	set TextTagUpdater_LinkedListModule_size = TextTagUpdater_LinkedListModule_size + 1
	if TextTagUpdater_LinkedListModule_size == 1 then
		set TextTagUpdater_LinkedListModule_first = this_54
		set TextTagUpdater_LinkedListModule_prev[this_54] = 0
	else
		set TextTagUpdater_LinkedListModule_prev[this_54] = TextTagUpdater_LinkedListModule_last
		set TextTagUpdater_LinkedListModule_next[TextTagUpdater_LinkedListModule_last] = this_54
		set TextTagUpdater_LinkedListModule_prev[TextTagUpdater_LinkedListModule_first] = this_54
	endif
	set TextTagUpdater_LinkedListModule_next[this_54] = 0
	set TextTagUpdater_LinkedListModule_last = this_54
	set TextTagUpdater_parent[this_54] = parent
endfunction

function new_TextTagUpdater takes unit parent returns integer
	local integer this_54
	if TextTagUpdater_firstFree == 0 then
		if TextTagUpdater_maxIndex < 32768 then
			set TextTagUpdater_maxIndex = TextTagUpdater_maxIndex + 1
			set this_54 = TextTagUpdater_maxIndex
			set TextTagUpdater_typeId[this_54] = 989
		else
			call error("Out of memory: Could not create TextTagUpdater.")
			set this_54 = 0
		endif
	else
		set TextTagUpdater_firstFree = TextTagUpdater_firstFree - 1
		set this_54 = TextTagUpdater_nextFree[TextTagUpdater_firstFree]
		set TextTagUpdater_typeId[this_54] = 989
	endif
	call construct_TextTagUpdater(this_54, parent)
	return this_54
endfunction

function UnitTag_closure_impl takes integer this_54, unit what_2 returns nothing
	local integer id = GetUnitTypeId(what_2)
	local integer this_55
	local integer entry
	if id != 2016489591 and id != 2016489592 and ( not unit_isShop(what_2)) then
		set this_54 = UnitTag_lookup[GetUnitUserData(what_2)]
		if this_54 != 0 then
			call UnitTag_update(this_54)
			if UnitTag_tag[this_54] == 0 and UnitTag_shown[this_54] then
				if UnitTag_tag[this_54] == 0 then
					set UnitTag_tag[this_54] = new_TextTagUpdater(UnitTag_what[this_54])
				endif
				set this_55 = UnitTag_currentlyVisible
				set entry = new_LLEntry(this_54, LLEntry_prev[LinkedList_dummy[this_55]], LinkedList_dummy[this_55])
				set LLEntry_next[LLEntry_prev[LinkedList_dummy[this_55]]] = entry
				set LLEntry_prev[LinkedList_dummy[this_55]] = entry
				set LinkedList_size[this_55] = LinkedList_size[this_55] + 1
			endif
		endif
	endif
endfunction

function dispatch_ForGroupCallback_ClosureForGroups_ForGroupCallback_callback takes integer this_54, unit u returns nothing
	if ForGroupCallback_typeId[this_54] <= 815 then
		if ForGroupCallback_typeId[this_54] <= 814 then
			if ForGroupCallback_typeId[this_54] <= 813 then
				call LinkedList_closure_impl(this_54, u)
			else
				call RemoveUnit(u)
			endif
		else
			call SelectionUtil_closure_impl(this_54, u)
		endif
	elseif ForGroupCallback_typeId[this_54] <= 817 then
		if ForGroupCallback_typeId[this_54] <= 816 then
			set SyncSimple_count = SyncSimple_count + 1
			set SyncSimple_last = u
		else
			call MultipleUnitData_closure_impl(this_54, u)
		endif
	else
		call UnitTag_closure_impl(this_54, u)
	endif
endfunction

function group_forEachFrom takes group this_54, integer cb returns nothing
	local group from = this_54
	local unit iterUnit
	loop
		exitwhen FirstOfGroup(from) == null
		set this_54 = from
		set iterUnit = FirstOfGroup(from)
		call GroupRemoveUnit(from, iterUnit)
		call dispatch_ForGroupCallback_ClosureForGroups_ForGroupCallback_callback(cb, iterUnit)
	endloop
	set from = null
	set iterUnit = null
endfunction

function finishPreload takes nothing returns nothing
	local group temp
	local integer this_54
	call RemoveUnit(Preloader_dum)
	set temp = Preloader_dumg
	if ForGroupCallback_firstFree == 0 then
		if ForGroupCallback_maxIndex < 32768 then
			set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
			set this_54 = ForGroupCallback_maxIndex
			set ForGroupCallback_typeId[this_54] = 814
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
		set this_54 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
		set ForGroupCallback_typeId[this_54] = 814
	endif
	call group_forEachFrom(temp, this_54)
	call DestroyGroup(Preloader_dumg)
	set Preloader_dumg = null
	set temp = null
endfunction

function testFail takes string msg returns nothing
endfunction

function dispatch_CallbackSingle_ClosureTimers_CallbackSingle_call takes integer this_54 returns nothing
	local integer this_55
	if CallbackSingle_typeId[this_54] <= 666 then
		if CallbackSingle_typeId[this_54] <= 664 then
			if CallbackSingle_typeId[this_54] <= 663 then
				if CallbackSingle_typeId[this_54] <= 662 then
					call ClosureEvents_closure_impl(this_54)
				else
					set ClosureTimers_x = ClosureTimers_x + 50
				endif
			else
				set ClosureTimers_x = ClosureTimers_x * 2
			endif
		elseif CallbackSingle_typeId[this_54] <= 665 then
			set ClosureTimers_x = ClosureTimers_x / 2
			set this_55 = ClosureTimers_x
			if this_55 != 250 then
				call testFail("Expected <" + I2S(250) + ">, Actual <" + I2S(this_55) + ">")
			endif
		else
			call SimpleFormationData_issueOrders(this_5[this_54])
		endif
	elseif CallbackSingle_typeId[this_54] <= 669 then
		if CallbackSingle_typeId[this_54] <= 668 then
			if CallbackSingle_typeId[this_54] <= 667 then
				call SimpleFormationData_closure_impl(this_54)
			else
				call OnUnitEnterLeave_closure_impl(this_54)
			endif
		else
			call PlayerSettings_closure_impl(this_54)
		endif
	elseif CallbackSingle_typeId[this_54] <= 670 then
		call finishPreload()
	else
		call IssueImmediateOrder(RegionSpecifier_what[this_42[this_54]], "stop")
	endif
endfunction

function timer_release takes timer this_54 returns nothing
	if this_54 == null then
		call error("Trying to release a null timer")
		return
	endif
	if LoadInteger(Table_ht, TimerUtils_timerData, GetHandleId(this_54)) == 679645218 then
		call error("ReleaseTimer: Double free!")
		return
	endif
	call SaveInteger(Table_ht, TimerUtils_timerData, GetHandleId(this_54), 679645218)
	call PauseTimer(this_54)
	set TimerUtils_freeTimers[TimerUtils_freeTimersCount] = this_54
	set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount + 1
endfunction

function CallbackSingle_staticCallback takes nothing returns nothing
	local integer Table_Table_loadInt_result = LoadInteger(Table_ht, TimerUtils_timerData, GetHandleId(GetExpiredTimer()))
	call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_call(Table_Table_loadInt_result)
	call timer_release(CallbackSingle_t[Table_Table_loadInt_result])
	if CallbackSingle_typeId[Table_Table_loadInt_result] == 0 then
		call error("Double free: object of type CallbackSingle")
	else
		set CallbackSingle_nextFree[CallbackSingle_firstFree] = Table_Table_loadInt_result
		set CallbackSingle_firstFree = CallbackSingle_firstFree + 1
		set CallbackSingle_typeId[Table_Table_loadInt_result] = 0
	endif
endfunction

function CallbackSingle_closure_impl takes nothing returns nothing
	call CallbackSingle_staticCallback()
endfunction

function SimpleFormationData_onUnitOrder takes integer this_54, unit what_2, real pos_x, real pos_y returns nothing
	local integer id = GetUnitUserData(what_2)
	local integer this_55
	call dispatch_HashMap_HashMap_HashMap_put(SimpleFormationData_unitOrdersX[this_54], id, R2I(pos_x * 1000.))
	call dispatch_HashMap_HashMap_HashMap_put(SimpleFormationData_unitOrdersY[this_54], id, R2I(pos_y * 1000.))
	set SimpleFormationData_orderCount[this_54] = SimpleFormationData_orderCount[this_54] + 1
	if SimpleFormationData_orderCount[this_54] == LinkedList_size[SimpleFormationData_unitList[this_54]] then
		if CallbackSingle_firstFree == 0 then
			if CallbackSingle_maxIndex < 32768 then
				set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
				set this_55 = CallbackSingle_maxIndex
				set CallbackSingle_typeId[this_55] = 666
			else
				call error("Out of memory: Could not create Closure.")
				set this_55 = 0
			endif
		else
			set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
			set this_55 = CallbackSingle_nextFree[CallbackSingle_firstFree]
			set CallbackSingle_typeId[this_55] = 666
		endif
		set this_5[this_55] = this_54
		call CallbackSingle_start(this_55, 0.)
	endif
endfunction

function new_HashMap takes nothing returns integer
	local integer this_54
	if Table_firstFree == 0 then
		if Table_maxIndex < 32768 then
			set Table_maxIndex = Table_maxIndex + 1
			set this_54 = Table_maxIndex
			set Table_typeId[this_54] = 983
		else
			call error("Out of memory: Could not create HashMap.")
			set this_54 = 0
		endif
	else
		set Table_firstFree = Table_firstFree - 1
		set this_54 = Table_nextFree[Table_firstFree]
		set Table_typeId[this_54] = 983
	endif
	return this_54
endfunction

function construct_SimpleFormationData takes integer this_54, integer unitList, player owner_4 returns nothing
	local real centerPos_x
	local real centerPos_y
	local integer iterator
	local unit what_2
	local real tuple_temp
	set SimpleFormationData_unitOrdersX[this_54] = new_HashMap()
	set SimpleFormationData_unitOrdersY[this_54] = new_HashMap()
	set SimpleFormationData_orderCount[this_54] = 0
	set SimpleFormationData_center_x[this_54] = 0.
	set SimpleFormationData_center_y[this_54] = 0.
	set SimpleFormationData_unitList[this_54] = unitList
	set SimpleFormationData_owner[this_54] = owner_4
	set centerPos_x = 0.
	set centerPos_y = 0.
	set iterator = new_LLIterator_2(unitList)
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
		set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
		set what_2 = unitFromIndex(LLEntry_elem[LLIterator_current[iterator]])
		set YUnitData_simpleFormation[GetUnitUserData(what_2)] = this_54
		set centerPos_x = centerPos_x + GetUnitX(what_2)
		set centerPos_y = centerPos_y + GetUnitY(what_2)
	endloop
	if LLIterator_destroyOnClose[iterator] then
		if LLIterator_typeId[iterator] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator] = 0
		endif
	endif
	set tuple_temp = centerPos_y / LinkedList_size[unitList]
	set SimpleFormationData_center_x[this_54] = centerPos_x / LinkedList_size[unitList]
	set SimpleFormationData_center_y[this_54] = tuple_temp
	set what_2 = null
endfunction

function new_SimpleFormationData takes integer unitList, player owner_4 returns integer
	local integer this_54
	if SimpleFormationData_firstFree == 0 then
		if SimpleFormationData_maxIndex < 32768 then
			set SimpleFormationData_maxIndex = SimpleFormationData_maxIndex + 1
			set this_54 = SimpleFormationData_maxIndex
			set SimpleFormationData_typeId[this_54] = 955
		else
			call error("Out of memory: Could not create SimpleFormationData.")
			set this_54 = 0
		endif
	else
		set SimpleFormationData_firstFree = SimpleFormationData_firstFree - 1
		set this_54 = SimpleFormationData_nextFree[SimpleFormationData_firstFree]
		set SimpleFormationData_typeId[this_54] = 955
	endif
	call construct_SimpleFormationData(this_54, unitList, owner_4)
	return this_54
endfunction

function SimpleFormationData_onUnitOrder_2 takes player who_2, unit what_2, real pos_x, real pos_y returns nothing
	local integer simpleFormation = YUnitData_simpleFormation[GetUnitUserData(what_2)]
	if simpleFormation == 0 then
		set simpleFormation = new_SimpleFormationData(player_selectedUnitsList(who_2), who_2)
	endif
	call SimpleFormationData_onUnitOrder(simpleFormation, what_2, pos_x, pos_y)
endfunction

function FormationMovement_closure_impl takes integer this_54 returns nothing
	local unit what_2
	local boolean andLeft
	set this_54 = GetIssuedOrderId()
	set what_2 = GetTriggerUnit()
	if LoadInteger(HashList_occurences, FormationMovement_frameProcessedUnits, GetHandleId(what_2)) <= 0 then
		call HashSet_add_1(FormationMovement_frameProcessedUnits, GetHandleId(what_2))
		if this_54 == 851986 or this_54 == 851971 then
			set andLeft = GetPlayerId(GetTriggerPlayer()) < bj_MAX_PLAYERS
		else
			set andLeft = false
		endif
		if andLeft then
			call SimpleFormationData_onUnitOrder_2(GetTriggerPlayer(), what_2, GetOrderPointX(), GetOrderPointY())
		endif
	endif
	set what_2 = null
endfunction

function playercolor_toColor takes playercolor this_54 returns integer
	local playercolor this_55 = this_54
	local integer value_2 = 0
	local integer i_3 = 0
	local integer temp = bj_MAX_PLAYER_SLOTS - 1
	local integer cond_result_red
	local integer cond_result_green
	local integer cond_result_blue
	local playercolor this_56
	local integer value_3
	local integer i_4
	local integer temp_2
	loop
		exitwhen i_3 > temp
		if Playercolor_LOOKUP[i_3] == this_55 then
			set value_2 = i_3
			exitwhen true
		endif
		set i_3 = i_3 + 1
	endloop
	if value_2 <= 23 then
		set this_56 = this_54
		set value_3 = 0
		set i_4 = 0
		set temp_2 = bj_MAX_PLAYER_SLOTS - 1
		loop
			exitwhen i_4 > temp_2
			if Playercolor_LOOKUP[i_4] == this_56 then
				set value_3 = i_4
				exitwhen true
			endif
			set i_4 = i_4 + 1
		endloop
		set cond_result_red = Colors_PLAYER_COLORS_red[value_3]
		set cond_result_green = Colors_PLAYER_COLORS_green[value_3]
		set cond_result_blue = Colors_PLAYER_COLORS_blue[value_3]
	else
		set cond_result_red = 0
		set cond_result_green = 0
		set cond_result_blue = 0
	endif
	set playercolor_toColor_return_red = cond_result_red
	set playercolor_toColor_return_green = cond_result_green
	set playercolor_toColor_return_blue = cond_result_blue
	set this_55 = null
	set this_56 = null
	return playercolor_toColor_return_red
endfunction

function player_getNameColored takes player this_54 returns string
	local integer tuple_temp = playercolor_toColor(GetPlayerColor(this_54))
	local integer this_green = playercolor_toColor_return_green
	local integer this_blue = playercolor_toColor_return_blue
	local integer temp = tuple_temp
	local string result_2 = ""
	local integer i_3 = 1
	local integer temp_2 = 2
	local integer temp_3
	local string result_3
	local integer i_4
	local integer temp_4
	local integer temp_5
	local string result_4
	local integer i_5
	local integer temp_6
	local string temp_7
	local string temp_8
	loop
		exitwhen i_3 > temp_2
		set result_2 = Integer_hexs[ModuloInteger(temp, 16)] + result_2
		set temp = temp / 16
		set i_3 = i_3 + 1
	endloop
	set temp_7 = "|cff" + result_2
	set temp_3 = this_green
	set result_3 = ""
	set i_4 = 1
	set temp_4 = 2
	loop
		exitwhen i_4 > temp_4
		set result_3 = Integer_hexs[ModuloInteger(temp_3, 16)] + result_3
		set temp_3 = temp_3 / 16
		set i_4 = i_4 + 1
	endloop
	set temp_8 = temp_7 + result_3
	set temp_5 = this_blue
	set result_4 = ""
	set i_5 = 1
	set temp_6 = 2
	loop
		exitwhen i_5 > temp_6
		set result_4 = Integer_hexs[ModuloInteger(temp_5, 16)] + result_4
		set temp_5 = temp_5 / 16
		set i_5 = i_5 + 1
	endloop
	return temp_8 + result_4 + GetPlayerName(this_54) + "|r"
endfunction

function MiscInit_closure_impl takes integer this_54 returns nothing
	local player who_2 = GetTriggerPlayer()
	local string chatString_2 = GetEventPlayerChatString()
	local string msg
	local string msg_2
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_54 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_54] = 795
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_54 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_54] = 795
	endif
	set who[this_54] = who_2
	set chatString[this_54] = chatString_2
	if  not try(this_54) then
		set msg = "Command [" + chatString_2 + "] by player " + player_getNameColored(who_2) + " has crashed."
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., Loglevel_getTag(3) + " - " + msg)
		set msg_2 = "Error: " + ErrorHandling_lastError
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., Loglevel_getTag(3) + " - " + msg_2)
	endif
	set who_2 = null
endfunction

function MiscInit_closure_impl_2 takes integer this_54 returns nothing
	local unit what_2 = GetSoldUnit()
	local unit spawner = Spawner_lookup[GetPlayerId(GetOwningPlayer(what_2))]
	local real temp = GetUnitX(spawner)
	local real tuple_temp = GetUnitY(spawner)
	call SetUnitX(what_2, temp)
	call SetUnitY(what_2, tuple_temp)
	set what_2 = null
	set spawner = null
endfunction

function RegionSpecifier_onSelected takes integer this_54 returns nothing
	if Player_localPlayer == GetOwningPlayer(RegionSpecifier_what[this_54]) then
		call SetLightningColor(RegionSpecifier_horizTop[this_54], 255 * 1. / 255, 255 * 1. / 255, 255 * 1. / 255, 255 * 1. / 255)
		call SetLightningColor(RegionSpecifier_horizBot[this_54], 255 * 1. / 255, 255 * 1. / 255, 255 * 1. / 255, 255 * 1. / 255)
		call SetLightningColor(RegionSpecifier_vertLeft[this_54], 255 * 1. / 255, 255 * 1. / 255, 255 * 1. / 255, 255 * 1. / 255)
		call SetLightningColor(RegionSpecifier_vertRight[this_54], 255 * 1. / 255, 255 * 1. / 255, 255 * 1. / 255, 255 * 1. / 255)
	endif
endfunction

function RegionSpecifier_closure_impl takes integer this_54 returns nothing
	set this_54 = RegionSpecifier_lookup[GetUnitUserData(GetTriggerUnit())]
	if this_54 != 0 then
		call RegionSpecifier_onSelected(this_54)
	endif
endfunction

function RegionSpecifier_onPointOrder takes integer this_54 returns nothing
	local integer order = GetIssuedOrderId()
	local integer this_55
	if order == 851971 or order == 851986 then
		call SetUnitPosition(RegionSpecifier_what[this_54], GetOrderPointX(), GetOrderPointY())
	endif
	call RegionSpecifier_snap(this_54)
	call RegionSpecifier_updateHintLines(this_54)
	call RegionSpecifier_updateWeather(this_54)
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_55 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_55] = 671
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_55 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_55] = 671
	endif
	set this_42[this_55] = this_54
	call CallbackSingle_start(this_55, 0.)
endfunction

function RegionSpecifier_closure_impl_2 takes integer this_54 returns nothing
	set this_54 = RegionSpecifier_lookup[GetUnitUserData(GetTriggerUnit())]
	if this_54 != 0 then
		call RegionSpecifier_onPointOrder(this_54)
	endif
endfunction

function AtmosphericData_apply takes integer this_54, integer specifier returns nothing
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	local real tuple_temp_4
	local real tuple_temp_5
	local integer tuple_temp_6
	local integer tuple_temp_7
	local integer tuple_temp_8
	set RegionSpecifier_dnc[specifier] = AtmosphericData_dnc[this_54]
	set tuple_temp = AtmosphericData_fog_min[this_54]
	set tuple_temp_2 = AtmosphericData_fog_max[this_54]
	set tuple_temp_3 = AtmosphericData_fog_r[this_54]
	set tuple_temp_4 = AtmosphericData_fog_g[this_54]
	set tuple_temp_5 = AtmosphericData_fog_b[this_54]
	set RegionSpecifier_fog_state[specifier] = AtmosphericData_fog_state[this_54]
	set RegionSpecifier_fog_min[specifier] = tuple_temp
	set RegionSpecifier_fog_max[specifier] = tuple_temp_2
	set RegionSpecifier_fog_r[specifier] = tuple_temp_3
	set RegionSpecifier_fog_g[specifier] = tuple_temp_4
	set RegionSpecifier_fog_b[specifier] = tuple_temp_5
	set tuple_temp_6 = AtmosphericData_corrector_r[this_54]
	set tuple_temp_7 = AtmosphericData_corrector_g[this_54]
	set tuple_temp_8 = AtmosphericData_corrector_b[this_54]
	set RegionSpecifier_corrector_state[specifier] = AtmosphericData_corrector_state[this_54]
	set RegionSpecifier_corrector_r[specifier] = tuple_temp_6
	set RegionSpecifier_corrector_g[specifier] = tuple_temp_7
	set RegionSpecifier_corrector_b[specifier] = tuple_temp_8
	set RegionSpecifier_weatherId[specifier] = AtmosphericData_weatherId[this_54]
	call RegionSpecifier_updateWeather(specifier)
endfunction

function construct_RectTileIterator takes integer this_54, rect area_2 returns nothing
	local real this_55
	local integer cond_result
	local real this_56
	local integer cond_result_2
	local real this_57
	local integer cond_result_3
	local real this_58
	local integer cond_result_4
	set RectTileIterator_closed[this_54] = false
	set this_55 = (GetRectMinX(area_2) - MapBounds_boundMin_x + 64.) / 128.
	if this_55 > 0. then
		set cond_result = R2I(this_55 + .5)
	else
		set cond_result = R2I(this_55 - .5)
	endif
	set RectTileIterator_minX[this_54] = cond_result
	set this_56 = (GetRectMinY(area_2) - MapBounds_boundMin_y + 64.) / 128.
	if this_56 > 0. then
		set cond_result_2 = R2I(this_56 + .5)
	else
		set cond_result_2 = R2I(this_56 - .5)
	endif
	set RectTileIterator_minY[this_54] = cond_result_2
	set this_57 = (GetRectMaxX(area_2) - MapBounds_boundMin_x - 64.) / 128.
	if this_57 > 0. then
		set cond_result_3 = R2I(this_57 + .5)
	else
		set cond_result_3 = R2I(this_57 - .5)
	endif
	set RectTileIterator_maxX[this_54] = cond_result_3
	set this_58 = (GetRectMaxY(area_2) - MapBounds_boundMin_y - 64.) / 128.
	if this_58 > 0. then
		set cond_result_4 = R2I(this_58 + .5)
	else
		set cond_result_4 = R2I(this_58 - .5)
	endif
	set RectTileIterator_maxY[this_54] = cond_result_4
	set RectTileIterator_currentX[this_54] = RectTileIterator_minX[this_54]
	set RectTileIterator_currentY[this_54] = RectTileIterator_minY[this_54]
endfunction

function new_RectTileIterator takes rect area_2 returns integer
	local integer this_54
	if RectTileIterator_firstFree == 0 then
		if RectTileIterator_maxIndex < 32768 then
			set RectTileIterator_maxIndex = RectTileIterator_maxIndex + 1
			set this_54 = RectTileIterator_maxIndex
			set RectTileIterator_typeId[this_54] = 952
		else
			call error("Out of memory: Could not create RectTileIterator.")
			set this_54 = 0
		endif
	else
		set RectTileIterator_firstFree = RectTileIterator_firstFree - 1
		set this_54 = RectTileIterator_nextFree[RectTileIterator_firstFree]
		set RectTileIterator_typeId[this_54] = 952
	endif
	call construct_RectTileIterator(this_54, area_2)
	return this_54
endfunction

function HeightData_apply takes integer this_54, rect area_2 returns nothing
	local integer iter_11 = new_RectTileIterator(area_2)
	local integer this_55
	local integer this_56
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_55 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_55] = 873
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_55 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_55] = 873
	endif
	set iter_3[this_55] = iter_11
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_56 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_56] = 849
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_56 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_56] = 849
	endif
	set iter_4[this_56] = iter_11
	set this_13[this_56] = this_54
	call executeWhile(1024, this_55, this_56)
endfunction

function fromRawCode takes string value_2 returns integer
	local integer result_2 = 0
	local integer factor
	local integer i_3
	local integer index
	if StringLength(value_2) != 4 then
		call error("Fourchar value must be 4 chars long")
	else
		set factor = 1
		set i_3 = 0
		loop
			exitwhen i_3 > 3
			set index = 3 - i_3
			set result_2 = result_2 + factor * string_indexOf(".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~.................................................................................................................................", SubString(value_2, index, index + 1))
			set factor = factor * 256
			set i_3 = i_3 + 1
		endloop
	endif
	return result_2
endfunction

function getIdForUid takes string uid returns integer
	if HaveSavedInteger(CodegenUtils_REGISTRIES, 0, StringHash(uid)) then
		return LoadInteger(CodegenUtils_REGISTRIES, 0, StringHash(uid))
	else
		return fromRawCode(uid)
	endif
endfunction

function yunit_setAttackCooldown takes unit this_u, real cooldown returns nothing
	set YUnitData_hasCustomAttackCooldown[GetUnitUserData(this_u)] = true
	call BlzSetUnitAttackCooldown(this_u, cooldown, 1)
endfunction

function yunit_setDamage takes unit this_u, integer damage returns nothing
	set YUnitData_hasCustomDamage[GetUnitUserData(this_u)] = true
	call BlzSetUnitBaseDamage(this_u, damage, 1)
endfunction

function yunit_uproot takes unit this_u returns nothing
	local boolean andLeft
	local real tuple_temp
	if IsUnitType(this_u, UNIT_TYPE_STRUCTURE) then
		set andLeft = GetUnitAbilityLevel(this_u, 1095577654) == 0
	else
		set andLeft = false
	endif
	if andLeft then
		set tuple_temp = GetUnitFacing(this_u) * 0.017453293
		call UnitAddAbility(this_u, 1095577654)
		call IssueImmediateOrder(this_u, "unroot")
		call SetUnitFacing(this_u, tuple_temp * 57.295779513)
		call SetUnitAnimation(this_u, "stand")
	endif
endfunction

function yunit_fly takes unit this_u returns nothing
	call yunit_uproot(this_u)
	if UnitAddAbility(this_u, 1097691750) then
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "wank")
		call UnitRemoveAbility(this_u, 1097691750)
	endif
endfunction

function DynamicEffectProxy_copyParentProperties takes integer this_54 returns nothing
	local unit parent = DynamicEffectProxy_parent[this_54]
	local effect this_55 = DynamicEffectProxy_eff[this_54]
	local integer index = GetUnitUserData(parent)
	local integer tuple_temp = YUnitData_tint_alpha[index]
	call BlzSetSpecialEffectColor(this_55, YUnitData_tint_red[index], YUnitData_tint_green[index], YUnitData_tint_blue[index])
	call BlzSetSpecialEffectAlpha(this_55, tuple_temp)
	call BlzSetSpecialEffectScale(DynamicEffectProxy_eff[this_54], YUnitData_scale[GetUnitUserData(parent)])
	set parent = null
	set this_55 = null
endfunction

function getModelForId takes integer id returns string
	if HaveSavedString(CodegenUtils_REGISTRIES, 2, id) then
		return LoadStr(CodegenUtils_REGISTRIES, 2, id)
	else
		return null
	endif
endfunction

function string_endsWith takes string this_54, string s returns boolean
	local integer len
	if s == "" then
		return true
	endif
	set len = StringLength(this_54)
	if StringLength(s) > len then
		return false
	endif
	return SubString(this_54, len - StringLength(s), len) == s
endfunction

function construct_DynamicEffectProxy takes integer this_54, unit parent, string model returns nothing
	local string modelName
	local real temp
	local real tuple_temp
	set DynamicEffectProxy_pitch_radians[this_54] = 0.
	set DynamicEffectProxy_roll_radians[this_54] = 0.
	set DynamicEffectProxy_LinkedListModule_size = DynamicEffectProxy_LinkedListModule_size + 1
	if DynamicEffectProxy_LinkedListModule_size == 1 then
		set DynamicEffectProxy_LinkedListModule_first = this_54
		set DynamicEffectProxy_LinkedListModule_prev[this_54] = 0
	else
		set DynamicEffectProxy_LinkedListModule_prev[this_54] = DynamicEffectProxy_LinkedListModule_last
		set DynamicEffectProxy_LinkedListModule_next[DynamicEffectProxy_LinkedListModule_last] = this_54
		set DynamicEffectProxy_LinkedListModule_prev[DynamicEffectProxy_LinkedListModule_first] = this_54
	endif
	set DynamicEffectProxy_LinkedListModule_next[this_54] = 0
	set DynamicEffectProxy_LinkedListModule_last = this_54
	set DynamicEffectProxy_parent[this_54] = parent
	set modelName = StringCase(model, false)
	if ( not string_endsWith(modelName, ".mdx")) and ( not string_endsWith(modelName, ".mdl")) then
		set modelName = modelName + ".mdl"
	endif
	set temp = GetUnitX(parent)
	set tuple_temp = GetUnitY(parent)
	set DynamicEffectProxy_eff[this_54] = AddSpecialEffect(modelName, temp, tuple_temp)
	call BlzPlaySpecialEffect(DynamicEffectProxy_eff[this_54], ANIM_TYPE_STAND)
	call DynamicEffectProxy_copyParentProperties(this_54)
endfunction

function new_DynamicEffectProxy takes unit parent, string model returns integer
	local integer this_54
	if DynamicEffectProxy_firstFree == 0 then
		if DynamicEffectProxy_maxIndex < 32768 then
			set DynamicEffectProxy_maxIndex = DynamicEffectProxy_maxIndex + 1
			set this_54 = DynamicEffectProxy_maxIndex
			set DynamicEffectProxy_typeId[this_54] = 764
		else
			call error("Out of memory: Could not create DynamicEffectProxy.")
			set this_54 = 0
		endif
	else
		set DynamicEffectProxy_firstFree = DynamicEffectProxy_firstFree - 1
		set this_54 = DynamicEffectProxy_nextFree[DynamicEffectProxy_firstFree]
		set DynamicEffectProxy_typeId[this_54] = 764
	endif
	call construct_DynamicEffectProxy(this_54, parent, model)
	return this_54
endfunction

function yunit_initProxy takes unit this_u returns nothing
	if YUnitData_effectProxy[GetUnitUserData(this_u)] == 0 then
		set YUnitData_effectProxy[GetUnitUserData(this_u)] = new_DynamicEffectProxy(this_u, getModelForId(GetUnitTypeId(this_u)))
		call DynamicEffectProxy_copyParentProperties(YUnitData_effectProxy[GetUnitUserData(this_u)])
		call SetUnitVertexColor(this_u, 0, 0, 0, 0)
	endif
endfunction

function yunit_setHeight takes unit this_u, real height returns nothing
	call yunit_fly(this_u)
	if height < 0. then
		call yunit_initProxy(this_u)
	endif
	if YUnitData_effectProxy[GetUnitUserData(this_u)] != 0 then
		call BlzSetSpecialEffectHeight(DynamicEffectProxy_eff[YUnitData_effectProxy[GetUnitUserData(this_u)]], height)
	endif
	call SetUnitFlyHeight(this_u, height, 10000000.)
	set YUnitData_flyHeight[GetUnitUserData(this_u)] = height
	set YUnitData_hasCustomFlyHeight[GetUnitUserData(this_u)] = true
endfunction

function player_getRealColor takes player this_54 returns integer
	local integer this_55 = PlayerSettings_lookup[GetPlayerId(this_54)]
	local integer col_red
	local integer col_green
	local integer col_blue
	if PlayerSettings_preferredNameColorEnabled[this_55] then
		set col_red = PlayerSettings_preferredNameColor_red[this_55]
		set col_green = PlayerSettings_preferredNameColor_green[this_55]
		set col_blue = PlayerSettings_preferredNameColor_blue[this_55]
	else
		set col_red = playercolor_toColor(GetPlayerColor(Persistable_owner[this_55]))
		set col_green = playercolor_toColor_return_green
		set col_blue = playercolor_toColor_return_blue
	endif
	set player_getRealColor_return_red = col_red
	set player_getRealColor_return_green = col_green
	set player_getRealColor_return_blue = col_blue
	return player_getRealColor_return_red
endfunction

function UnitInfo_setName takes integer this_54, string name returns nothing
	local integer this_green
	local integer this_blue
	local integer temp
	local string result_2
	local integer i_3
	local integer temp_2
	local integer temp_3
	local string result_3
	local integer i_4
	local integer temp_4
	local integer temp_5
	local string result_4
	local integer i_5
	local integer temp_6
	local string temp_7
	local string temp_8
	local integer tuple_temp
	if name != "" then
		set tuple_temp = player_getRealColor(GetOwningPlayer(UnitTag_what[UnitInfo_parent[this_54]]))
		set this_green = player_getRealColor_return_green
		set this_blue = player_getRealColor_return_blue
		set temp = tuple_temp
		set result_2 = ""
		set i_3 = 1
		set temp_2 = 2
		loop
			exitwhen i_3 > temp_2
			set result_2 = Integer_hexs[ModuloInteger(temp, 16)] + result_2
			set temp = temp / 16
			set i_3 = i_3 + 1
		endloop
		set temp_7 = "|cff" + result_2
		set temp_3 = this_green
		set result_3 = ""
		set i_4 = 1
		set temp_4 = 2
		loop
			exitwhen i_4 > temp_4
			set result_3 = Integer_hexs[ModuloInteger(temp_3, 16)] + result_3
			set temp_3 = temp_3 / 16
			set i_4 = i_4 + 1
		endloop
		set temp_8 = temp_7 + result_3
		set temp_5 = this_blue
		set result_4 = ""
		set i_5 = 1
		set temp_6 = 2
		loop
			exitwhen i_5 > temp_6
			set result_4 = Integer_hexs[ModuloInteger(temp_5, 16)] + result_4
			set temp_5 = temp_5 / 16
			set i_5 = i_5 + 1
		endloop
		set UnitInfo_name[this_54] = "[" + temp_8 + result_4 + name + "|r]"
	else
		set UnitInfo_name[this_54] = ""
	endif
endfunction

function yunit_setName takes unit this_u, string name returns nothing
	set YUnitData_hasCustomName[GetUnitUserData(this_u)] = true
	call UnitInfo_setName(UnitTag_info[YUnitData_tag[GetUnitUserData(this_u)]], name)
	call BlzSetUnitName(this_u, name)
endfunction

function yunit_setTint takes unit this_u, integer tint_red, integer tint_green, integer tint_blue, integer tint_alpha returns nothing
	local effect this_54
	local integer index
	if YUnitData_effectProxy[GetUnitUserData(this_u)] == 0 then
		call SetUnitVertexColor(this_u, tint_red, tint_green, tint_blue, tint_alpha)
	else
		set this_54 = DynamicEffectProxy_eff[YUnitData_effectProxy[GetUnitUserData(this_u)]]
		call BlzSetSpecialEffectColor(this_54, tint_red, tint_green, tint_blue)
		call BlzSetSpecialEffectAlpha(this_54, tint_alpha)
	endif
	set index = GetUnitUserData(this_u)
	set YUnitData_tint_red[index] = tint_red
	set YUnitData_tint_green[index] = tint_green
	set YUnitData_tint_blue[index] = tint_blue
	set YUnitData_tint_alpha[index] = tint_alpha
	set YUnitData_hasCustomTint[GetUnitUserData(this_u)] = true
	set this_54 = null
endfunction

function SingleUnitData_apply takes integer this_54, rect area_2, player owner_4, integer dictionary returns nothing
	local unit tuple_temp = CreateUnit(owner_4, getIdForUid(LoadStr(Table_ht, UnitDictionary_dictionary[dictionary], SingleUnitData_dictionaryId[this_54])), 0., 0., 0)
	local unit what_u = tuple_temp
	local real temp_9 = GetRectCenterX(area_2)
	local real tuple_temp_2 = GetRectCenterY(area_2) + SingleUnitData_pos_y[this_54]
	local playercolor pc
	local real scale
	local integer this_val
	local integer this_55
	local integer result_2
	local integer i_3
	local integer temp
	local integer this_val_2
	local integer this_56
	local integer result_3
	local integer i_4
	local integer temp_2
	local string name
	local integer this_val_3
	local integer this_57
	local integer result_4
	local integer i_5
	local integer temp_3
	local integer life
	local integer this_val_4
	local integer this_58
	local integer i_6
	local integer temp_4
	local integer life_2
	local integer this_val_5
	local integer this_59
	local integer result_5
	local integer i_7
	local integer temp_5
	local integer this_val_6
	local integer this_60
	local integer result_6
	local integer i_8
	local integer temp_6
	local integer this_val_7
	local integer this_61
	local integer result_7
	local integer i_9
	local integer temp_7
	local integer this_val_8
	local integer this_62
	local integer result_8
	local integer i_10
	local integer temp_8
	call SetUnitX(tuple_temp, temp_9 + SingleUnitData_pos_x[this_54])
	call SetUnitY(tuple_temp, tuple_temp_2)
	set pc = Playercolor_LOOKUP[SingleUnitData_playerColorId[this_54]]
	set YUnitData_pc[GetUnitUserData(tuple_temp)] = pc
	call SetUnitColor(tuple_temp, pc)
	set scale = SingleUnitData_size[this_54]
	set YUnitData_scale[GetUnitUserData(tuple_temp)] = scale
	call SetUnitScale(tuple_temp, scale, scale, scale)
	set this_val = SingleUnitData_flags_val[this_54]
	set this_55 = 2
	set result_2 = 1
	set i_3 = 1
	set temp = 1
	loop
		exitwhen i_3 > temp
		set result_2 = result_2 * this_55
		set i_3 = i_3 + 1
	endloop
	if ModuloInteger(this_val, result_2 * 2) >= result_2 then
		call yunit_setName(what_u, SingleUnitData_customName[this_54])
	endif
	set this_val_2 = SingleUnitData_flags_val[this_54]
	set this_56 = 2
	set result_3 = 1
	set i_4 = 1
	set temp_2 = 0
	loop
		exitwhen i_4 > temp_2
		set result_3 = result_3 * this_56
		set i_4 = i_4 + 1
	endloop
	if ModuloInteger(this_val_2, result_3 * 2) >= result_3 then
		set name = SingleUnitData_customHeroName[this_54]
		set YUnitData_hasCustomHeroName[GetUnitUserData(what_u)] = true
		call BlzSetHeroProperName(what_u, name)
	endif
	set this_val_3 = SingleUnitData_flags_val[this_54]
	set this_57 = 2
	set result_4 = 1
	set i_5 = 1
	set temp_3 = 2
	loop
		exitwhen i_5 > temp_3
		set result_4 = result_4 * this_57
		set i_5 = i_5 + 1
	endloop
	if ModuloInteger(this_val_3, result_4 * 2) >= result_4 then
		set life = SingleUnitData_maxLife[this_54]
		set YUnitData_hasCustomMaxLife[GetUnitUserData(what_u)] = true
		call BlzSetUnitMaxHP(what_u, life)
	endif
	set this_val_4 = SingleUnitData_flags_val[this_54]
	set this_58 = 2
	set dictionary = 1
	set i_6 = 1
	set temp_4 = 3
	loop
		exitwhen i_6 > temp_4
		set dictionary = dictionary * this_58
		set i_6 = i_6 + 1
	endloop
	if ModuloInteger(this_val_4, dictionary * 2) >= dictionary then
		set life_2 = SingleUnitData_maxMana[this_54]
		set YUnitData_hasCustomMaxMana[GetUnitUserData(what_u)] = true
		call BlzSetUnitMaxMana(what_u, life_2)
	endif
	set this_val_5 = SingleUnitData_flags_val[this_54]
	set this_59 = 2
	set result_5 = 1
	set i_7 = 1
	set temp_5 = 4
	loop
		exitwhen i_7 > temp_5
		set result_5 = result_5 * this_59
		set i_7 = i_7 + 1
	endloop
	if ModuloInteger(this_val_5, result_5 * 2) >= result_5 then
		call yunit_setDamage(what_u, SingleUnitData_damage[this_54])
	endif
	set this_val_6 = SingleUnitData_flags_val[this_54]
	set this_60 = 2
	set result_6 = 1
	set i_8 = 1
	set temp_6 = 5
	loop
		exitwhen i_8 > temp_6
		set result_6 = result_6 * this_60
		set i_8 = i_8 + 1
	endloop
	if ModuloInteger(this_val_6, result_6 * 2) >= result_6 then
		call yunit_setAttackCooldown(what_u, SingleUnitData_attackCooldown[this_54])
	endif
	set this_val_7 = SingleUnitData_flags_val[this_54]
	set this_61 = 2
	set result_7 = 1
	set i_9 = 1
	set temp_7 = 6
	loop
		exitwhen i_9 > temp_7
		set result_7 = result_7 * this_61
		set i_9 = i_9 + 1
	endloop
	if ModuloInteger(this_val_7, result_7 * 2) >= result_7 then
		call yunit_setHeight(what_u, SingleUnitData_flyHeight[this_54])
	endif
	set this_val_8 = SingleUnitData_flags_val[this_54]
	set this_62 = 2
	set result_8 = 1
	set i_10 = 1
	set temp_8 = 7
	loop
		exitwhen i_10 > temp_8
		set result_8 = result_8 * this_62
		set i_10 = i_10 + 1
	endloop
	if ModuloInteger(this_val_8, result_8 * 2) >= result_8 then
		call yunit_setTint(what_u, SingleUnitData_tint_red[this_54], SingleUnitData_tint_green[this_54], SingleUnitData_tint_blue[this_54], SingleUnitData_tint_alpha[this_54])
	endif
	set what_u = null
	set pc = null
	set tuple_temp = null
endfunction

function MultipleUnitData_apply takes integer this_54, rect area_2, player owner_4 returns nothing
	local integer iterator = new_HLIterator(MultipleUnitData_list[this_54])
	loop
		exitwhen HLIterator_i[iterator] >= HashList_size[HLIterator_list[iterator]]
		set HLIterator_i[iterator] = HLIterator_i[iterator] + 1
		call SingleUnitData_apply(LoadInteger(HashList_ht, HLIterator_list[iterator], HLIterator_i[iterator] - 1), area_2, owner_4, MultipleUnitData_dictionary[this_54])
	endloop
	if HLIterator_typeId[iterator] == 0 then
		call error("Double free: object of type HLIterator")
	else
		set HLIterator_nextFree[HLIterator_firstFree] = iterator
		set HLIterator_firstFree = HLIterator_firstFree + 1
		set HLIterator_typeId[iterator] = 0
	endif
endfunction

function TileData_apply takes integer this_54, rect area_2 returns nothing
	local integer iter_11 = new_RectTileIterator(area_2)
	local integer this_55
	local integer this_56
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_55 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_55] = 889
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_55 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_55] = 889
	endif
	set iter_7[this_55] = iter_11
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_56 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_56] = 865
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_56 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_56] = 865
	endif
	set this_51[this_56] = this_54
	set iter_8[this_56] = iter_11
	call executeWhile(1024, this_55, this_56)
	if RectTileIterator_typeId[iter_11] == 0 then
		call error("Double free: object of type RectTileIterator")
	else
		set RectTileIterator_nextFree[RectTileIterator_firstFree] = iter_11
		set RectTileIterator_firstFree = RectTileIterator_firstFree + 1
		set RectTileIterator_typeId[iter_11] = 0
	endif
endfunction

function RegionSaveData_startPaste takes integer this_54, real offset_x, real offset_y, integer specifier, integer cb returns nothing
	local rect area_2
	if RegionSaveData_valid[this_54] then
		call MoveRectTo(RegionSaveData_area[this_54], offset_x, offset_y)
		set cb = RegionSaveData_terrainData[this_54]
		set area_2 = RegionSaveData_area[this_54]
		call TileData_apply(TerrainData_tiles[cb], area_2)
		call HeightData_apply(TerrainData_height[cb], area_2)
		call MultipleUnitData_apply(RegionSaveData_unitData[this_54], RegionSaveData_area[this_54], Persistable_owner[this_54])
		call AtmosphericData_apply(RegionSaveData_atmosphericData[this_54], specifier)
		call RegionSaveData_onDestroy(this_54)
		if DataSerializable_typeId[this_54] == 0 then
			call error("Double free: object of type RegionSaveData")
		else
			set DataSerializable_nextFree[DataSerializable_firstFree] = this_54
			set DataSerializable_firstFree = DataSerializable_firstFree + 1
			set DataSerializable_typeId[this_54] = 0
		endif
	endif
	set area_2 = null
endfunction

function RegionSpecifier_startLoad takes integer this_54, integer cb returns nothing
	local unit this_55 = RegionSpecifier_what[this_54]
	call RegionSaveData_startPaste(RegionSpecifier_saveData[this_54], GetUnitX(this_55), GetUnitY(this_55), this_54, cb)
	call UnitRemoveAbility(RegionSpecifier_what[this_54], 1095577653)
	set this_55 = null
endfunction

function RegionSpecifier_closure_impl_3 takes integer this_54 returns nothing
	set this_54 = RegionSpecifier_lookup[GetUnitUserData(GetTriggerUnit())]
	if this_54 != 0 and GetSpellAbilityId() == 1095577653 then
		call RegionSpecifier_startLoad(this_54, 0)
	endif
endfunction

function RegionSpecifier_onDeselected takes integer this_54 returns nothing
	if Player_localPlayer == GetOwningPlayer(RegionSpecifier_what[this_54]) then
		call SetLightningColor(RegionSpecifier_horizTop[this_54], 0 * 1. / 255, 0 * 1. / 255, 0 * 1. / 255, 0 * 1. / 255)
		call SetLightningColor(RegionSpecifier_horizBot[this_54], 0 * 1. / 255, 0 * 1. / 255, 0 * 1. / 255, 0 * 1. / 255)
		call SetLightningColor(RegionSpecifier_vertLeft[this_54], 0 * 1. / 255, 0 * 1. / 255, 0 * 1. / 255, 0 * 1. / 255)
		call SetLightningColor(RegionSpecifier_vertRight[this_54], 0 * 1. / 255, 0 * 1. / 255, 0 * 1. / 255, 0 * 1. / 255)
	endif
endfunction

function RegionSpecifier_closure_impl_4 takes integer this_54 returns nothing
	set this_54 = RegionSpecifier_lookup[GetUnitUserData(GetTriggerUnit())]
	if this_54 != 0 then
		call RegionSpecifier_onDeselected(this_54)
	endif
endfunction

function Spawner_onSpawnerPointOrder takes nothing returns nothing
	local unit spawner = GetOrderedUnit()
	local integer order = GetIssuedOrderId()
	local real len
	local real x
	local real y
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	local real tuple_temp_4
	if GetUnitTypeId(spawner) != 2016489591 then
		set spawner = null
		return
	endif
	if order == 851971 or order == 851986 then
		call SetUnitPosition(spawner, GetOrderPointX(), GetOrderPointY())
	elseif order == 851990 then
		call IssueImmediateOrderById(spawner, 851972)
	elseif order != 852048 then
		set tuple_temp = GetOrderPointX()
		set tuple_temp_2 = GetOrderPointY()
		set tuple_temp_3 = tuple_temp - GetUnitX(spawner)
		set tuple_temp_4 = tuple_temp_2 - GetUnitY(spawner)
		set len = SquareRoot(tuple_temp_3 * tuple_temp_3 + tuple_temp_4 * tuple_temp_4)
		set x = 0.
		set y = 0.
		if len > 0.0 then
			set x = tuple_temp_3 / len
			set y = tuple_temp_4 / len
		endif
		call SetUnitPosition(spawner, tuple_temp + x * 512, tuple_temp_2 + y * 512)
	endif
	set spawner = null
endfunction

function Spawner_onSpawnerTargetOrder takes nothing returns nothing
	local unit spawner = GetOrderedUnit()
	local unit target = GetOrderTargetUnit()
	local integer order = GetIssuedOrderId()
	local boolean andLeft
	if GetUnitTypeId(spawner) != 2016489591 or target == null then
		set spawner = null
		set target = null
		return
	endif
	if order == 851971 then
		set andLeft = GetOwningPlayer(target) != GetOwningPlayer(spawner)
	else
		set andLeft = false
	endif
	if andLeft then
		call IssueImmediateOrderById(spawner, 851972)
	endif
	set spawner = null
	set target = null
endfunction

function Network_readBooleans takes integer this_54 returns nothing
	local integer this_55
	local integer this_56
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_55 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_55] = 881
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_55 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_55] = 881
	endif
	set this_28[this_55] = this_54
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_56 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_56] = 857
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_56 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_56] = 857
	endif
	set this_29[this_56] = this_54
	call executeWhile(128, this_55, this_56)
endfunction

function Network_readInts takes integer this_54 returns nothing
	local integer this_55
	local integer this_56
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_55 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_55] = 877
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_55 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_55] = 877
	endif
	set this_20[this_55] = this_54
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_56 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_56] = 853
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_56 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_56] = 853
	endif
	set this_21[this_56] = this_54
	call executeWhile(128, this_55, this_56)
endfunction

function Network_readReals takes integer this_54 returns nothing
	local integer this_55
	local integer this_56
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_55 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_55] = 879
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_55 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_55] = 879
	endif
	set this_24[this_55] = this_54
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_56 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_56] = 855
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_56 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_56] = 855
	endif
	set this_25[this_56] = this_54
	call executeWhile(128, this_55, this_56)
endfunction

function Network_readStrings takes integer this_54 returns nothing
	local integer this_55
	local integer this_56
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_55 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_55] = 883
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_55 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_55] = 883
	endif
	set this_32[this_55] = this_54
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_56 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_56] = 859
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_56 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_56] = 859
	endif
	set this_33[this_56] = this_54
	call executeWhile(128, this_55, this_56)
endfunction

function Network_receiveMetadata takes integer this_54 returns nothing
	local integer this_55
	local integer Metadata_MetadataStore_loadValue_result
	local integer Metadata_MetadataStore_loadValue_result_2
	local integer Metadata_MetadataStore_loadValue_result_3
	local integer Metadata_MetadataStore_loadValue_result_4
	local integer Metadata_MetadataStore_loadValue_result_5
	if Player_localPlayer == Network_sender[this_54] then
		return
	endif
	set this_55 = Network_metadataStore[this_54]
	set Metadata_MetadataStore_loadValue_result = GetStoredInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_55], MetadataStore_META_INTEGER_KEY)
	set Metadata_MetadataStore_loadValue_result_2 = GetStoredInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_55], MetadataStore_META_REAL_KEY)
	set Metadata_MetadataStore_loadValue_result_3 = GetStoredInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_55], MetadataStore_META_BOOLEAN_KEY)
	set Metadata_MetadataStore_loadValue_result_4 = GetStoredInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_55], MetadataStore_META_STRING_KEY)
	set Metadata_MetadataStore_loadValue_result_5 = GetStoredInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_55], MetadataStore_META_SYNC_ROUNDS_KEY)
	set Network_meta_ints[this_54] = Metadata_MetadataStore_loadValue_result
	set Network_meta_reals[this_54] = Metadata_MetadataStore_loadValue_result_2
	set Network_meta_booleans[this_54] = Metadata_MetadataStore_loadValue_result_3
	set Network_meta_asciiInts[this_54] = Metadata_MetadataStore_loadValue_result_4
	set Network_meta_syncs[this_54] = Metadata_MetadataStore_loadValue_result_5
	set Network_metaReceived[this_54] = true
endfunction

function StringEncoder_decode takes integer this_54 returns nothing
	local integer this_55 = StringEncoder_inputWriter[this_54]
	local integer reader_2 = new_HashReader(HashWriter_data[this_55], HashWriter_integerWriteIndex[this_55], HashWriter_realWriteIndex[this_55], HashWriter_stringWriteIndex[this_55], HashWriter_booleanWriteIndex[this_55])
	local integer this_56
	local integer this_57
	local integer this_58
	local integer reader_3
	set HashWriter_data[this_55] = 0
	call destroyHashWriter(this_55)
	set StringEncoder_inputReader[this_54] = reader_2
	set StringEncoder_inputWriter[this_54] = 0
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_56 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_56] = 888
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_56 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_56] = 888
	endif
	set this_49[this_56] = this_54
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_57 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_57] = 864
		else
			call error("Out of memory: Could not create Closure.")
			set this_57 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_57 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_57] = 864
	endif
	set this_50[this_57] = this_54
	call executeWhile(128, this_56, this_57)
	set this_58 = StringEncoder_outputWriter[this_54]
	set reader_3 = new_HashReader(HashWriter_data[this_58], HashWriter_integerWriteIndex[this_58], HashWriter_realWriteIndex[this_58], HashWriter_stringWriteIndex[this_58], HashWriter_booleanWriteIndex[this_58])
	set HashWriter_data[this_58] = 0
	call destroyHashWriter(this_58)
	set StringEncoder_outputReader[this_54] = reader_3
	set StringEncoder_outputWriter[this_54] = 0
endfunction

function Network_receiveRound takes integer this_54 returns nothing
	local player this_55 = Network_sender[this_54]
	local integer this_56
	local integer this_57
	local integer this_58
	local integer this_59
	local integer reader_2
	local integer this_60
	local boolean andLeft
	if GetPlayerSlotState(this_55) == PLAYER_SLOT_STATE_PLAYING then
		set andLeft = GetPlayerController(this_55) == MAP_CONTROL_USER
	else
		set andLeft = false
	endif
	if  not andLeft then
		call Network_abort(this_54)
		set this_55 = null
		return
	endif
	if  not Network_metaReceived[this_54] then
		call Network_receiveMetadata(this_54)
	endif
	if Player_localPlayer != Network_sender[this_54] then
		call Network_readInts(this_54)
		call Network_readReals(this_54)
		call Network_readBooleans(this_54)
		call Network_readStrings(this_54)
	endif
	set Network_counters_syncs[this_54] = Network_counters_syncs[this_54] + 1
	if Network_counters_syncs[this_54] < Network_meta_syncs[this_54] then
		if ForForceCallback_firstFree == 0 then
			if ForForceCallback_maxIndex < 32768 then
				set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
				set this_56 = ForForceCallback_maxIndex
				set ForForceCallback_typeId[this_56] = 798
			else
				call error("Out of memory: Could not create Closure.")
				set this_56 = 0
			endif
		else
			set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
			set this_56 = ForForceCallback_nextFree[ForForceCallback_firstFree]
			set ForForceCallback_typeId[this_56] = 798
		endif
		set this_35[this_56] = this_54
		if  not try(this_56) then
			call error("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
		endif
	else
		if Player_localPlayer != Network_sender[this_54] then
			call StringEncoder_decode(Network_stringEncoder[this_54])
			if LimitedExecuteCondition_firstFree == 0 then
				if LimitedExecuteCondition_maxIndex < 32768 then
					set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
					set this_57 = LimitedExecuteCondition_maxIndex
					set LimitedExecuteCondition_typeId[this_57] = 884
				else
					call error("Out of memory: Could not create Closure.")
					set this_57 = 0
				endif
			else
				set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
				set this_57 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
				set LimitedExecuteCondition_typeId[this_57] = 884
			endif
			set this_36[this_57] = this_54
			if LimitedExecuteAction_firstFree == 0 then
				if LimitedExecuteAction_maxIndex < 32768 then
					set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
					set this_58 = LimitedExecuteAction_maxIndex
					set LimitedExecuteAction_typeId[this_58] = 860
				else
					call error("Out of memory: Could not create Closure.")
					set this_58 = 0
				endif
			else
				set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
				set this_58 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
				set LimitedExecuteAction_typeId[this_58] = 860
			endif
			set this_37[this_58] = this_54
			call executeWhile(128, this_57, this_58)
			set this_59 = Network_dataWriter[this_54]
			set reader_2 = new_HashReader(HashWriter_data[this_59], HashWriter_integerWriteIndex[this_59], HashWriter_realWriteIndex[this_59], HashWriter_stringWriteIndex[this_59], HashWriter_booleanWriteIndex[this_59])
			set HashWriter_data[this_59] = 0
			call destroyHashWriter(this_59)
			set Network_dataReader[this_54] = reader_2
			set Network_dataWriter[this_54] = 0
		endif
		set this_60 = Network_dataReader[this_54]
		set HashReader_integerReadIndex[this_60] = 0
		set HashReader_realReadIndex[this_60] = 0
		set HashReader_stringReadIndex[this_60] = 0
		set HashReader_booleanReadIndex[this_60] = 0
		call dispatch_NetworkFinishedCallback_Network_NetworkFinishedCallback_onFinish(Network_finishCallback[this_54], 0, Network_dataReader[this_54])
		call Network_onDestroy(this_54)
		if Network_typeId[this_54] == 0 then
			call error("Double free: object of type Network")
		else
			set Network_nextFree[Network_firstFree] = this_54
			set Network_firstFree = Network_firstFree + 1
			set Network_typeId[this_54] = 0
		endif
	endif
	set this_55 = null
endfunction

function SimpleSynchronizer_onDestroy takes integer this_54 returns nothing
	local integer this_55
	set SimpleSynchronizer_reverseLookup[GetUnitUserData(SimpleSynchronizer_dummy[this_54])] = 0
	call RemoveUnit(SimpleSynchronizer_dummy[this_54])
	set this_55 = SimpleSynchronizer_callback[this_54]
	if SynchronizationCallback_typeId[this_55] == 0 then
		call error("Double free: object of type SynchronizationCallback")
	else
		set SynchronizationCallback_nextFree[SynchronizationCallback_firstFree] = this_55
		set SynchronizationCallback_firstFree = SynchronizationCallback_firstFree + 1
		set SynchronizationCallback_typeId[this_55] = 0
	endif
	set SimpleSynchronizer_LinkedListModule_size = SimpleSynchronizer_LinkedListModule_size - 1
	if this_54 != SimpleSynchronizer_LinkedListModule_first then
		set SimpleSynchronizer_LinkedListModule_next[SimpleSynchronizer_LinkedListModule_prev[this_54]] = SimpleSynchronizer_LinkedListModule_next[this_54]
	else
		set SimpleSynchronizer_LinkedListModule_first = SimpleSynchronizer_LinkedListModule_next[this_54]
	endif
	if this_54 != SimpleSynchronizer_LinkedListModule_last then
		set SimpleSynchronizer_LinkedListModule_prev[SimpleSynchronizer_LinkedListModule_next[this_54]] = SimpleSynchronizer_LinkedListModule_prev[this_54]
	else
		set SimpleSynchronizer_LinkedListModule_last = SimpleSynchronizer_LinkedListModule_prev[this_54]
	endif
endfunction

function SimpleSynchronizer_onPlayerFinishedSync takes integer this_54, player who_2 returns nothing
	local integer tuple_temp = bitset_add(SimpleSynchronizer_syncedPlayers_val[this_54], GetPlayerId(who_2))
	set SimpleSynchronizer_syncedPlayers_val[this_54] = tuple_temp
	if SimpleSynchronizer_syncedPlayers_val[this_54] == 268435455 then
		call Network_receiveRound(this_34[SimpleSynchronizer_callback[this_54]])
		call SimpleSynchronizer_onDestroy(this_54)
		if SimpleSynchronizer_typeId[this_54] == 0 then
			call error("Double free: object of type SimpleSynchronizer")
		else
			set SimpleSynchronizer_nextFree[SimpleSynchronizer_firstFree] = this_54
			set SimpleSynchronizer_firstFree = SimpleSynchronizer_firstFree + 1
			set SimpleSynchronizer_typeId[this_54] = 0
		endif
	endif
endfunction

function SyncSimple_closure_impl takes integer this_54 returns nothing
	local player who_2 = GetTriggerPlayer()
	local integer iterator
	local integer res
	if Iterator_firstFree_4 == 0 then
		if Iterator_maxIndex_4 < 32768 then
			set Iterator_maxIndex_4 = Iterator_maxIndex_4 + 1
			set this_54 = Iterator_maxIndex_4
			set Iterator_typeId[this_54] = 837
		else
			call error("Out of memory: Could not create Iterator.")
			set this_54 = 0
		endif
	else
		set Iterator_firstFree_4 = Iterator_firstFree_4 - 1
		set this_54 = Iterator_nextFree_3[Iterator_firstFree_4]
		set Iterator_typeId[this_54] = 837
	endif
	set Iterator_current_3[this_54] = SimpleSynchronizer_LinkedListModule_first
	set Iterator_destroyOnClose[this_54] = true
	set iterator = this_54
	loop
		exitwhen Iterator_current_3[iterator] == 0
		set res = Iterator_current_3[iterator]
		set Iterator_current_3[iterator] = SimpleSynchronizer_LinkedListModule_next[Iterator_current_3[iterator]]
		call SimpleSynchronizer_onPlayerFinishedSync(res, who_2)
	endloop
	if Iterator_destroyOnClose[iterator] then
		if Iterator_typeId[iterator] == 0 then
			call error("Double free: object of type Iterator")
		else
			set Iterator_nextFree_3[Iterator_firstFree_4] = iterator
			set Iterator_firstFree_4 = Iterator_firstFree_4 + 1
			set Iterator_typeId[iterator] = 0
		endif
	endif
	set who_2 = null
endfunction

function SyncSimple_closure_impl_2 takes integer this_54 returns nothing
	set this_54 = SimpleSynchronizer_reverseLookup[GetUnitUserData(GetTriggerUnit())]
	if this_54 != 0 then
		call SimpleSynchronizer_onPlayerFinishedSync(this_54, GetTriggerPlayer())
	endif
endfunction

function LinkedList_remove takes integer this_54, integer elem returns nothing
	local integer entry = LLEntry_next[LinkedList_dummy[this_54]]
	loop
		exitwhen entry == LinkedList_dummy[this_54]
		if LLEntry_elem[entry] == elem then
			set LLEntry_next[LLEntry_prev[entry]] = LLEntry_next[entry]
			set LLEntry_prev[LLEntry_next[entry]] = LLEntry_prev[entry]
			if LLEntry_typeId[entry] == 0 then
				call error("Double free: object of type LLEntry")
			else
				set LLEntry_nextFree[LLEntry_firstFree] = entry
				set LLEntry_firstFree = LLEntry_firstFree + 1
				set LLEntry_typeId[entry] = 0
			endif
			set LinkedList_size[this_54] = LinkedList_size[this_54] - 1
			return
		endif
		set entry = LLEntry_next[entry]
	endloop
endfunction

function onBuild takes nothing returns nothing
	local unit what_2 = GetConstructingStructure()
	local integer closestBuilder
	local real maxDistance
	local integer iterator
	local integer data_2
	local real distanceSq
	local unit this_54
	local real temp
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	call ReplaceUnitBJ(what_2, GetUnitTypeId(what_2), bj_UNIT_STATE_METHOD_MAXIMUM)
	set closestBuilder = 0
	set maxDistance = 100000000.
	set iterator = new_LLIterator_2(InstantBuild_builders)
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
		set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
		set data_2 = LLEntry_elem[LLIterator_current[iterator]]
		set this_54 = BuilderData_what[data_2]
		set temp = GetUnitX(this_54)
		set tuple_temp = GetUnitY(this_54)
		set tuple_temp_2 = temp - GetUnitX(what_2)
		set tuple_temp_3 = tuple_temp - GetUnitY(what_2)
		set distanceSq = tuple_temp_2 * tuple_temp_2 + tuple_temp_3 * tuple_temp_3
		if distanceSq < maxDistance then
			set maxDistance = distanceSq
			set closestBuilder = data_2
		endif
	endloop
	if LLIterator_destroyOnClose[iterator] then
		if LLIterator_typeId[iterator] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator] = 0
		endif
	endif
	if closestBuilder != 0 then
		call SetUnitPosition(BuilderData_what[closestBuilder], BuilderData_pos_x[closestBuilder], BuilderData_pos_y[closestBuilder])
		call LinkedList_remove(InstantBuild_builders, closestBuilder)
		if BuilderData_typeId[closestBuilder] == 0 then
			call error("Double free: object of type BuilderData")
		else
			set BuilderData_nextFree[BuilderData_firstFree] = closestBuilder
			set BuilderData_firstFree = BuilderData_firstFree + 1
			set BuilderData_typeId[closestBuilder] = 0
		endif
	endif
	set what_2 = null
	set this_54 = null
endfunction

function new_BuilderData takes unit what_2, real pos_x, real pos_y returns integer
	local integer this_54
	if BuilderData_firstFree == 0 then
		if BuilderData_maxIndex < 32768 then
			set BuilderData_maxIndex = BuilderData_maxIndex + 1
			set this_54 = BuilderData_maxIndex
			set BuilderData_typeId[this_54] = 651
		else
			call error("Out of memory: Could not create BuilderData.")
			set this_54 = 0
		endif
	else
		set BuilderData_firstFree = BuilderData_firstFree - 1
		set this_54 = BuilderData_nextFree[BuilderData_firstFree]
		set BuilderData_typeId[this_54] = 651
	endif
	set BuilderData_what[this_54] = what_2
	set BuilderData_pos_x[this_54] = pos_x
	set BuilderData_pos_y[this_54] = pos_y
	return this_54
endfunction

function onOrder takes nothing returns nothing
	local unit what_2 = GetOrderedUnit()
	local integer orderId = GetIssuedOrderId()
	local integer value_2 = orderId
	local integer isNegative = 0
	local integer builderData
	local integer this_54
	local integer entry
	if orderId < 0 then
		set value_2 = -2147483648 + orderId
		set isNegative = 1
	endif
	if isNegative * 128 + value_2 / 16777216 > 0 then
		set builderData = new_BuilderData(what_2, GetUnitX(what_2), GetUnitY(what_2))
		set this_54 = InstantBuild_builders
		set entry = new_LLEntry(builderData, LLEntry_prev[LinkedList_dummy[this_54]], LinkedList_dummy[this_54])
		set LLEntry_next[LLEntry_prev[LinkedList_dummy[this_54]]] = entry
		set LLEntry_prev[LinkedList_dummy[this_54]] = entry
		set LinkedList_size[this_54] = LinkedList_size[this_54] + 1
		call SetUnitPosition(what_2, GetOrderPointX(), GetOrderPointY())
	endif
	set what_2 = null
endfunction

function dispatch_EventListener_ClosureEvents_EventListener_onEvent takes integer this_54 returns nothing
	if EventListener_typeId[this_54] <= 772 then
		if EventListener_typeId[this_54] <= 769 then
			if EventListener_typeId[this_54] <= 767 then
				if EventListener_typeId[this_54] <= 766 then
					call FormationMovement_closure_impl(this_54)
				else
					call onBuild()
				endif
			elseif EventListener_typeId[this_54] <= 768 then
				call onOrder()
			else
				call MiscInit_closure_impl(this_54)
			endif
		elseif EventListener_typeId[this_54] <= 771 then
			if EventListener_typeId[this_54] <= 770 then
				call MiscInit_closure_impl_2(this_54)
			else
				call RegionSpecifier_closure_impl(this_54)
			endif
		else
			call RegionSpecifier_closure_impl_4(this_54)
		endif
	elseif EventListener_typeId[this_54] <= 775 then
		if EventListener_typeId[this_54] <= 774 then
			if EventListener_typeId[this_54] <= 773 then
				call RegionSpecifier_closure_impl_2(this_54)
			else
				call RegionSpecifier_closure_impl_3(this_54)
			endif
		else
			call Spawner_onSpawnerPointOrder()
		endif
	elseif EventListener_typeId[this_54] <= 777 then
		if EventListener_typeId[this_54] <= 776 then
			call Spawner_onSpawnerTargetOrder()
		else
			call SyncSimple_closure_impl_2(this_54)
		endif
	else
		call SyncSimple_closure_impl(this_54)
	endif
endfunction

function registerEventId takes eventid evnt returns integer
	local integer eventId = GetHandleId(evnt)
	local integer eventId_2
	local integer eventId_3
	local integer eventId_4
	local boolean andLeft
	local boolean andLeft_2
	set ClosureEvents_eventTypeCounter = ClosureEvents_eventTypeCounter + 1
	set ClosureEvents_eventidToIndex[eventId] = ClosureEvents_eventTypeCounter
	set eventId_2 = GetHandleId(evnt)
	if (eventId_2 >= 18 and eventId_2 <= 51) or (eventId_2 >= 269 and eventId_2 <= 277) then
		call registerPlayerUnitEvent(ConvertPlayerUnitEvent(eventId), null, ref_function_EventListener_generalEventCallback, null)
	else
		if evnt != EVENT_UNIT_DAMAGED and evnt != EVENT_PLAYER_LEAVE and evnt != ClosureEvents_EVENT_PLAYER_CHAT_FILTER then
			set eventId_3 = GetHandleId(evnt)
			set andLeft = eventId_3 < 261 or eventId_3 > 268 and eventId_3 != 17
		else
			set andLeft = false
		endif
		if andLeft then
			set eventId_4 = GetHandleId(evnt)
			set andLeft_2 = eventId_4 < 305 or eventId_4 > 307
		else
			set andLeft_2 = false
		endif
		if andLeft_2 then
			call error("registering handleid: " + I2S(eventId) + " non-playerunitevent. Except EVENT_UNIT_DAMAGED and EVENT_PLAYER_LEAVE these are not supported right now.")
		endif
	endif
	return ClosureEvents_eventTypeCounter
endfunction

function EventListener_generalEventCallback takes nothing returns nothing
	local unit trigUnit = GetTriggerUnit()
	local eventid this_54 = GetTriggerEventId()
	local integer id_2 = ClosureEvents_eventidToIndex[GetHandleId(this_54)]
	local integer id
	local integer listener
	local integer listener_2
	local boolean andLeft
	if id_2 == 0 then
		set id_2 = registerEventId(this_54)
	endif
	set id = id_2
	if trigUnit != null then
		set andLeft = GetUnitUserData(trigUnit) > 0
	else
		set andLeft = false
	endif
	if andLeft then
		if EventListener_unitListenersFirsts[GetUnitUserData(trigUnit)] != 0 then
			set listener = EventListener_unitListenersFirsts[GetUnitUserData(trigUnit)]
			loop
				exitwhen listener == 0
				if EventListener_eventId[listener] == id then
					call dispatch_EventListener_ClosureEvents_EventListener_onEvent(listener)
				endif
				set listener = EventListener_next[listener]
			endloop
		endif
	endif
	if EventListener_generalListenersFirsts[id] != 0 then
		set listener_2 = EventListener_generalListenersFirsts[id]
		loop
			exitwhen listener_2 == 0
			call dispatch_EventListener_ClosureEvents_EventListener_onEvent(listener_2)
			set listener_2 = EventListener_next[listener_2]
		endloop
	endif
	set trigUnit = null
	set this_54 = null
endfunction

function ClosureEvents_closure_impl_2 takes nothing returns nothing
	call EventListener_generalEventCallback()
endfunction

function HashList_decrOccurences takes integer this_54, integer elem returns nothing
	call SaveInteger(HashList_occurences, this_54, elem, LoadInteger(HashList_occurences, this_54, elem) - 1)
endfunction

function HashList_removeAt takes integer this_54, integer index returns nothing
	local integer i_3
	local integer temp
	call HashList_decrOccurences(this_54, LoadInteger(HashList_ht, this_54, index))
	set i_3 = index
	set temp = HashList_size[this_54]
	loop
		exitwhen i_3 > temp
		call SaveInteger(HashList_ht, this_54, i_3, LoadInteger(HashList_ht, this_54, i_3 + 1))
		set i_3 = i_3 + 1
	endloop
	set HashList_size[this_54] = HashList_size[this_54] - 1
endfunction

function HashSet_removeAt takes integer this_54, integer index returns nothing
	local integer i_3
	local integer temp
	call RemoveSavedInteger(HashSet_position, this_54, LoadInteger(HashList_ht, this_54, index))
	set i_3 = index + 1
	set temp = HashList_size[this_54]
	loop
		exitwhen i_3 > temp
		call SaveInteger(HashSet_position, this_54, LoadInteger(HashList_ht, this_54, i_3), LoadInteger(HashSet_position, this_54, LoadInteger(HashList_ht, this_54, i_3)) - 1)
		set i_3 = i_3 + 1
	endloop
	call HashList_removeAt(this_54, index)
endfunction

function HashList_remove takes integer this_54, integer t returns nothing
	local integer i_3 = 0
	local integer temp = HashList_size[this_54] - 1
	loop
		exitwhen i_3 > temp
		if t == LoadInteger(HashList_ht, this_54, i_3) then
			if HashList_typeId[this_54] <= 824 then
				call HashList_removeAt(this_54, i_3)
			else
				call HashSet_removeAt(this_54, i_3)
			endif
			exitwhen true
		endif
		set i_3 = i_3 + 1
	endloop
endfunction

function HashSet_remove takes integer this_54, integer elem returns nothing
	if LoadInteger(HashList_occurences, this_54, elem) > 0 then
		call HashSet_removeAt(this_54, LoadInteger(HashSet_position, this_54, elem))
	endif
endfunction

function IterableMap_remove takes integer this_54, integer key returns nothing
	local integer this_55
	call RemoveSavedInteger(Table_ht, this_54, key)
	if LoadInteger(HashList_occurences, IterableMap_keys[this_54], key) > 0 then
		set this_55 = IterableMap_keys[this_54]
		if HashList_typeId[this_55] <= 824 then
			call HashList_remove(this_55, key)
		else
			call HashSet_remove(this_55, key)
		endif
	endif
endfunction

function OnCastListener_onDestroy takes integer this_54 returns nothing
	if OnCastListener_eventUnit[this_54] != null then
		if LoadInteger(Table_ht, EventListener_castMapCasters, GetHandleId(OnCastListener_eventUnit[this_54])) == this_54 then
			call dispatch_HashMap_HashMap_HashMap_put(EventListener_castMapCasters, GetHandleId(OnCastListener_eventUnit[this_54]), OnCastListener_next[this_54])
		elseif OnCastListener_prev[this_54] != 0 then
			set OnCastListener_next[OnCastListener_prev[this_54]] = OnCastListener_next[this_54]
		endif
	elseif LoadInteger(Table_ht, EventListener_castMap, OnCastListener_abilId[this_54]) == this_54 then
		call dispatch_HashMap_HashMap_HashMap_put(EventListener_castMap, OnCastListener_abilId[this_54], OnCastListener_next[this_54])
	elseif OnCastListener_prev[this_54] != 0 then
		set OnCastListener_next[OnCastListener_prev[this_54]] = OnCastListener_next[this_54]
	endif
	set OnCastListener_prev[OnCastListener_next[this_54]] = OnCastListener_prev[this_54]
	set OnCastListener_next[this_54] = 0
	set OnCastListener_prev[this_54] = 0
endfunction

function destroyEventListener takes integer this_54 returns nothing
	local integer listener = EventListener_generalListenersFirsts[EventListener_eventId[this_54]]
	if listener == this_54 then
		set EventListener_generalListenersFirsts[EventListener_eventId[this_54]] = EventListener_next[this_54]
	elseif EventListener_prev[this_54] != 0 then
		set EventListener_next[EventListener_prev[this_54]] = EventListener_next[this_54]
	endif
	set EventListener_prev[EventListener_next[this_54]] = EventListener_prev[this_54]
	set listener = EventListener_unitListenersFirsts[EventListener_eventId[this_54]]
	if listener == this_54 then
		set EventListener_unitListenersFirsts[EventListener_eventId[this_54]] = EventListener_next[this_54]
	elseif EventListener_prev[this_54] != 0 then
		set EventListener_next[EventListener_prev[this_54]] = EventListener_next[this_54]
	endif
	set EventListener_prev[EventListener_next[this_54]] = EventListener_prev[this_54]
	set EventListener_next[this_54] = 0
	set EventListener_prev[this_54] = 0
	if EventListener_typeId[this_54] == 0 then
		call error("Double free: object of type EventListener")
	else
		set EventListener_nextFree[EventListener_firstFree] = this_54
		set EventListener_firstFree = EventListener_firstFree + 1
		set EventListener_typeId[this_54] = 0
	endif
endfunction

function unregisterEvents takes integer id returns nothing
	local integer listener
	local integer t
	if id > 0 then
		if EventListener_unitListenersFirsts[id] != 0 then
			set listener = EventListener_unitListenersFirsts[id]
			set EventListener_unitListenersFirsts[id] = 0
			loop
				exitwhen listener == 0
				set t = listener
				set listener = EventListener_next[listener]
				call destroyEventListener(t)
			endloop
		endif
	endif
endfunction

function unregisterEventsForUnit takes unit u returns nothing
	local integer listener
	local integer t
	local integer listener_2
	local integer t_2
	local integer this_54
	local integer key
	call unregisterEvents(GetUnitUserData(u))
	if HaveSavedInteger(Table_ht, EventListener_castMapCasters, GetHandleId(u)) then
		set listener = LoadInteger(Table_ht, EventListener_castMapCasters, GetHandleId(u))
		set this_54 = EventListener_castMapCasters
		set key = GetHandleId(u)
		if Table_typeId[this_54] <= 983 then
			call RemoveSavedInteger(Table_ht, this_54, key)
		else
			call IterableMap_remove(this_54, key)
		endif
		loop
			exitwhen listener == 0
			set t = listener
			set listener = OnCastListener_next[listener]
			call OnCastListener_onDestroy(t)
			if OnCastListener_typeId[t] == 0 then
				call error("Double free: object of type OnCastListener")
			else
				set OnCastListener_firstFree = OnCastListener_firstFree + 1
				set OnCastListener_typeId[t] = 0
			endif
		endloop
	endif
	if HaveSavedInteger(Table_ht, EventListener_castMapCasters, GetHandleId(u)) then
		set listener_2 = LoadInteger(Table_ht, EventListener_castMapCasters, GetHandleId(u))
		loop
			exitwhen listener_2 == 0
			set t_2 = listener_2
			set listener_2 = OnCastListener_next[listener_2]
			call OnCastListener_onDestroy(t_2)
			if OnCastListener_typeId[t_2] == 0 then
				call error("Double free: object of type OnCastListener")
			else
				set OnCastListener_firstFree = OnCastListener_firstFree + 1
				set OnCastListener_typeId[t_2] = 0
			endif
		endloop
	endif
endfunction

function ClosureEvents_closure_impl_3 takes nothing returns nothing
	call unregisterEventsForUnit(UnitIndexer_deindexedUnit)
endfunction

function ClosureEvents_closure_impl_4 takes nothing returns nothing
	call EventListener_generalEventCallback()
endfunction

function ClosureEvents_closure_impl_5 takes nothing returns nothing
	call TriggerRegisterUnitEvent(ClosureEvents_unitTrig, UnitIndexer_indexedUnit, EVENT_UNIT_DAMAGED)
endfunction

function ClosureEvents_closure_impl_6 takes nothing returns nothing
	call EventListener_generalEventCallback()
endfunction

function dispatch_OnCastListener_ClosureEvents_OnCastListener_fire takes integer this_54, unit caster returns nothing
endfunction

function EventListener_onSpellEffect takes nothing returns nothing
	local unit trigUnit = GetTriggerUnit()
	local integer abilId = GetSpellAbilityId()
	local integer listener
	local integer listener_2
	if HaveSavedInteger(Table_ht, EventListener_castMapCasters, GetHandleId(trigUnit)) then
		set listener = LoadInteger(Table_ht, EventListener_castMapCasters, GetHandleId(trigUnit))
		loop
			exitwhen listener == 0
			if OnCastListener_abilId[listener] == -1 or OnCastListener_abilId[listener] == abilId then
				call dispatch_OnCastListener_ClosureEvents_OnCastListener_fire(listener, GetSpellAbilityUnit())
			endif
			set listener = OnCastListener_next[listener]
		endloop
	endif
	if HaveSavedInteger(Table_ht, EventListener_castMap, abilId) then
		set listener_2 = LoadInteger(Table_ht, EventListener_castMap, abilId)
		loop
			exitwhen listener_2 == 0
			if OnCastListener_eventUnit[listener_2] == null or OnCastListener_eventUnit[listener_2] == trigUnit then
				call dispatch_OnCastListener_ClosureEvents_OnCastListener_fire(listener_2, GetSpellAbilityUnit())
			endif
			set listener_2 = OnCastListener_next[listener_2]
		endloop
	endif
	set trigUnit = null
endfunction

function ClosureEvents_closure_impl_7 takes nothing returns nothing
	call EventListener_onSpellEffect()
endfunction

function ClosureForGroups_closure_impl takes nothing returns nothing
	call dispatch_ForGroupCallback_ClosureForGroups_ForGroupCallback_callback(ClosureForGroups_tempCallbacks[ClosureForGroups_tempCallbacksCount - 1], GetFilterUnit())
endfunction

function GameTimer_closure_impl takes nothing returns nothing
	set GameTimer_currentTime = GameTimer_currentTime + 0.030
endfunction

function player_getNameRealColored takes player this_54 returns string
	local integer tuple_temp = player_getRealColor(this_54)
	local integer this_green = player_getRealColor_return_green
	local integer this_blue = player_getRealColor_return_blue
	local integer temp = tuple_temp
	local string result_2 = ""
	local integer i_3 = 1
	local integer temp_2 = 2
	local integer temp_3
	local string result_3
	local integer i_4
	local integer temp_4
	local integer temp_5
	local string result_4
	local integer i_5
	local integer temp_6
	local string temp_7
	local string temp_8
	loop
		exitwhen i_3 > temp_2
		set result_2 = Integer_hexs[ModuloInteger(temp, 16)] + result_2
		set temp = temp / 16
		set i_3 = i_3 + 1
	endloop
	set temp_7 = "|cff" + result_2
	set temp_3 = this_green
	set result_3 = ""
	set i_4 = 1
	set temp_4 = 2
	loop
		exitwhen i_4 > temp_4
		set result_3 = Integer_hexs[ModuloInteger(temp_3, 16)] + result_3
		set temp_3 = temp_3 / 16
		set i_4 = i_4 + 1
	endloop
	set temp_8 = temp_7 + result_3
	set temp_5 = this_blue
	set result_4 = ""
	set i_5 = 1
	set temp_6 = 2
	loop
		exitwhen i_5 > temp_6
		set result_4 = Integer_hexs[ModuloInteger(temp_5, 16)] + result_4
		set temp_5 = temp_5 / 16
		set i_5 = i_5 + 1
	endloop
	return temp_8 + result_4 + GetPlayerName(this_54) + "|r"
endfunction

function MiscInit_closure_impl_3 takes nothing returns nothing
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 30., "|c006d619e>> |r" + "Player " + player_getNameRealColored(GetTriggerPlayer()) + " has left the game.")
endfunction

function OnUnitEnterLeave_closure_impl_2 takes nothing returns nothing
	local unit leavingUnit = GetTriggerUnit()
	if GetUnitAbilityLevel(leavingUnit, 1095577649) == 0 then
		set OnUnitEnterLeave_tempUnits[OnUnitEnterLeave_tempUnitsCount] = leavingUnit
		set OnUnitEnterLeave_tempUnitsCount = OnUnitEnterLeave_tempUnitsCount + 1
		call TriggerExecute(OnUnitEnterLeave_eventTrigger)
		set OnUnitEnterLeave_tempUnitsCount = OnUnitEnterLeave_tempUnitsCount - 1
	endif
	set leavingUnit = null
endfunction

function prepareUnit takes unit u returns nothing
	call UnitAddAbility(u, 1095577649)
	call UnitMakeAbilityPermanent(u, true, 1095577649)
	set OnUnitEnterLeave_tempUnits[OnUnitEnterLeave_tempUnitsCount] = u
	set OnUnitEnterLeave_tempUnitsCount = OnUnitEnterLeave_tempUnitsCount + 1
	call TriggerEvaluate(OnUnitEnterLeave_eventTrigger)
	set OnUnitEnterLeave_tempUnitsCount = OnUnitEnterLeave_tempUnitsCount - 1
endfunction

function OnUnitEnterLeave_closure_impl_3 takes nothing returns nothing
	call prepareUnit(GetEnumUnit())
endfunction

function OnUnitEnterLeave_closure_impl_4 takes nothing returns nothing
	call prepareUnit(GetFilterUnit())
endfunction

function triggerFromIndex takes integer index returns trigger
	call SaveFogStateHandle(Table_ht, TypeCasting_typecastdata, 0, ConvertFogState(index))
	return LoadTriggerHandle(Table_ht, TypeCasting_typecastdata, 0)
endfunction

function RegisterEvents_closure_impl takes nothing returns boolean
	return TriggerEvaluate(triggerFromIndex(LoadInteger(Table_ht, RegisterEvents_onCastMap, GetSpellAbilityId())))
endfunction

function SyncSimple_closure_impl_3 takes nothing returns nothing
	local integer synchronizer_2 = SimpleSynchronizer_reverseLookup[GetUnitUserData(OnUnitEnterLeave_tempUnits[OnUnitEnterLeave_tempUnitsCount - 1])]
	local boolean andLeft
	if synchronizer_2 != 0 then
		set andLeft = SimpleSynchronizer_syncedPlayers_val[synchronizer_2] != 268435455
	else
		set andLeft = false
	endif
	if andLeft then
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., Loglevel_getTag(4) + " - " + "SimpleSynchronizer: dummy unit was removed before all players synced, make sure your map doesn't remove neutral dummy units")
	endif
endfunction

function new_UnitIndex takes unit whichUnit returns integer
	local integer this_54
	if UnitIndex_firstFree == 0 then
		if UnitIndex_maxIndex < 32768 then
			set UnitIndex_maxIndex = UnitIndex_maxIndex + 1
			set this_54 = UnitIndex_maxIndex
			set UnitIndex_typeId[this_54] = 996
		else
			call error("Out of memory: Could not create UnitIndex.")
			set this_54 = 0
		endif
	else
		set UnitIndex_firstFree = UnitIndex_firstFree - 1
		set this_54 = UnitIndex_nextFree[UnitIndex_firstFree]
		set UnitIndex_typeId[this_54] = 996
	endif
	set UnitIndex__unit[this_54] = whichUnit
	call SetUnitUserData(UnitIndex__unit[this_54], this_54)
	set UnitIndexer_indexedUnit = UnitIndex__unit[this_54]
	call TriggerEvaluate(UnitIndexer_onIndexTrigger)
	return this_54
endfunction

function UnitIndexer_closure_impl takes nothing returns nothing
	local unit this_54 = OnUnitEnterLeave_tempUnits[OnUnitEnterLeave_tempUnitsCount - 1]
	if GetUnitUserData(this_54) == 0 then
		call new_UnitIndex(this_54)
	endif
	set this_54 = null
endfunction

function destroyUnitIndex takes integer this_54 returns nothing
	set UnitIndexer_deindexedUnit = UnitIndex__unit[this_54]
	call TriggerEvaluate(UnitIndexer_onDeindexTrigger)
	call SetUnitUserData(UnitIndex__unit[this_54], 0)
	if UnitIndex_typeId[this_54] == 0 then
		call error("Double free: object of type UnitIndex")
	else
		set UnitIndex_nextFree[UnitIndex_firstFree] = this_54
		set UnitIndex_firstFree = UnitIndex_firstFree + 1
		set UnitIndex_typeId[this_54] = 0
	endif
endfunction

function unit_deindex takes unit this_54 returns boolean
	local integer instance
	if GetUnitUserData(this_54) == 0 then
		return false
	else
		set instance = GetUnitUserData(this_54)
		if instance == 0 then
			set instance = new_UnitIndex(this_54)
		endif
		call destroyUnitIndex(instance)
		return true
	endif
endfunction

function UnitIndexer_closure_impl_2 takes nothing returns nothing
	call unit_deindex(OnUnitEnterLeave_tempUnits[OnUnitEnterLeave_tempUnitsCount - 1])
endfunction

function DynamicEffectProxy_onDestroy takes integer this_54 returns nothing
	call DestroyEffect(DynamicEffectProxy_eff[this_54])
	set DynamicEffectProxy_LinkedListModule_size = DynamicEffectProxy_LinkedListModule_size - 1
	if this_54 != DynamicEffectProxy_LinkedListModule_first then
		set DynamicEffectProxy_LinkedListModule_next[DynamicEffectProxy_LinkedListModule_prev[this_54]] = DynamicEffectProxy_LinkedListModule_next[this_54]
	else
		set DynamicEffectProxy_LinkedListModule_first = DynamicEffectProxy_LinkedListModule_next[this_54]
	endif
	if this_54 != DynamicEffectProxy_LinkedListModule_last then
		set DynamicEffectProxy_LinkedListModule_prev[DynamicEffectProxy_LinkedListModule_next[this_54]] = DynamicEffectProxy_LinkedListModule_prev[this_54]
	else
		set DynamicEffectProxy_LinkedListModule_last = DynamicEffectProxy_LinkedListModule_prev[this_54]
	endif
endfunction

function UnitTag_onDestroy takes integer this_54 returns nothing
	local integer this_55
	if UnitTag_tag[this_54] != 0 then
		set this_55 = UnitTag_tag[this_54]
		call TextTagUpdater_onDestroy(this_55)
		if TextTagUpdater_typeId[this_55] == 0 then
			call error("Double free: object of type TextTagUpdater")
		else
			set TextTagUpdater_nextFree[TextTagUpdater_firstFree] = this_55
			set TextTagUpdater_firstFree = TextTagUpdater_firstFree + 1
			set TextTagUpdater_typeId[this_55] = 0
		endif
	endif
	call LinkedList_remove(UnitTag_currentlyVisible, this_54)
endfunction

function YUnitData_onDestroy takes integer this_54 returns nothing
	local unit this_55 = YUnitData_what[this_54]
	local integer id = GetUnitTypeId(this_55)
	local integer this_56
	local integer this_57
	if id != 2016489591 and id != 2016489592 and ( not unit_isShop(this_55)) then
		set this_56 = YUnitData_tag[this_54]
		call UnitTag_onDestroy(this_56)
		if UnitTag_typeId[this_56] == 0 then
			call error("Double free: object of type UnitTag")
		else
			set UnitTag_nextFree[UnitTag_firstFree] = this_56
			set UnitTag_firstFree = UnitTag_firstFree + 1
			set UnitTag_typeId[this_56] = 0
		endif
	endif
	if YUnitData_effectProxy[this_54] != 0 then
		set this_57 = YUnitData_effectProxy[this_54]
		call DynamicEffectProxy_onDestroy(this_57)
		if DynamicEffectProxy_typeId[this_57] == 0 then
			call error("Double free: object of type DynamicEffectProxy")
		else
			set DynamicEffectProxy_nextFree[DynamicEffectProxy_firstFree] = this_57
			set DynamicEffectProxy_firstFree = DynamicEffectProxy_firstFree + 1
			set DynamicEffectProxy_typeId[this_57] = 0
		endif
	endif
	set this_55 = null
endfunction

function YUnit_closure_impl takes nothing returns nothing
	local integer this_54 = GetUnitUserData(UnitIndexer_deindexedUnit)
	call YUnitData_onDestroy(this_54)
	if YUnitData_typeId[this_54] == 0 then
		call error("Double free: object of type YUnitData")
	else
		set YUnitData_nextFree[YUnitData_firstFree] = this_54
		set YUnitData_firstFree = YUnitData_firstFree + 1
		set YUnitData_typeId[this_54] = 0
	endif
endfunction

function new_UnitInfo takes integer parent returns integer
	local integer this_54
	if UnitInfo_firstFree == 0 then
		if UnitInfo_maxIndex < 32768 then
			set UnitInfo_maxIndex = UnitInfo_maxIndex + 1
			set this_54 = UnitInfo_maxIndex
		else
			call error("Out of memory: Could not create UnitInfo.")
			set this_54 = 0
		endif
	else
		set UnitInfo_firstFree = UnitInfo_firstFree - 1
		set this_54 = UnitInfo_nextFree[UnitInfo_firstFree]
	endif
	set UnitInfo_name[this_54] = ""
	set UnitInfo_shortDesc[this_54] = ""
	set UnitInfo_speech[this_54] = new_LinkedList()
	set UnitInfo_parent[this_54] = parent
	return this_54
endfunction

function new_UnitTag takes unit what_2 returns integer
	local integer this_54
	if UnitTag_firstFree == 0 then
		if UnitTag_maxIndex < 32768 then
			set UnitTag_maxIndex = UnitTag_maxIndex + 1
			set this_54 = UnitTag_maxIndex
			set UnitTag_typeId[this_54] = 999
		else
			call error("Out of memory: Could not create UnitTag.")
			set this_54 = 0
		endif
	else
		set UnitTag_firstFree = UnitTag_firstFree - 1
		set this_54 = UnitTag_nextFree[UnitTag_firstFree]
		set UnitTag_typeId[this_54] = 999
	endif
	set UnitTag_shown[this_54] = false
	set UnitTag_text[this_54] = ""
	set UnitTag_info[this_54] = new_UnitInfo(this_54)
	set UnitTag_what[this_54] = what_2
	set UnitTag_lookup[GetUnitUserData(what_2)] = this_54
	return this_54
endfunction

function construct_YUnitData takes integer this_54, unit what_2 returns nothing
	local integer id
	local boolean andLeft
	local boolean andLeft_2
	set YUnitData_scale[this_54] = 1.
	set YUnitData_lastFacingSet[this_54] = 0.
	set YUnitData_lastFacing_radians[this_54] = 0.
	set YUnitData_flyHeight[this_54] = 0.
	set YUnitData_tint_red[this_54] = 255
	set YUnitData_tint_green[this_54] = 255
	set YUnitData_tint_blue[this_54] = 255
	set YUnitData_tint_alpha[this_54] = 255
	set YUnitData_hasCustomName[this_54] = false
	set YUnitData_hasCustomHeroName[this_54] = false
	set YUnitData_hasCustomMaxLife[this_54] = false
	set YUnitData_hasCustomMaxMana[this_54] = false
	set YUnitData_hasCustomDamage[this_54] = false
	set YUnitData_hasCustomAttackCooldown[this_54] = false
	set YUnitData_hasCustomFlyHeight[this_54] = false
	set YUnitData_hasCustomTint[this_54] = false
	set YUnitData_simpleFormation[this_54] = 0
	set YUnitData_effectProxy[this_54] = 0
	set YUnitData_what[this_54] = what_2
	set id = GetUnitTypeId(what_2)
	if id != 2016489591 and id != 2016489592 and ( not unit_isShop(what_2)) then
		set YUnitData_tag[this_54] = new_UnitTag(what_2)
		call SetUnitScale(what_2, 1., 1., 1.)
		call SetUnitVertexColor(what_2, 255, 255, 255, 255)
	endif
	if IsUnitType(what_2, UNIT_TYPE_SUMMONED) then
		set andLeft = IsUnitType(what_2, UNIT_TYPE_MECHANICAL)
	else
		set andLeft = false
	endif
	if andLeft then
		set andLeft_2 =  not IsUnitType(what_2, UNIT_TYPE_ANCIENT)
	else
		set andLeft_2 = false
	endif
	if andLeft_2 then
		call UnitRemoveAbility(what_2, 1097690998)
		call UnitRemoveType(what_2, UNIT_TYPE_SUMMONED)
	endif
endfunction

function new_YUnitData takes unit what_2 returns integer
	local integer this_54
	if YUnitData_firstFree == 0 then
		if YUnitData_maxIndex < 32768 then
			set YUnitData_maxIndex = YUnitData_maxIndex + 1
			set this_54 = YUnitData_maxIndex
			set YUnitData_typeId[this_54] = 1010
		else
			call error("Out of memory: Could not create YUnitData.")
			set this_54 = 0
		endif
	else
		set YUnitData_firstFree = YUnitData_firstFree - 1
		set this_54 = YUnitData_nextFree[YUnitData_firstFree]
		set YUnitData_typeId[this_54] = 1010
	endif
	call construct_YUnitData(this_54, what_2)
	return this_54
endfunction

function YUnit_closure_impl_2 takes nothing returns nothing
	local unit what_2 = UnitIndexer_indexedUnit
	local integer yunit = new_YUnitData(what_2)
	local string msg
	if yunit != GetUnitUserData(what_2) then
		set msg = "Instances of YUnitData and UnitIndex are diverging! Expected " + I2S(GetUnitUserData(what_2)) + " as index but got " + I2S(yunit)
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., Loglevel_getTag(3) + " - " + msg)
	endif
	set what_2 = null
endfunction

function new_BigStringElement takes string data_2 returns integer
	local integer this_54
	if BigStringElement_firstFree == 0 then
		if BigStringElement_maxIndex < 32768 then
			set BigStringElement_maxIndex = BigStringElement_maxIndex + 1
			set this_54 = BigStringElement_maxIndex
			set BigStringElement_typeId[this_54] = 646
		else
			call error("Out of memory: Could not create BigStringElement.")
			set this_54 = 0
		endif
	else
		set BigStringElement_firstFree = BigStringElement_firstFree - 1
		set this_54 = BigStringElement_nextFree[BigStringElement_firstFree]
		set BigStringElement_typeId[this_54] = 646
	endif
	set BigStringElement_data[this_54] = data_2
	return this_54
endfunction

function BigString_appendChar takes integer this_54, string toAppend returns nothing
	local integer this_55
	local integer entry
	set BigString_length[this_54] = BigString_length[this_54] + 1
	if StringLength(BigString_currentWriteString[this_54]) >= BigString_maxLength[this_54] then
		set this_55 = BigString_data[this_54]
		set entry = new_LLEntry(new_BigStringElement(BigString_currentWriteString[this_54]), LLEntry_prev[LinkedList_dummy[this_55]], LinkedList_dummy[this_55])
		set LLEntry_next[LLEntry_prev[LinkedList_dummy[this_55]]] = entry
		set LLEntry_prev[LinkedList_dummy[this_55]] = entry
		set LinkedList_size[this_55] = LinkedList_size[this_55] + 1
		set BigString_currentWriteString[this_54] = toAppend
	else
		set BigString_currentWriteString[this_54] = BigString_currentWriteString[this_54] + toAppend
	endif
endfunction

function bwAnd32 takes integer lhs, integer rhs returns integer
	local integer value_2 = lhs
	local integer isNegative = 0
	local integer b1
	local integer b2
	local integer b3
	local integer b4
	local integer value_3
	local integer isNegative_2
	local integer b1_2
	local integer b2_2
	local integer b3_2
	local integer b4_2
	if lhs < 0 then
		set value_2 = -2147483648 + lhs
		set isNegative = 1
	endif
	set b1 = ModuloInteger(value_2, 256)
	set b2 = (value_2 - value_2 / 65536 * 65536) / 256
	set b3 = (value_2 - value_2 / 16777216 * 16777216) / 65536
	set b4 = isNegative * 128 + value_2 / 16777216
	set value_3 = rhs
	set isNegative_2 = 0
	if rhs < 0 then
		set value_3 = -2147483648 + rhs
		set isNegative_2 = 1
	endif
	set b1_2 = ModuloInteger(value_3, 256)
	set b2_2 = (value_3 - value_3 / 65536 * 65536) / 256
	set b3_2 = (value_3 - value_3 / 16777216 * 16777216) / 65536
	set b4_2 = isNegative_2 * 128 + value_3 / 16777216
	return BitwiseInit_andData[BitwiseInit_lbyte[b1] * 16 + BitwiseInit_lbyte[b1_2]] * 16 + BitwiseInit_andData[BitwiseInit_rbyte[b1] * 16 + BitwiseInit_rbyte[b1_2]] + (BitwiseInit_andData[BitwiseInit_lbyte[b2] * 16 + BitwiseInit_lbyte[b2_2]] * 16 + BitwiseInit_andData[BitwiseInit_rbyte[b2] * 16 + BitwiseInit_rbyte[b2_2]]) * 256 + (BitwiseInit_andData[BitwiseInit_lbyte[b3] * 16 + BitwiseInit_lbyte[b3_2]] * 16 + BitwiseInit_andData[BitwiseInit_rbyte[b3] * 16 + BitwiseInit_rbyte[b3_2]]) * 65536 + (BitwiseInit_andData[BitwiseInit_lbyte[b4] * 16 + BitwiseInit_lbyte[b4_2]] * 16 + BitwiseInit_andData[BitwiseInit_rbyte[b4] * 16 + BitwiseInit_rbyte[b4_2]]) * 16777216
endfunction

function Base64Encoder_encodeSingle takes integer this_54, integer byte, integer count_3 returns nothing
	local integer remaining = byte
	local integer i_3 = 0
	local integer temp = count_3
	local integer this_55
	local integer value_2
	local integer isNegative
	loop
		exitwhen i_3 > temp
		set this_55 = bwAnd32(remaining, 16515072)
		set value_2 = this_55
		set isNegative = 0
		if this_55 < 0 then
			set value_2 = -2147483648 + this_55
			set isNegative = 1
		endif
		call BigString_appendChar(Base64Encoder_stringBuffer[this_54], Base64_CHARMAP[isNegative * BitwiseInit_powShift[13] + value_2 / BitwiseInit_powShift[18]])
		set byte = 6
		set remaining = remaining * BitwiseInit_powShift[6]
		set i_3 = i_3 + 1
	endloop
endfunction

function Base64Encoder_encode1 takes integer this_54 returns nothing
	call Base64Encoder_encodeSingle(this_54, ByteBuffer_readByteInternal(Base64Encoder_byteBuffer[this_54]) * BitwiseInit_powShift[16], 1)
	call BigString_appendChar(Base64Encoder_stringBuffer[this_54], "=")
	call BigString_appendChar(Base64Encoder_stringBuffer[this_54], "=")
endfunction

function Base64Encoder_encode2 takes integer this_54 returns nothing
	local integer ByteBuffer_ByteBuffer_readByteInternal_result = ByteBuffer_readByteInternal(Base64Encoder_byteBuffer[this_54])
	local integer ByteBuffer_ByteBuffer_readByteInternal_result_2 = ByteBuffer_readByteInternal(Base64Encoder_byteBuffer[this_54])
	call Base64Encoder_encodeSingle(this_54, ByteBuffer_ByteBuffer_readByteInternal_result * BitwiseInit_powShift[16] + ByteBuffer_ByteBuffer_readByteInternal_result_2 * BitwiseInit_powShift[8], 2)
	call BigString_appendChar(Base64Encoder_stringBuffer[this_54], "=")
endfunction

function Base64Encoder_closure_impl takes integer this_54 returns nothing
	local integer this_55 = Base64Encoder_byteBuffer[this_3[this_54]]
	local integer padding
	local integer this_56
	local integer this_57
	if ByteBuffer_currentWriteByteIndex[this_55] > 0 then
		call ByteBuffer_commitInt(this_55)
	endif
	call ByteBuffer_loadInt(this_55)
	set padding = ModuloInteger(ByteBuffer_byteCount[Base64Encoder_byteBuffer[this_3[this_54]]], 3)
	set Base64_loopActions = ByteBuffer_byteCount[Base64Encoder_byteBuffer[this_3[this_54]]] / 3 - 1
	set Base64_loopCounter = 0
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_56 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_56] = 870
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_56 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_56] = 870
	endif
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_57 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_57] = 846
		else
			call error("Out of memory: Could not create Closure.")
			set this_57 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_57 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_57] = 846
	endif
	set this_2[this_57] = this_3[this_54]
	call executeWhile(500, this_56, this_57)
	if padding == 2 then
		call Base64Encoder_encode2(this_3[this_54])
	endif
	if padding == 1 then
		call Base64Encoder_encode1(this_3[this_54])
	endif
endfunction

function ScriptContext_setVar takes integer this_54, string varName, real value_2 returns nothing
	set this_54 = ScriptContext_variableContext[this_54]
	call SaveReal(Table_ht, this_54, StringHash(varName), value_2)
endfunction

function cyc_Scripting_closure_impl takes integer funcChoice, integer this_54, integer context_3, integer arg1, integer arg2 returns nothing
	local integer this_55
	local integer temp
	local integer this_56
	local integer temp_2
	local real Scripting_Expr_eval_result
	local integer arg2_2
	local integer arg3
	local real value_2
	local integer arg
	local real Scripting_UnaryOp_run_result
	local real value_3
	local real Scripting_BinaryOp_run_result
	local integer cond_result
	local integer cond_result_2
	local integer cond_result_3
	local integer cond_result_4
	local integer cond_result_5
	local real temp_3
	local real temp_4
	local real temp_5
	local real temp_6
	local real temp_7
	local real temp_8
	local real temp_9
	local real temp_10
	local real temp_11
	local real temp_12
	if funcChoice == 0 then
		call cyc_Scripting_closure_impl(2, arg1, context_3, 0, 0)
		set temp = R2I(tempReturn_real)
		call cyc_Scripting_closure_impl(2, arg2, context_3, 0, 0)
		set this_55 = ModuloInteger(temp, R2I(tempReturn_real))
		set tempReturn_real = this_55 * 1.
		return
	elseif funcChoice == 1 then
		call cyc_Scripting_closure_impl(2, arg1, context_3, 0, 0)
		set temp_2 = R2I(tempReturn_real)
		call cyc_Scripting_closure_impl(2, arg2, context_3, 0, 0)
		set this_56 = temp_2 / R2I(tempReturn_real)
		set tempReturn_real = this_56 * 1.
		return
	elseif funcChoice == 2 then
		if Expr_typeId[this_54] <= 783 then
			if Expr_typeId[this_54] <= 781 then
				if Expr_typeId[this_54] <= 780 then
					call cyc_Scripting_closure_impl(3, BinaryExpr_operator[this_54], context_3, BinaryExpr_arg1[this_54], BinaryExpr_arg2[this_54])
					set Scripting_Expr_eval_result = tempReturn_real
				else
					set Scripting_Expr_eval_result = LiteralExpr_value[this_54]
				endif
			elseif Expr_typeId[this_54] <= 782 then
				set Scripting_Expr_eval_result = GameTimer_currentTime
			else
				set arg2_2 = TertiaryExpr_arg2[this_54]
				set arg3 = TertiaryExpr_arg3[this_54]
				call cyc_Scripting_closure_impl(2, TertiaryExpr_arg1[this_54], context_3, 0, 0)
				if tempReturn_real == 0. then
					call cyc_Scripting_closure_impl(2, arg3, context_3, 0, 0)
					set value_2 = tempReturn_real
				else
					call cyc_Scripting_closure_impl(2, arg2_2, context_3, 0, 0)
					set value_2 = tempReturn_real
				endif
				set Scripting_Expr_eval_result = value_2
			endif
		elseif Expr_typeId[this_54] <= 785 then
			if Expr_typeId[this_54] <= 784 then
				set arg = UnaryExpr_arg[this_54]
				if Op_typeId[UnaryExpr_operator[this_54]] <= 935 then
					call cyc_Scripting_closure_impl(2, arg, context_3, 0, 0)
					set Scripting_UnaryOp_run_result = Sin(tempReturn_real)
				else
					call cyc_Scripting_closure_impl(2, arg, context_3, 0, 0)
					set Scripting_UnaryOp_run_result = Cos(tempReturn_real)
				endif
				set Scripting_Expr_eval_result = Scripting_UnaryOp_run_result
			else
				set Scripting_Expr_eval_result = LoadReal(Table_ht, ScriptContext_variableContext[context_3], StringHash(VarGetExpr_varName[this_54]))
			endif
		else
			call cyc_Scripting_closure_impl(2, VarSetExpr_setExpr[this_54], context_3, 0, 0)
			set value_3 = tempReturn_real
			call ScriptContext_setVar(context_3, VarSetExpr_varName[this_54], value_3)
			set Scripting_Expr_eval_result = value_3
		endif
		set tempReturn_real = Scripting_Expr_eval_result
		return
	elseif funcChoice == 3 then
		if Op_typeId[this_54] <= 923 then
			if Op_typeId[this_54] <= 920 then
				if Op_typeId[this_54] <= 919 then
					if Op_typeId[this_54] <= 918 then
						call cyc_Scripting_closure_impl(2, arg1, context_3, 0, 0)
						set temp_3 = tempReturn_real
						call cyc_Scripting_closure_impl(2, arg2, context_3, 0, 0)
						set Scripting_BinaryOp_run_result = temp_3 * tempReturn_real
					else
						call cyc_Scripting_closure_impl(2, arg1, context_3, 0, 0)
						set temp_4 = tempReturn_real
						call cyc_Scripting_closure_impl(2, arg2, context_3, 0, 0)
						set Scripting_BinaryOp_run_result = temp_4 + tempReturn_real
					endif
				else
					call cyc_Scripting_closure_impl(2, arg1, context_3, 0, 0)
					set temp_5 = tempReturn_real
					call cyc_Scripting_closure_impl(2, arg2, context_3, 0, 0)
					set Scripting_BinaryOp_run_result = temp_5 / tempReturn_real
				endif
			elseif Op_typeId[this_54] <= 922 then
				if Op_typeId[this_54] <= 921 then
					call cyc_Scripting_closure_impl(2, arg1, context_3, 0, 0)
					set temp_6 = tempReturn_real
					call cyc_Scripting_closure_impl(2, arg2, context_3, 0, 0)
					set Scripting_BinaryOp_run_result = temp_6 - tempReturn_real
				else
					call cyc_Scripting_closure_impl(2, arg1, context_3, 0, 0)
					set temp_7 = tempReturn_real
					call cyc_Scripting_closure_impl(2, arg2, context_3, 0, 0)
					if temp_7 > tempReturn_real then
						set cond_result = 1
					else
						set cond_result = 0
					endif
					set Scripting_BinaryOp_run_result = cond_result
				endif
			else
				call cyc_Scripting_closure_impl(2, arg1, context_3, 0, 0)
				set temp_8 = tempReturn_real
				call cyc_Scripting_closure_impl(2, arg2, context_3, 0, 0)
				if temp_8 >= tempReturn_real then
					set cond_result_2 = 1
				else
					set cond_result_2 = 0
				endif
				set Scripting_BinaryOp_run_result = cond_result_2
			endif
		elseif Op_typeId[this_54] <= 926 then
			if Op_typeId[this_54] <= 925 then
				if Op_typeId[this_54] <= 924 then
					call cyc_Scripting_closure_impl(2, arg1, context_3, 0, 0)
					set temp_9 = tempReturn_real
					call cyc_Scripting_closure_impl(2, arg2, context_3, 0, 0)
					if temp_9 < tempReturn_real then
						set cond_result_3 = 1
					else
						set cond_result_3 = 0
					endif
					set Scripting_BinaryOp_run_result = cond_result_3
				else
					call cyc_Scripting_closure_impl(2, arg1, context_3, 0, 0)
					set temp_10 = tempReturn_real
					call cyc_Scripting_closure_impl(2, arg2, context_3, 0, 0)
					if temp_10 <= tempReturn_real then
						set cond_result_4 = 1
					else
						set cond_result_4 = 0
					endif
					set Scripting_BinaryOp_run_result = cond_result_4
				endif
			else
				call cyc_Scripting_closure_impl(2, arg1, context_3, 0, 0)
				set temp_11 = tempReturn_real
				call cyc_Scripting_closure_impl(2, arg2, context_3, 0, 0)
				if temp_11 == tempReturn_real then
					set cond_result_5 = 1
				else
					set cond_result_5 = 0
				endif
				set Scripting_BinaryOp_run_result = cond_result_5
			endif
		elseif Op_typeId[this_54] <= 928 then
			if Op_typeId[this_54] <= 927 then
				call cyc_Scripting_closure_impl(0, this_54, context_3, arg1, arg2)
				set Scripting_BinaryOp_run_result = tempReturn_real
			else
				call cyc_Scripting_closure_impl(1, this_54, context_3, arg1, arg2)
				set Scripting_BinaryOp_run_result = tempReturn_real
			endif
		else
			call cyc_Scripting_closure_impl(2, arg1, context_3, 0, 0)
			set temp_12 = tempReturn_real
			call cyc_Scripting_closure_impl(2, arg2, context_3, 0, 0)
			set Scripting_BinaryOp_run_result = GetRandomReal(temp_12, tempReturn_real)
		endif
		set tempReturn_real = Scripting_BinaryOp_run_result
		return
	endif
endfunction

function Argument_asString takes integer this_54, integer context_3 returns string
	local string s
	if Argument_isExpr[this_54] then
		call cyc_Scripting_closure_impl(2, Argument_expr[this_54], CommandContext_scriptContext[context_3], 0, 0)
		set s = R2S(tempReturn_real)
	else
		set s = Argument_value[this_54]
	endif
	return s
endfunction

function ArgumentParser_nextToken takes integer this_54 returns string
	local integer pos = BaseParser_pos[this_54]
	local integer start = pos
	local integer depth_2 = 0
	local string argStore = ""
	local string input = BaseParser_input[this_54]
	local integer length_3 = StringLength(input)
	local string char_2
	local integer index
	loop
		exitwhen pos >= length_3
		set char_2 = SubString(input, pos, pos + 1)
		if char_2 == "\\" then
			set argStore = argStore + SubString(input, start, pos)
			set index = pos + 1
			set argStore = argStore + SubString(input, index, index + 1)
			set pos = pos + 1
			set start = pos + 1
		elseif char_2 == "]" and depth_2 > 0 then
			set depth_2 = depth_2 - 1
			exitwhen depth_2 == 0
		elseif char_2 == "[" then
			if depth_2 == 0 and argStore != "" or start != pos then
				exitwhen true
			elseif depth_2 == 0 then
				set start = start + 1
			endif
			set depth_2 = depth_2 + 1
		elseif char_2 == " " and depth_2 == 0 then
			if argStore != "" or start != pos then
				exitwhen true
			else
				set start = start + 1
			endif
		endif
		set pos = pos + 1
	endloop
	set BaseParser_pos[this_54] = pos + 1
	return argStore + SubString(input, start, pos)
endfunction

function new_BinaryExpr takes integer operator, integer arg1, integer arg2 returns integer
	local integer this_54
	if Expr_firstFree == 0 then
		if Expr_maxIndex < 32768 then
			set Expr_maxIndex = Expr_maxIndex + 1
			set this_54 = Expr_maxIndex
			set Expr_typeId[this_54] = 780
		else
			call error("Out of memory: Could not create BinaryExpr.")
			set this_54 = 0
		endif
	else
		set Expr_firstFree = Expr_firstFree - 1
		set this_54 = Expr_nextFree[Expr_firstFree]
		set Expr_typeId[this_54] = 780
	endif
	set BinaryExpr_operator[this_54] = operator
	set BinaryExpr_arg1[this_54] = arg1
	set BinaryExpr_arg2[this_54] = arg2
	return this_54
endfunction

function new_NullaryExpr takes integer operator returns integer
	if Expr_firstFree == 0 then
		if Expr_maxIndex < 32768 then
			set Expr_maxIndex = Expr_maxIndex + 1
			set operator = Expr_maxIndex
			set Expr_typeId[operator] = 782
		else
			call error("Out of memory: Could not create NullaryExpr.")
			set operator = 0
		endif
	else
		set Expr_firstFree = Expr_firstFree - 1
		set operator = Expr_nextFree[Expr_firstFree]
		set Expr_typeId[operator] = 782
	endif
	return operator
endfunction

function new_TertiaryExpr takes integer operator, integer arg1, integer arg2, integer arg3 returns integer
	if Expr_firstFree == 0 then
		if Expr_maxIndex < 32768 then
			set Expr_maxIndex = Expr_maxIndex + 1
			set operator = Expr_maxIndex
			set Expr_typeId[operator] = 783
		else
			call error("Out of memory: Could not create TertiaryExpr.")
			set operator = 0
		endif
	else
		set Expr_firstFree = Expr_firstFree - 1
		set operator = Expr_nextFree[Expr_firstFree]
		set Expr_typeId[operator] = 783
	endif
	set TertiaryExpr_arg1[operator] = arg1
	set TertiaryExpr_arg2[operator] = arg2
	set TertiaryExpr_arg3[operator] = arg3
	return operator
endfunction

function new_UnaryExpr takes integer operator, integer arg returns integer
	local integer this_54
	if Expr_firstFree == 0 then
		if Expr_maxIndex < 32768 then
			set Expr_maxIndex = Expr_maxIndex + 1
			set this_54 = Expr_maxIndex
			set Expr_typeId[this_54] = 784
		else
			call error("Out of memory: Could not create UnaryExpr.")
			set this_54 = 0
		endif
	else
		set Expr_firstFree = Expr_firstFree - 1
		set this_54 = Expr_nextFree[Expr_firstFree]
		set Expr_typeId[this_54] = 784
	endif
	set UnaryExpr_operator[this_54] = operator
	set UnaryExpr_arg[this_54] = arg
	return this_54
endfunction

function new_VarGetExpr takes string varName returns integer
	local integer this_54
	if Expr_firstFree == 0 then
		if Expr_maxIndex < 32768 then
			set Expr_maxIndex = Expr_maxIndex + 1
			set this_54 = Expr_maxIndex
			set Expr_typeId[this_54] = 785
		else
			call error("Out of memory: Could not create VarGetExpr.")
			set this_54 = 0
		endif
	else
		set Expr_firstFree = Expr_firstFree - 1
		set this_54 = Expr_nextFree[Expr_firstFree]
		set Expr_typeId[this_54] = 785
	endif
	set VarGetExpr_varName[this_54] = varName
	return this_54
endfunction

function new_VarSetExpr takes string varName, integer setExpr returns integer
	local integer this_54
	if Expr_firstFree == 0 then
		if Expr_maxIndex < 32768 then
			set Expr_maxIndex = Expr_maxIndex + 1
			set this_54 = Expr_maxIndex
			set Expr_typeId[this_54] = 786
		else
			call error("Out of memory: Could not create VarSetExpr.")
			set this_54 = 0
		endif
	else
		set Expr_firstFree = Expr_firstFree - 1
		set this_54 = Expr_nextFree[Expr_firstFree]
		set Expr_typeId[this_54] = 786
	endif
	set VarSetExpr_varName[this_54] = varName
	set VarSetExpr_setExpr[this_54] = setExpr
	return this_54
endfunction

function createExpr takes string operator, integer exprlist returns integer
	local integer ret_expr = 0
	local string ret_error = null
	local integer hash
	local integer LinkedList_LinkedList_get_result
	local integer entry
	local integer i_3
	local integer temp
	local integer LinkedList_LinkedList_get_result_2
	local integer entry_2
	local integer i_4
	local integer temp_2
	local integer entry_3
	local integer i_5
	local integer temp_3
	local integer Table_Table_loadInt_result
	local integer entry_4
	local integer i_6
	local integer temp_4
	local integer entry_5
	local integer i_7
	local integer temp_5
	local integer entry_6
	local integer i_8
	local integer temp_6
	local integer entry_7
	local integer i_9
	local integer temp_7
	local integer entry_8
	local integer i_10
	local integer temp_8
	local integer entry_9
	local integer i_11
	local integer temp_9
	local string temp_10
	local integer temp_11
	local integer temp_12
	local integer temp_13
	local integer temp_14
	local integer temp_15
	local integer temp_16
	if operator == "get" then
		if LinkedList_size[exprlist] == 1 then
			set entry = LinkedList_dummy[exprlist]
			set i_3 = 0
			set temp = 0
			loop
				exitwhen i_3 > temp
				set entry = LLEntry_next[entry]
				set i_3 = i_3 + 1
			endloop
			set LinkedList_LinkedList_get_result = LLEntry_elem[entry]
			if Expr_typeId[LinkedList_LinkedList_get_result] == 781 then
				set ret_expr = new_VarGetExpr(LiteralExpr_strValue[LinkedList_LinkedList_get_result])
			else
				set ret_error = "expected literal in get-expression"
			endif
		else
			set ret_error = "expected 1 arguments for get-expression"
		endif
	elseif operator == "set" then
		if LinkedList_size[exprlist] == 2 then
			set entry_2 = LinkedList_dummy[exprlist]
			set i_4 = 0
			set temp_2 = 0
			loop
				exitwhen i_4 > temp_2
				set entry_2 = LLEntry_next[entry_2]
				set i_4 = i_4 + 1
			endloop
			set LinkedList_LinkedList_get_result_2 = LLEntry_elem[entry_2]
			if Expr_typeId[LinkedList_LinkedList_get_result_2] == 781 then
				set temp_10 = LiteralExpr_strValue[LinkedList_LinkedList_get_result_2]
				set entry_3 = LinkedList_dummy[exprlist]
				set i_5 = 0
				set temp_3 = 1
				loop
					exitwhen i_5 > temp_3
					set entry_3 = LLEntry_next[entry_3]
					set i_5 = i_5 + 1
				endloop
				set ret_expr = new_VarSetExpr(temp_10, LLEntry_elem[entry_3])
			else
				set ret_error = "expected literal in set-expression"
			endif
		else
			set ret_error = "expected 2 arguments for set-expression"
		endif
	else
		set hash = StringHash(operator)
		if  not HaveSavedInteger(Table_ht, Scripting_operators, hash) then
			set ret_error = "no such operator " + operator
		else
			set Table_Table_loadInt_result = LoadInteger(Table_ht, Scripting_operatorArity, hash)
			if Table_Table_loadInt_result != LinkedList_size[exprlist] then
				set ret_error = "expected " + I2S(Table_Table_loadInt_result) + " arguments for '" + operator + "' but got " + I2S(LinkedList_size[exprlist])
			elseif Table_Table_loadInt_result == 0 then
				set ret_expr = new_NullaryExpr(LoadInteger(Table_ht, Scripting_operators, hash))
			elseif Table_Table_loadInt_result == 1 then
				set temp_11 = LoadInteger(Table_ht, Scripting_operators, hash)
				set entry_4 = LinkedList_dummy[exprlist]
				set i_6 = 0
				set temp_4 = 0
				loop
					exitwhen i_6 > temp_4
					set entry_4 = LLEntry_next[entry_4]
					set i_6 = i_6 + 1
				endloop
				set ret_expr = new_UnaryExpr(temp_11, LLEntry_elem[entry_4])
			elseif Table_Table_loadInt_result == 2 then
				set temp_12 = LoadInteger(Table_ht, Scripting_operators, hash)
				set entry_5 = LinkedList_dummy[exprlist]
				set i_7 = 0
				set temp_5 = 0
				loop
					exitwhen i_7 > temp_5
					set entry_5 = LLEntry_next[entry_5]
					set i_7 = i_7 + 1
				endloop
				set temp_13 = LLEntry_elem[entry_5]
				set entry_6 = LinkedList_dummy[exprlist]
				set i_8 = 0
				set temp_6 = 1
				loop
					exitwhen i_8 > temp_6
					set entry_6 = LLEntry_next[entry_6]
					set i_8 = i_8 + 1
				endloop
				set ret_expr = new_BinaryExpr(temp_12, temp_13, LLEntry_elem[entry_6])
			elseif Table_Table_loadInt_result == 3 then
				set temp_14 = LoadInteger(Table_ht, Scripting_operators, hash)
				set entry_7 = LinkedList_dummy[exprlist]
				set i_9 = 0
				set temp_7 = 0
				loop
					exitwhen i_9 > temp_7
					set entry_7 = LLEntry_next[entry_7]
					set i_9 = i_9 + 1
				endloop
				set temp_15 = LLEntry_elem[entry_7]
				set entry_8 = LinkedList_dummy[exprlist]
				set i_10 = 0
				set temp_8 = 1
				loop
					exitwhen i_10 > temp_8
					set entry_8 = LLEntry_next[entry_8]
					set i_10 = i_10 + 1
				endloop
				set temp_16 = LLEntry_elem[entry_8]
				set entry_9 = LinkedList_dummy[exprlist]
				set i_11 = 0
				set temp_9 = 2
				loop
					exitwhen i_11 > temp_9
					set entry_9 = LLEntry_next[entry_9]
					set i_11 = i_11 + 1
				endloop
				set ret_expr = new_TertiaryExpr(temp_14, temp_15, temp_16, LLEntry_elem[entry_9])
			endif
		endif
	endif
	set createExpr_return_expr = ret_expr
	set createExpr_return_error = ret_error
	return createExpr_return_expr
endfunction

function cyc_destroyBinaryExpr takes integer funcChoice, integer this_54 returns nothing
	if funcChoice == 0 then
		call cyc_destroyBinaryExpr(4, BinaryExpr_arg1[this_54])
		call cyc_destroyBinaryExpr(4, BinaryExpr_arg2[this_54])
		if Expr_typeId[this_54] == 0 then
			call error("Double free: object of type BinaryExpr")
		else
			set Expr_nextFree[Expr_firstFree] = this_54
			set Expr_firstFree = Expr_firstFree + 1
			set Expr_typeId[this_54] = 0
		endif
	elseif funcChoice == 1 then
		call cyc_destroyBinaryExpr(4, TertiaryExpr_arg1[this_54])
		call cyc_destroyBinaryExpr(4, TertiaryExpr_arg2[this_54])
		call cyc_destroyBinaryExpr(4, TertiaryExpr_arg3[this_54])
		if Expr_typeId[this_54] == 0 then
			call error("Double free: object of type TertiaryExpr")
		else
			set Expr_nextFree[Expr_firstFree] = this_54
			set Expr_firstFree = Expr_firstFree + 1
			set Expr_typeId[this_54] = 0
		endif
	elseif funcChoice == 2 then
		call cyc_destroyBinaryExpr(4, VarSetExpr_setExpr[this_54])
		if Expr_typeId[this_54] == 0 then
			call error("Double free: object of type VarSetExpr")
		else
			set Expr_nextFree[Expr_firstFree] = this_54
			set Expr_firstFree = Expr_firstFree + 1
			set Expr_typeId[this_54] = 0
		endif
	elseif funcChoice == 3 then
		call cyc_destroyBinaryExpr(4, UnaryExpr_arg[this_54])
		if Expr_typeId[this_54] == 0 then
			call error("Double free: object of type UnaryExpr")
		else
			set Expr_nextFree[Expr_firstFree] = this_54
			set Expr_firstFree = Expr_firstFree + 1
			set Expr_typeId[this_54] = 0
		endif
	elseif funcChoice == 4 then
		if Expr_typeId[this_54] <= 783 then
			if Expr_typeId[this_54] <= 780 then
				if Expr_typeId[this_54] <= 779 then
					if Expr_typeId[this_54] == 0 then
						call error("Double free: object of type Expr")
					else
						set Expr_nextFree[Expr_firstFree] = this_54
						set Expr_firstFree = Expr_firstFree + 1
						set Expr_typeId[this_54] = 0
					endif
				else
					call cyc_destroyBinaryExpr(0, this_54)
				endif
			elseif Expr_typeId[this_54] <= 782 then
				if Expr_typeId[this_54] == 0 then
					call error("Double free: object of type Expr")
				else
					set Expr_nextFree[Expr_firstFree] = this_54
					set Expr_firstFree = Expr_firstFree + 1
					set Expr_typeId[this_54] = 0
				endif
			else
				call cyc_destroyBinaryExpr(1, this_54)
			endif
		elseif Expr_typeId[this_54] <= 785 then
			if Expr_typeId[this_54] <= 784 then
				call cyc_destroyBinaryExpr(3, this_54)
			elseif Expr_typeId[this_54] == 0 then
				call error("Double free: object of type Expr")
			else
				set Expr_nextFree[Expr_firstFree] = this_54
				set Expr_firstFree = Expr_firstFree + 1
				set Expr_typeId[this_54] = 0
			endif
		else
			call cyc_destroyBinaryExpr(2, this_54)
		endif
	endif
endfunction

function new_LiteralExpr takes string value_2 returns integer
	local integer this_54
	if Expr_firstFree == 0 then
		if Expr_maxIndex < 32768 then
			set Expr_maxIndex = Expr_maxIndex + 1
			set this_54 = Expr_maxIndex
			set Expr_typeId[this_54] = 781
		else
			call error("Out of memory: Could not create LiteralExpr.")
			set this_54 = 0
		endif
	else
		set Expr_firstFree = Expr_firstFree - 1
		set this_54 = Expr_nextFree[Expr_firstFree]
		set Expr_typeId[this_54] = 781
	endif
	set LiteralExpr_strValue[this_54] = value_2
	set LiteralExpr_value[this_54] = S2R(value_2)
	return this_54
endfunction

function skipWhitespace takes string input, integer start returns integer
	local integer length_3 = StringLength(input)
	loop
		exitwhen start >= length_3 or SubString(input, start, start + 1) != " "
		set start = start + 1
	endloop
	return start
endfunction

function parseWord takes string input, integer start returns string
	local integer pos = start
	local integer wordEnd = start
	local integer length_3 = StringLength(input)
	local string char_2
	loop
		exitwhen pos >= length_3
		set char_2 = SubString(input, pos, pos + 1)
		if char_2 == " " or char_2 == ")" or char_2 == "(" then
			set pos = skipWhitespace(input, pos)
			exitwhen true
		endif
		set wordEnd = wordEnd + 1
		set pos = pos + 1
	endloop
	set parseWord_return_s = SubString(input, start, wordEnd)
	set parseWord_return_last = pos
	return parseWord_return_s
endfunction

function parseSubExpr takes string input, integer start returns integer
	local integer pos = skipWhitespace(input, start)
	local string operator
	local integer exprlist
	local string expr_error
	local integer iterator
	local string retexpr_error
	local integer iterator_2
	local integer literal
	local integer entry
	local integer tuple_temp
	local integer tuple_temp_2
	local string tuple_temp_3
	local integer tuple_temp_4
	local string tuple_temp_5
	local string tuple_temp_6
	local integer tuple_temp_7
	set start = StringLength(input)
	if SubString(input, pos, pos + 1) == "(" then
		set pos = pos + 1
		set pos = skipWhitespace(input, pos)
		set operator = parseWord(input, pos)
		set pos = parseWord_return_last
		set exprlist = new_LinkedList()
		loop
			exitwhen pos >= start
			set pos = skipWhitespace(input, pos)
			exitwhen SubString(input, pos, pos + 1) == ")"
			set tuple_temp = parseSubExpr(input, pos)
			set tuple_temp_2 = parseSubExpr_return_last
			set tuple_temp_3 = parseSubExpr_return_error
			set expr_error = tuple_temp_3
			if tuple_temp_3 != null then
				set iterator = new_LLIterator_2(exprlist)
				loop
					exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
					set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
					call cyc_destroyBinaryExpr(4, LLEntry_elem[LLIterator_current[iterator]])
				endloop
				if LLIterator_destroyOnClose[iterator] then
					if LLIterator_typeId[iterator] == 0 then
						call error("Double free: object of type LLIterator")
					else
						set LLIterator_nextFree[LLIterator_firstFree] = iterator
						set LLIterator_firstFree = LLIterator_firstFree + 1
						set LLIterator_typeId[iterator] = 0
					endif
				endif
				call LinkedList_onDestroy(exprlist)
				if LinkedList_typeId[exprlist] == 0 then
					call error("Double free: object of type LinkedList")
				else
					set LinkedList_nextFree[LinkedList_firstFree] = exprlist
					set LinkedList_firstFree = LinkedList_firstFree + 1
					set LinkedList_typeId[exprlist] = 0
				endif
				set parseSubExpr_return_expr = 0
				set parseSubExpr_return_last = 0
				set parseSubExpr_return_error = expr_error
				return parseSubExpr_return_expr
			endif
			set entry = new_LLEntry(tuple_temp, LLEntry_prev[LinkedList_dummy[exprlist]], LinkedList_dummy[exprlist])
			set LLEntry_next[LLEntry_prev[LinkedList_dummy[exprlist]]] = entry
			set LLEntry_prev[LinkedList_dummy[exprlist]] = entry
			set LinkedList_size[exprlist] = LinkedList_size[exprlist] + 1
			set pos = tuple_temp_2
		endloop
		set tuple_temp_4 = createExpr(operator, exprlist)
		set tuple_temp_5 = createExpr_return_error
		set retexpr_error = tuple_temp_5
		if tuple_temp_5 == null then
			set parseSubExpr_return_expr = tuple_temp_4
			set parseSubExpr_return_last = pos + 1
			set parseSubExpr_return_error = null
			return parseSubExpr_return_expr
		else
			set iterator_2 = new_LLIterator_2(exprlist)
			loop
				exitwhen LLEntry_next[LLIterator_current[iterator_2]] == LLIterator_dummy[iterator_2]
				set LLIterator_current[iterator_2] = LLEntry_next[LLIterator_current[iterator_2]]
				call cyc_destroyBinaryExpr(4, LLEntry_elem[LLIterator_current[iterator_2]])
			endloop
			if LLIterator_destroyOnClose[iterator_2] then
				if LLIterator_typeId[iterator_2] == 0 then
					call error("Double free: object of type LLIterator")
				else
					set LLIterator_nextFree[LLIterator_firstFree] = iterator_2
					set LLIterator_firstFree = LLIterator_firstFree + 1
					set LLIterator_typeId[iterator_2] = 0
				endif
			endif
			call LinkedList_onDestroy(exprlist)
			if LinkedList_typeId[exprlist] == 0 then
				call error("Double free: object of type LinkedList")
			else
				set LinkedList_nextFree[LinkedList_firstFree] = exprlist
				set LinkedList_firstFree = LinkedList_firstFree + 1
				set LinkedList_typeId[exprlist] = 0
			endif
			set parseSubExpr_return_expr = 0
			set parseSubExpr_return_last = 0
			set parseSubExpr_return_error = retexpr_error
			return parseSubExpr_return_expr
		endif
	else
		set tuple_temp_6 = parseWord(input, pos)
		set tuple_temp_7 = parseWord_return_last
		set literal = new_LiteralExpr(tuple_temp_6)
		set parseSubExpr_return_expr = literal
		set parseSubExpr_return_last = tuple_temp_7
		set parseSubExpr_return_error = null
		return parseSubExpr_return_expr
	endif
endfunction

function Niya_parse takes string input returns integer
	local string inputGroomed = input
	local integer tuple_temp
	local string tuple_temp_2
	if SubString(input, 0, 1) == "!" then
		set inputGroomed = "(" + SubString(input, 1, StringLength(input)) + ")"
	endif
	set tuple_temp = parseSubExpr(inputGroomed, 0)
	set tuple_temp_2 = parseSubExpr_return_error
	set Niya_parse_return_expr = tuple_temp
	set Niya_parse_return_error = tuple_temp_2
	return Niya_parse_return_expr
endfunction

function new_Argument takes string value_2 returns integer
	local integer this_54
	if Argument_firstFree == 0 then
		if Argument_maxIndex < 32768 then
			set Argument_maxIndex = Argument_maxIndex + 1
			set this_54 = Argument_maxIndex
			set Argument_typeId[this_54] = 628
		else
			call error("Out of memory: Could not create Argument.")
			set this_54 = 0
		endif
	else
		set Argument_firstFree = Argument_firstFree - 1
		set this_54 = Argument_nextFree[Argument_firstFree]
		set Argument_typeId[this_54] = 628
	endif
	set Argument_isExpr[this_54] = false
	set Argument_value[this_54] = null
	set Argument_expr[this_54] = 0
	set Argument_isExpr[this_54] = false
	set Argument_value[this_54] = value_2
	return this_54
endfunction

function new_Argument_2 takes integer expr returns integer
	local integer this_54
	if Argument_firstFree == 0 then
		if Argument_maxIndex < 32768 then
			set Argument_maxIndex = Argument_maxIndex + 1
			set this_54 = Argument_maxIndex
			set Argument_typeId[this_54] = 628
		else
			call error("Out of memory: Could not create Argument.")
			set this_54 = 0
		endif
	else
		set Argument_firstFree = Argument_firstFree - 1
		set this_54 = Argument_nextFree[Argument_firstFree]
		set Argument_typeId[this_54] = 628
	endif
	set Argument_isExpr[this_54] = false
	set Argument_value[this_54] = null
	set Argument_expr[this_54] = 0
	set Argument_isExpr[this_54] = true
	set Argument_expr[this_54] = expr
	return this_54
endfunction

function Arguments_parseArgument takes integer this_54 returns integer
	local integer argument = 0
	local string Parsers_ArgumentParser_nextToken_result = ArgumentParser_nextToken(Arguments_parser[this_54])
	local integer tuple_temp
	local string tuple_temp_2
	if SubString(Parsers_ArgumentParser_nextToken_result, 0, 1) == "!" then
		set tuple_temp = Niya_parse(Parsers_ArgumentParser_nextToken_result)
		set tuple_temp_2 = Niya_parse_return_error
		if tuple_temp_2 == null then
			set argument = new_Argument_2(tuple_temp)
		else
			call error(tuple_temp_2)
		endif
	else
		set argument = new_Argument(Parsers_ArgumentParser_nextToken_result)
	endif
	call dispatch_HashMap_HashMap_HashMap_put(Arguments_args[this_54], Arguments_argCount[this_54], argument)
	set Arguments_argCount[this_54] = Arguments_argCount[this_54] + 1
	return argument
endfunction

function Arguments_get takes integer this_54, integer index returns integer
	loop
		exitwhen Arguments_argCount[this_54] > index
		call Arguments_parseArgument(this_54)
	endloop
	return LoadInteger(Table_ht, Arguments_args[this_54], index)
endfunction

function destroyArgument takes integer this_54 returns nothing
	if Argument_expr[this_54] != 0 then
		call cyc_destroyBinaryExpr(4, Argument_expr[this_54])
	endif
	if Argument_typeId[this_54] == 0 then
		call error("Double free: object of type Argument")
	else
		set Argument_nextFree[Argument_firstFree] = this_54
		set Argument_firstFree = Argument_firstFree + 1
		set Argument_typeId[this_54] = 0
	endif
endfunction

function Arguments_onDestroy takes integer this_54 returns nothing
	local integer this_55 = Arguments_parser[this_54]
	local integer i_3
	local integer temp
	if BaseParser_typeId[this_55] == 0 then
		call error("Double free: object of type ArgumentParser")
	else
		set BaseParser_nextFree[BaseParser_firstFree] = this_55
		set BaseParser_firstFree = BaseParser_firstFree + 1
		set BaseParser_typeId[this_55] = 0
	endif
	set i_3 = 0
	set temp = Arguments_argCount[this_54] - 1
	loop
		exitwhen i_3 > temp
		call destroyArgument(LoadInteger(Table_ht, Arguments_args[this_54], i_3))
		set i_3 = i_3 + 1
	endloop
	call dispatch_HashMap_destroyHashMap(Arguments_args[this_54])
endfunction

function CommandContext_onDestroy takes integer this_54 returns nothing
	local integer this_55 = CommandContext_selection[this_54]
	local integer iterator
	local integer parser
	local integer this_56
	call LinkedList_onDestroy(this_55)
	if LinkedList_typeId[this_55] == 0 then
		call error("Double free: object of type LinkedList")
	else
		set LinkedList_nextFree[LinkedList_firstFree] = this_55
		set LinkedList_firstFree = LinkedList_firstFree + 1
		set LinkedList_typeId[this_55] = 0
	endif
	set iterator = new_LLIterator_2(CommandContext_commandStack[this_54])
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
		set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
		set parser = LLEntry_elem[LLIterator_current[iterator]]
		if BaseParser_typeId[parser] == 0 then
			call error("Double free: object of type CommandParser")
		else
			set BaseParser_nextFree[BaseParser_firstFree] = parser
			set BaseParser_firstFree = BaseParser_firstFree + 1
			set BaseParser_typeId[parser] = 0
		endif
	endloop
	if LLIterator_destroyOnClose[iterator] then
		if LLIterator_typeId[iterator] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator] = 0
		endif
	endif
	set this_56 = CommandContext_commandStack[this_54]
	call LinkedList_onDestroy(this_56)
	if LinkedList_typeId[this_56] == 0 then
		call error("Double free: object of type LinkedList")
	else
		set LinkedList_nextFree[LinkedList_firstFree] = this_56
		set LinkedList_firstFree = LinkedList_firstFree + 1
		set LinkedList_typeId[this_56] = 0
	endif
endfunction

function CommandExecutor_notifyFinished takes integer this_54, integer context_3 returns nothing
	call LinkedList_remove(CommandExecutor_contextList[this_54], context_3)
	call CommandContext_onDestroy(context_3)
	if CommandContext_typeId[context_3] == 0 then
		call error("Double free: object of type CommandContext")
	else
		set CommandContext_nextFree[CommandContext_firstFree] = context_3
		set CommandContext_firstFree = CommandContext_firstFree + 1
		set CommandContext_typeId[context_3] = 0
	endif
endfunction

function CommandParser_nextToken takes integer this_54 returns string
	local integer pos = BaseParser_pos[this_54]
	local integer start = pos
	local integer depth_2 = 0
	local string input = BaseParser_input[this_54]
	local integer length_3 = StringLength(input)
	local string char_2
	loop
		exitwhen pos >= length_3
		set char_2 = SubString(input, pos, pos + 1)
		if char_2 == "\\" then
			set pos = pos + 1
		elseif char_2 == "]" and depth_2 > 0 then
			set depth_2 = depth_2 - 1
		elseif char_2 == "[" then
			set depth_2 = depth_2 + 1
		else
			exitwhen char_2 == "|" and depth_2 == 0
		endif
		set pos = pos + 1
	endloop
	set BaseParser_pos[this_54] = pos + 1
	return SubString(input, start, pos)
endfunction

function CommandRegistry_get takes string command returns integer
	return LoadInteger(Table_ht, CommandRegistry_registry, StringHash(command))
endfunction

function CommandContext_continue takes integer this_54 returns nothing
	local integer this_55
	local string msg
	local string msg_2
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_55 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_55] = 791
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_55 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_55] = 791
	endif
	set this_4[this_55] = this_54
	if  not try(this_55) then
		set msg = "Command [ID " + I2S(this_54) + "] by player " + player_getNameColored(CommandExecutor_owner[CommandContext_executor[this_54]]) + " has crashed."
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., Loglevel_getTag(3) + " - " + msg)
		set msg_2 = "Error: " + ErrorHandling_lastError
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., Loglevel_getTag(3) + " - " + msg_2)
	endif
endfunction

function TestCommands_closure_impl takes integer this_54, integer context_3, integer arguments_2 returns nothing
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "arg1:" + Argument_asString(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]))
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "arg2:" + Argument_asString(Arguments_get(arguments_2, 2), Arguments_context[arguments_2]))
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "arg3:" + Argument_asString(Arguments_get(arguments_2, 3), Arguments_context[arguments_2]))
endfunction

function TestCommands_closure_impl_2 takes integer this_54, integer context_3, integer arguments_2 returns nothing
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_54 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_54] = 806
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_54 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_54] = 806
	endif
	set arguments[this_54] = arguments_2
	set context[this_54] = context_3
	if  not try(this_54) then
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "We fucked up")
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., ErrorHandling_lastError)
	endif
endfunction

function LineSplitterParser_nextToken takes integer this_54 returns string
	local integer pos = BaseParser_pos[this_54]
	local integer start = pos
	local integer lastWordEnd = pos
	local integer width = 0
	local string input = BaseParser_input[this_54]
	local integer maxWidth = LineSplitterParser_maxWidth[this_54]
	local integer length_3 = StringLength(input)
	local string curSymbol
	loop
		exitwhen pos >= length_3
		set curSymbol = SubString(input, pos, pos + 1)
		set width = width + char_getWidth(char(curSymbol))
		if curSymbol == " " then
			set lastWordEnd = pos
		endif
		if width > maxWidth and lastWordEnd != start then
			set BaseParser_pos[this_54] = lastWordEnd + 1
			return SubString(input, start, lastWordEnd)
		endif
		set pos = pos + 1
	endloop
	set BaseParser_pos[this_54] = pos
	return SubString(input, start, pos)
endfunction

function WhitespaceParser_nextToken takes integer this_54 returns string
	local integer pos = BaseParser_pos[this_54]
	local string input = BaseParser_input[this_54]
	local integer start = pos
	local integer length_3 = StringLength(input)
	loop
		exitwhen pos >= length_3 or SubString(input, pos, pos + 1) == " "
		set pos = pos + 1
	endloop
	set BaseParser_pos[this_54] = pos + 1
	return SubString(input, start, pos)
endfunction

function dispatch_BaseParser_Parsers_BaseParser_nextToken takes integer this_54 returns string
	local string Parsers_BaseParser_nextToken_result
	if BaseParser_typeId[this_54] <= 640 then
		if BaseParser_typeId[this_54] <= 639 then
			set Parsers_BaseParser_nextToken_result = ArgumentParser_nextToken(this_54)
		else
			set Parsers_BaseParser_nextToken_result = CommandParser_nextToken(this_54)
		endif
	elseif BaseParser_typeId[this_54] <= 641 then
		set Parsers_BaseParser_nextToken_result = LineSplitterParser_nextToken(this_54)
	else
		set Parsers_BaseParser_nextToken_result = WhitespaceParser_nextToken(this_54)
	endif
	return Parsers_BaseParser_nextToken_result
endfunction

function BaseParser_restParsed takes integer this_54 returns string
	local string result_2 = ""
	loop
		exitwhen BaseParser_pos[this_54] >= StringLength(BaseParser_input[this_54])
		set result_2 = result_2 + dispatch_BaseParser_Parsers_BaseParser_nextToken(this_54)
		if BaseParser_pos[this_54] < StringLength(BaseParser_input[this_54]) then
			set result_2 = result_2 + " "
		endif
	endloop
	return result_2
endfunction

function Arguments_getRest takes integer this_54, boolean parsed returns string
	local string Parsers_BaseParser_restParsed_result
	local integer this_55
	local string Parsers_BaseParser_restSimple_result
	local integer temp
	if Arguments_rest[this_54] == null then
		if parsed then
			set Parsers_BaseParser_restParsed_result = BaseParser_restParsed(Arguments_parser[this_54])
			set Arguments_rest[this_54] = Parsers_BaseParser_restParsed_result
		else
			set this_55 = Arguments_parser[this_54]
			set temp = BaseParser_pos[this_55]
			set BaseParser_pos[this_55] = StringLength(BaseParser_input[this_55])
			set Parsers_BaseParser_restSimple_result = SubString(BaseParser_input[this_55], temp, BaseParser_pos[this_55])
			set Arguments_rest[this_54] = Parsers_BaseParser_restSimple_result
		endif
	endif
	return Arguments_rest[this_54]
endfunction

function TestCommands_closure_impl_3 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	call BlzSetSpecialEffectHeight(AddSpecialEffect("units\\human\\Peasant\\Peasant.mdl", GetUnitX(what_u), GetUnitY(what_u)), -50.)
endfunction

function Argument_asReal takes integer this_54, integer context_3 returns real
	local real r
	if Argument_isExpr[this_54] then
		call cyc_Scripting_closure_impl(2, Argument_expr[this_54], CommandContext_scriptContext[context_3], 0, 0)
		set r = tempReturn_real
	else
		set r = S2R(Argument_value[this_54])
	endif
	return r
endfunction

function UnitPropertyCommands_closure_impl takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	local real temp = GetUnitX(what_u)
	local real tuple_temp = GetUnitY(what_u)
	call SetUnitPosition(what_u, temp + Argument_asReal(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]), tuple_temp + Argument_asReal(Arguments_get(arguments_2, 2), Arguments_context[arguments_2]))
endfunction

function Argument_asInt takes integer this_54, integer context_3 returns integer
	local integer n
	if Argument_isExpr[this_54] then
		call cyc_Scripting_closure_impl(2, Argument_expr[this_54], CommandContext_scriptContext[context_3], 0, 0)
		set n = R2I(tempReturn_real)
	else
		set n = S2I(Argument_value[this_54])
	endif
	return n
endfunction

function UnitPropertyCommands_closure_impl_2 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	call yunit_setDamage(what_u, BlzGetUnitBaseDamage(what_u, 1) + Argument_asInt(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]))
endfunction

function UnitPropertyCommands_closure_impl_3 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	call yunit_setHeight(what_u, YUnitData_flyHeight[GetUnitUserData(what_u)] + Argument_asReal(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]))
endfunction

function UnitPropertyCommands_closure_impl_4 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	set this_54 = R2I(GetUnitState(what_u, UNIT_STATE_MAX_MANA)) + Argument_asInt(Arguments_get(arguments_2, 1), Arguments_context[arguments_2])
	set YUnitData_hasCustomMaxMana[GetUnitUserData(what_u)] = true
	call BlzSetUnitMaxMana(what_u, this_54)
endfunction

function getColorFromString takes string name returns playercolor
	local integer hash = StringHash(name)
	if HaveSavedInteger(Table_ht, ColorUtil_colors, hash) then
		return Playercolor_LOOKUP[LoadInteger(Table_ht, ColorUtil_colors, hash)]
	else
		return Playercolor_LOOKUP[24]
	endif
endfunction

function UnitPropertyCommands_closure_impl_5 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	local string Command_Argument_asString_result = Argument_asString(Arguments_get(arguments_2, 1), Arguments_context[arguments_2])
	local playercolor pc
	if S2I(Command_Argument_asString_result) != 0 then
		set pc = Playercolor_LOOKUP[S2I(Command_Argument_asString_result) - 1]
	else
		set pc = getColorFromString(Command_Argument_asString_result)
	endif
	set YUnitData_pc[GetUnitUserData(what_u)] = pc
	call SetUnitColor(what_u, pc)
	set pc = null
endfunction

function UnitPropertyCommands_closure_impl_6 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	call yunit_setHeight(what_u, Argument_asReal(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]))
endfunction

function yunit_setRoll takes unit this_u, real roll_radians returns nothing
	call yunit_initProxy(this_u)
	set DynamicEffectProxy_roll_radians[YUnitData_effectProxy[GetUnitUserData(this_u)]] = roll_radians
endfunction

function UnitPropertyCommands_closure_impl_7 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	call yunit_setRoll(what_u, Argument_asReal(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]) * 0.017453293)
endfunction

function UnitPropertyCommands_closure_impl_8 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	call yunit_setAttackCooldown(what_u, BlzGetUnitAttackCooldown(what_u, 1) + Argument_asReal(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]))
endfunction

function new_UnitSpeech takes string text returns integer
	local integer this_54
	if UnitSpeech_firstFree == 0 then
		if UnitSpeech_maxIndex < 32768 then
			set UnitSpeech_maxIndex = UnitSpeech_maxIndex + 1
			set this_54 = UnitSpeech_maxIndex
			set UnitSpeech_typeId[this_54] = 998
		else
			call error("Out of memory: Could not create UnitSpeech.")
			set this_54 = 0
		endif
	else
		set UnitSpeech_firstFree = UnitSpeech_firstFree - 1
		set this_54 = UnitSpeech_nextFree[UnitSpeech_firstFree]
		set UnitSpeech_typeId[this_54] = 998
	endif
	set UnitSpeech_timestamp[this_54] = TimerGetElapsed(GameTimer_gameTimer)
	set UnitSpeech_text[this_54] = text
	return this_54
endfunction

function UnitInfo_addSay takes integer this_54, string text returns nothing
	local integer entry
	set this_54 = UnitInfo_speech[this_54]
	set entry = new_LLEntry(new_UnitSpeech(text), LLEntry_prev[LinkedList_dummy[this_54]], LinkedList_dummy[this_54])
	set LLEntry_next[LLEntry_prev[LinkedList_dummy[this_54]]] = entry
	set LLEntry_prev[LinkedList_dummy[this_54]] = entry
	set LinkedList_size[this_54] = LinkedList_size[this_54] + 1
endfunction

function UnitPropertyCommands_closure_impl_9 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	call UnitInfo_addSay(UnitTag_info[YUnitData_tag[GetUnitUserData(what_u)]], Arguments_getRest(arguments_2, false))
endfunction

function UnitPropertyCommands_closure_impl_10 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	set this_54 = R2I(GetUnitState(what_u, UNIT_STATE_MAX_LIFE)) + Argument_asInt(Arguments_get(arguments_2, 1), Arguments_context[arguments_2])
	set YUnitData_hasCustomMaxLife[GetUnitUserData(what_u)] = true
	call BlzSetUnitMaxHP(what_u, this_54)
endfunction

function UnitPropertyCommands_closure_impl_11 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	local string Command_Arguments_getRest_result = Arguments_getRest(arguments_2, true)
	set YUnitData_hasCustomHeroName[GetUnitUserData(what_u)] = true
	call BlzSetHeroProperName(what_u, Command_Arguments_getRest_result)
endfunction

function UnitPropertyCommands_closure_impl_12 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	local playercolor pc = getColorFromString(Arguments_getRest(arguments_2, true))
	set YUnitData_pc[GetUnitUserData(what_u)] = pc
	call SetUnitColor(what_u, pc)
	set pc = null
endfunction

function yunit_getFacing takes unit this_u returns real
	local real this_54
	local integer index
	if TimerGetElapsed(GameTimer_gameTimer) - YUnitData_lastFacingSet[GetUnitUserData(this_u)] > 0.2 then
		set this_54 = GetUnitFacing(this_u)
		set yunit_getFacing_return_radians = this_54 * 0.017453293
		return yunit_getFacing_return_radians
	else
		set index = GetUnitUserData(this_u)
		set yunit_getFacing_return_radians = YUnitData_lastFacing_radians[index]
		return yunit_getFacing_return_radians
	endif
endfunction

function yunit_setFacing takes unit this_u, real facing_radians returns nothing
	set YUnitData_lastFacing_radians[GetUnitUserData(this_u)] = facing_radians
	set YUnitData_lastFacingSet[GetUnitUserData(this_u)] = TimerGetElapsed(GameTimer_gameTimer)
	call SetUnitFacing(this_u, facing_radians * 57.295779513)
endfunction

function UnitPropertyCommands_closure_impl_13 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	call yunit_setFacing(what_u, yunit_getFacing(what_u) + Argument_asReal(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]) * 0.017453293)
endfunction

function UnitPropertyCommands_closure_impl_14 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	set this_54 = Argument_asInt(Arguments_get(arguments_2, 1), Arguments_context[arguments_2])
	set YUnitData_hasCustomMaxMana[GetUnitUserData(what_u)] = true
	call BlzSetUnitMaxMana(what_u, this_54)
endfunction

function UnitPropertyCommands_closure_impl_15 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	call yunit_setFacing(what_u, Argument_asReal(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]) * 0.017453293)
endfunction

function UnitPropertyCommands_closure_impl_16 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	local real Command_Argument_asReal_result = Argument_asReal(Arguments_get(arguments_2, 1), Arguments_context[arguments_2])
	set YUnitData_scale[GetUnitUserData(what_u)] = Command_Argument_asReal_result
	call SetUnitScale(what_u, Command_Argument_asReal_result, Command_Argument_asReal_result, Command_Argument_asReal_result)
endfunction

function UnitPropertyCommands_closure_impl_17 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	local real scale = YUnitData_scale[GetUnitUserData(what_u)] + Argument_asReal(Arguments_get(arguments_2, 1), Arguments_context[arguments_2])
	set YUnitData_scale[GetUnitUserData(what_u)] = scale
	call SetUnitScale(what_u, scale, scale, scale)
endfunction

function UnitPropertyCommands_closure_impl_18 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	call SetUnitPosition(what_u, GetUnitX(what_u) + 0., GetUnitY(what_u) + Argument_asReal(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]))
endfunction

function UnitPropertyCommands_closure_impl_19 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	set this_54 = Argument_asInt(Arguments_get(arguments_2, 1), Arguments_context[arguments_2])
	set YUnitData_hasCustomMaxLife[GetUnitUserData(what_u)] = true
	call BlzSetUnitMaxHP(what_u, this_54)
endfunction

function UnitPropertyCommands_closure_impl_20 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	local real temp = GetUnitX(what_u)
	local real tuple_temp = GetUnitY(what_u) + 0.
	call SetUnitPosition(what_u, temp + Argument_asReal(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]), tuple_temp)
endfunction

function UnitPropertyCommands_closure_impl_21 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	call yunit_setAttackCooldown(what_u, Argument_asReal(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]))
endfunction

function UnitPropertyCommands_closure_impl_22 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	call yunit_setDamage(what_u, Argument_asInt(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]))
endfunction

function yunit_setPitch takes unit this_u, real pitch_radians returns nothing
	call yunit_initProxy(this_u)
	set DynamicEffectProxy_pitch_radians[YUnitData_effectProxy[GetUnitUserData(this_u)]] = pitch_radians
endfunction

function UnitPropertyCommands_closure_impl_23 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	call yunit_setPitch(what_u, Argument_asReal(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]) * 0.017453293)
endfunction

function UnitPropertyCommands_closure_impl_24 takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	call yunit_setTint(what_u, R2I(Argument_asReal(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]) / 100. * 255.), R2I(Argument_asReal(Arguments_get(arguments_2, 2), Arguments_context[arguments_2]) / 100. * 255.), R2I(Argument_asReal(Arguments_get(arguments_2, 3), Arguments_context[arguments_2]) / 100. * 255.), R2I(Argument_asReal(Arguments_get(arguments_2, 4), Arguments_context[arguments_2]) / 100. * 255.))
endfunction

function dispatch_UnitCommand_CommandWrappers_UnitCommand_callback takes integer this_54, integer context_3, integer arguments_2, unit what_u returns nothing
	local string Command_Arguments_getRest_result
	if Command_typeId[this_54] <= 716 then
		if Command_typeId[this_54] <= 709 then
			if Command_typeId[this_54] <= 705 then
				if Command_typeId[this_54] <= 703 then
					if Command_typeId[this_54] <= 702 then
						call TestCommands_closure_impl_3(this_54, context_3, arguments_2, what_u)
					else
						call RemoveUnit(what_u)
					endif
				elseif Command_typeId[this_54] <= 704 then
					call KillUnit(what_u)
				else
					call SetUnitExploded(what_u, true)
					call KillUnit(what_u)
				endif
			elseif Command_typeId[this_54] <= 707 then
				if Command_typeId[this_54] <= 706 then
					call UnitPropertyCommands_closure_impl_16(this_54, context_3, arguments_2, what_u)
				else
					call UnitPropertyCommands_closure_impl_17(this_54, context_3, arguments_2, what_u)
				endif
			elseif Command_typeId[this_54] <= 708 then
				call UnitPropertyCommands_closure_impl_15(this_54, context_3, arguments_2, what_u)
			else
				call UnitPropertyCommands_closure_impl_13(this_54, context_3, arguments_2, what_u)
			endif
		elseif Command_typeId[this_54] <= 713 then
			if Command_typeId[this_54] <= 711 then
				if Command_typeId[this_54] <= 710 then
					call UnitPropertyCommands_closure_impl_6(this_54, context_3, arguments_2, what_u)
				else
					call UnitPropertyCommands_closure_impl_3(this_54, context_3, arguments_2, what_u)
				endif
			elseif Command_typeId[this_54] <= 712 then
				set Command_Arguments_getRest_result = Arguments_getRest(arguments_2, true)
				if Command_Arguments_getRest_result != null and Command_Arguments_getRest_result != "" then
					call yunit_setName(what_u, Command_Arguments_getRest_result)
				endif
			else
				call UnitPropertyCommands_closure_impl_11(this_54, context_3, arguments_2, what_u)
			endif
		elseif Command_typeId[this_54] <= 715 then
			if Command_typeId[this_54] <= 714 then
				call UnitPropertyCommands_closure_impl_24(this_54, context_3, arguments_2, what_u)
			else
				call UnitPropertyCommands_closure_impl_12(this_54, context_3, arguments_2, what_u)
			endif
		else
			call UnitPropertyCommands_closure_impl_9(this_54, context_3, arguments_2, what_u)
		endif
	elseif Command_typeId[this_54] <= 723 then
		if Command_typeId[this_54] <= 720 then
			if Command_typeId[this_54] <= 718 then
				if Command_typeId[this_54] <= 717 then
					call UnitPropertyCommands_closure_impl_5(this_54, context_3, arguments_2, what_u)
				else
					call UnitPropertyCommands_closure_impl_19(this_54, context_3, arguments_2, what_u)
				endif
			elseif Command_typeId[this_54] <= 719 then
				call UnitPropertyCommands_closure_impl_14(this_54, context_3, arguments_2, what_u)
			else
				call UnitPropertyCommands_closure_impl_22(this_54, context_3, arguments_2, what_u)
			endif
		elseif Command_typeId[this_54] <= 722 then
			if Command_typeId[this_54] <= 721 then
				call UnitPropertyCommands_closure_impl_21(this_54, context_3, arguments_2, what_u)
			else
				call UnitPropertyCommands_closure_impl_10(this_54, context_3, arguments_2, what_u)
			endif
		else
			call UnitPropertyCommands_closure_impl_4(this_54, context_3, arguments_2, what_u)
		endif
	elseif Command_typeId[this_54] <= 727 then
		if Command_typeId[this_54] <= 725 then
			if Command_typeId[this_54] <= 724 then
				call UnitPropertyCommands_closure_impl_2(this_54, context_3, arguments_2, what_u)
			else
				call UnitPropertyCommands_closure_impl_8(this_54, context_3, arguments_2, what_u)
			endif
		elseif Command_typeId[this_54] <= 726 then
			call UnitPropertyCommands_closure_impl_20(this_54, context_3, arguments_2, what_u)
		else
			call UnitPropertyCommands_closure_impl_18(this_54, context_3, arguments_2, what_u)
		endif
	elseif Command_typeId[this_54] <= 729 then
		if Command_typeId[this_54] <= 728 then
			call UnitPropertyCommands_closure_impl(this_54, context_3, arguments_2, what_u)
		else
			call UnitPropertyCommands_closure_impl_23(this_54, context_3, arguments_2, what_u)
		endif
	else
		call UnitPropertyCommands_closure_impl_7(this_54, context_3, arguments_2, what_u)
	endif
endfunction

function UnitCommand_run takes integer this_54, integer context_3, integer arguments_2 returns nothing
	local player who_2 = CommandExecutor_owner[CommandContext_executor[context_3]]
	local integer iterator = new_LLIterator_2(CommandContext_selection[context_3])
	local unit what_2
	local integer id
	local boolean andLeft
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
		set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
		set what_2 = unitFromIndex(LLEntry_elem[LLIterator_current[iterator]])
		set id = GetUnitTypeId(what_2)
		if id != 2016489591 and id != 2016489592 and ( not unit_isShop(what_2)) then
			set andLeft = who_2 == GetOwningPlayer(what_2)
		else
			set andLeft = false
		endif
		if andLeft then
			call dispatch_UnitCommand_CommandWrappers_UnitCommand_callback(this_54, context_3, arguments_2, what_2)
		endif
	endloop
	if LLIterator_destroyOnClose[iterator] then
		if LLIterator_typeId[iterator] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator] = 0
		endif
	endif
	call CommandContext_continue(context_3)
	set who_2 = null
	set what_2 = null
endfunction

function MiscCommands_closure_impl takes integer this_54, integer context_3, integer arguments_2 returns nothing
	local string Command_Argument_asString_result = Argument_asString(Arguments_get(arguments_2, 1), Arguments_context[arguments_2])
	local integer settings_2 = FormationMovement_playerFormationModes[GetPlayerId(CommandExecutor_owner[CommandContext_executor[context_3]])]
	local real Command_Argument_asReal_result
	local real Command_Argument_asReal_result_2
	if Command_Argument_asString_result == "mode" then
		call Argument_asString(Arguments_get(arguments_2, 2), Arguments_context[arguments_2])
	elseif Command_Argument_asString_result == "width" then
		set this_54 = Argument_asInt(Arguments_get(arguments_2, 2), Arguments_context[arguments_2])
		set FormationSettings_rectWidth[settings_2] = this_54
	elseif Command_Argument_asString_result == "x" then
		set Command_Argument_asReal_result = Argument_asReal(Arguments_get(arguments_2, 2), Arguments_context[arguments_2])
		set FormationSettings_rectHorizSpacing[settings_2] = Command_Argument_asReal_result
	elseif Command_Argument_asString_result == "y" then
		set Command_Argument_asReal_result_2 = Argument_asReal(Arguments_get(arguments_2, 2), Arguments_context[arguments_2])
		set FormationSettings_rectVertSpacing[settings_2] = Command_Argument_asReal_result_2
	endif
endfunction

function PlayerSettings_enablePreferredColor takes integer this_54, playercolor pc returns nothing
	local integer value_2 = 0
	local integer i_3 = 0
	local integer temp = bj_MAX_PLAYER_SLOTS - 1
	loop
		exitwhen i_3 > temp
		if Playercolor_LOOKUP[i_3] == pc then
			set value_2 = i_3
			exitwhen true
		endif
		set i_3 = i_3 + 1
	endloop
	set PlayerSettings_preferredPlayerColor[this_54] = value_2
	call PlayerSettings_applySettings(this_54)
	call Persistable_save(this_54, 0)
endfunction

function PlayerSettingsCommands_closure_impl takes integer this_54, integer context_3, integer arguments_2 returns nothing
	local string Command_Argument_asString_result = Argument_asString(Arguments_get(arguments_2, 1), Arguments_context[arguments_2])
	local string Command_Argument_asString_result_2
	local string Command_Argument_asString_result_3
	local string Command_Argument_asString_result_4
	local integer Command_Argument_asInt_result
	local integer Command_Argument_asInt_result_2
	local integer Command_Argument_asInt_result_3
	set this_54 = PlayerSettings_lookup[GetPlayerId(CommandExecutor_owner[CommandContext_executor[context_3]])]
	if Command_Argument_asString_result == "name" then
		set Command_Argument_asString_result_2 = Argument_asString(Arguments_get(arguments_2, 2), Arguments_context[arguments_2])
		if Command_Argument_asString_result_2 == "false" or Command_Argument_asString_result_2 == "off" or Command_Argument_asString_result_2 == "0" then
			set PlayerSettings_preferredName[this_54] = ""
			call PlayerSettings_applySettings(this_54)
			call Persistable_save(this_54, 0)
		else
			set PlayerSettings_preferredName[this_54] = Command_Argument_asString_result_2
			call PlayerSettings_applySettings(this_54)
			call Persistable_save(this_54, 0)
		endif
	elseif Command_Argument_asString_result == "color" then
		set Command_Argument_asString_result_3 = Argument_asString(Arguments_get(arguments_2, 2), Arguments_context[arguments_2])
		if Command_Argument_asString_result_3 == "false" or Command_Argument_asString_result_3 == "off" or Command_Argument_asString_result_3 == "0" then
			set PlayerSettings_preferredPlayerColor[this_54] = 255
			call PlayerSettings_applySettings(this_54)
			call Persistable_save(this_54, 0)
		else
			call PlayerSettings_enablePreferredColor(this_54, getColorFromString(Command_Argument_asString_result_3))
		endif
	elseif Command_Argument_asString_result == "namecolor" then
		set Command_Argument_asString_result_4 = Argument_asString(Arguments_get(arguments_2, 2), Arguments_context[arguments_2])
		if Command_Argument_asString_result_4 == "false" or Command_Argument_asString_result_4 == "off" or Command_Argument_asString_result_4 == "0" then
			set PlayerSettings_preferredNameColorEnabled[this_54] = false
			call PlayerSettings_applySettings(this_54)
			call Persistable_save(this_54, 0)
		else
			set Command_Argument_asInt_result = Argument_asInt(Arguments_get(arguments_2, 2), Arguments_context[arguments_2])
			set Command_Argument_asInt_result_2 = Argument_asInt(Arguments_get(arguments_2, 3), Arguments_context[arguments_2])
			set Command_Argument_asInt_result_3 = Argument_asInt(Arguments_get(arguments_2, 4), Arguments_context[arguments_2])
			set PlayerSettings_preferredNameColor_red[this_54] = Command_Argument_asInt_result
			set PlayerSettings_preferredNameColor_green[this_54] = Command_Argument_asInt_result_2
			set PlayerSettings_preferredNameColor_blue[this_54] = Command_Argument_asInt_result_3
			set PlayerSettings_preferredNameColorEnabled[this_54] = true
			call PlayerSettings_applySettings(this_54)
			call Persistable_save(this_54, 0)
		endif
	endif
endfunction

function AtmosphericData_scan takes integer this_54, integer specifier returns nothing
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	local real tuple_temp_4
	local real tuple_temp_5
	local integer tuple_temp_6
	local integer tuple_temp_7
	local integer tuple_temp_8
	set AtmosphericData_dnc[this_54] = RegionSpecifier_dnc[specifier]
	set tuple_temp = RegionSpecifier_fog_min[specifier]
	set tuple_temp_2 = RegionSpecifier_fog_max[specifier]
	set tuple_temp_3 = RegionSpecifier_fog_r[specifier]
	set tuple_temp_4 = RegionSpecifier_fog_g[specifier]
	set tuple_temp_5 = RegionSpecifier_fog_b[specifier]
	set AtmosphericData_fog_state[this_54] = RegionSpecifier_fog_state[specifier]
	set AtmosphericData_fog_min[this_54] = tuple_temp
	set AtmosphericData_fog_max[this_54] = tuple_temp_2
	set AtmosphericData_fog_r[this_54] = tuple_temp_3
	set AtmosphericData_fog_g[this_54] = tuple_temp_4
	set AtmosphericData_fog_b[this_54] = tuple_temp_5
	set tuple_temp_6 = RegionSpecifier_corrector_r[specifier]
	set tuple_temp_7 = RegionSpecifier_corrector_g[specifier]
	set tuple_temp_8 = RegionSpecifier_corrector_b[specifier]
	set AtmosphericData_corrector_state[this_54] = RegionSpecifier_corrector_state[specifier]
	set AtmosphericData_corrector_r[this_54] = tuple_temp_6
	set AtmosphericData_corrector_g[this_54] = tuple_temp_7
	set AtmosphericData_corrector_b[this_54] = tuple_temp_8
	set AtmosphericData_weatherId[this_54] = RegionSpecifier_weatherId[specifier]
endfunction

function HeightData_scan takes integer this_54, rect area_2 returns nothing
	local integer writer_2 = new_HashWriter()
	local integer iter_11 = new_RectTileIterator(area_2)
	local integer this_55
	local integer this_56
	local integer reader_2
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_55 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_55] = 872
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_55 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_55] = 872
	endif
	set iter[this_55] = iter_11
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_56 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_56] = 848
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_56 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_56] = 848
	endif
	set iter_2[this_56] = iter_11
	set this_12[this_56] = this_54
	set writer[this_56] = writer_2
	call executeWhile(1024, this_55, this_56)
	set reader_2 = new_HashReader(HashWriter_data[writer_2], HashWriter_integerWriteIndex[writer_2], HashWriter_realWriteIndex[writer_2], HashWriter_stringWriteIndex[writer_2], HashWriter_booleanWriteIndex[writer_2])
	set HashWriter_data[writer_2] = 0
	call destroyHashWriter(writer_2)
	set HeightData_reader[this_54] = reader_2
endfunction

function MultipleUnitData_scan takes integer this_54, rect area_2 returns nothing
	local integer this_55
	if ForGroupCallback_firstFree == 0 then
		if ForGroupCallback_maxIndex < 32768 then
			set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
			set this_55 = ForGroupCallback_maxIndex
			set ForGroupCallback_typeId[this_55] = 817
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
		set this_55 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
		set ForGroupCallback_typeId[this_55] = 817
	endif
	set area[this_55] = area_2
	set this_53[this_55] = this_54
	set ClosureForGroups_tempCallbacks[ClosureForGroups_tempCallbacksCount] = this_55
	set ClosureForGroups_tempCallbacksCount = ClosureForGroups_tempCallbacksCount + 1
	call GroupEnumUnitsInRect(ClosureForGroups_DUMMY_GROUP, area_2, ClosureForGroups_filter)
	call popCallback()
endfunction

function TileData_scan takes integer this_54, rect area_2 returns nothing
	local integer tileMapInverted_2 = new_HashMap()
	local integer iter_11 = new_RectTileIterator(area_2)
	local integer this_55
	local integer this_56
	local integer this_57
	local integer entry
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_55 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_55] = 890
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_55 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_55] = 890
	endif
	set iter_9[this_55] = iter_11
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_56 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_56] = 866
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_56 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_56] = 866
	endif
	set iter_10[this_56] = iter_11
	set tileMapInverted[this_56] = tileMapInverted_2
	set this_52[this_56] = this_54
	call executeWhile(1024, this_55, this_56)
	set this_57 = TileData_cellList[this_54]
	set entry = new_LLEntry(TileData_currentCell[this_54], LLEntry_prev[LinkedList_dummy[this_57]], LinkedList_dummy[this_57])
	set LLEntry_next[LLEntry_prev[LinkedList_dummy[this_57]]] = entry
	set LLEntry_prev[LinkedList_dummy[this_57]] = entry
	set LinkedList_size[this_57] = LinkedList_size[this_57] + 1
	if RectTileIterator_typeId[iter_11] == 0 then
		call error("Double free: object of type RectTileIterator")
	else
		set RectTileIterator_nextFree[RectTileIterator_firstFree] = iter_11
		set RectTileIterator_firstFree = RectTileIterator_firstFree + 1
		set RectTileIterator_typeId[iter_11] = 0
	endif
	call dispatch_HashMap_destroyHashMap(tileMapInverted_2)
endfunction

function rect_copy takes rect this_54 returns rect
	return Rect(GetRectMinX(this_54), GetRectMinY(this_54), GetRectMaxX(this_54), GetRectMaxY(this_54))
endfunction

function RegionSaveData_startSave takes integer this_54, rect area_2, integer specifier returns nothing
	local integer this_55
	local real temp
	local real temp_2
	local real tuple_temp
	local real tuple_temp_2
	set RegionSaveData_area[this_54] = rect_copy(area_2)
	set this_55 = RegionSaveData_terrainData[this_54]
	call TileData_scan(TerrainData_tiles[this_55], area_2)
	call HeightData_scan(TerrainData_height[this_55], area_2)
	call MultipleUnitData_scan(RegionSaveData_unitData[this_54], area_2)
	call AtmosphericData_scan(RegionSaveData_atmosphericData[this_54], specifier)
	set temp = GetRectCenterX(area_2)
	set tuple_temp = GetRectCenterY(area_2)
	set RegionSaveData_origin_x[this_54] = temp
	set RegionSaveData_origin_y[this_54] = tuple_temp
	set temp_2 = GetRectMaxX(area_2) - GetRectMinX(area_2)
	set tuple_temp_2 = GetRectMaxY(area_2) - GetRectMinY(area_2)
	set RegionSaveData_dimensions_x[this_54] = temp_2
	set RegionSaveData_dimensions_y[this_54] = tuple_temp_2
	call Persistable_save(this_54, 0)
endfunction

function new_AtmosphericData takes nothing returns integer
	local integer this_54
	if DataSerializable_firstFree == 0 then
		if DataSerializable_maxIndex < 32768 then
			set DataSerializable_maxIndex = DataSerializable_maxIndex + 1
			set this_54 = DataSerializable_maxIndex
			set DataSerializable_typeId[this_54] = 746
		else
			call error("Out of memory: Could not create AtmosphericData.")
			set this_54 = 0
		endif
	else
		set DataSerializable_firstFree = DataSerializable_firstFree - 1
		set this_54 = DataSerializable_nextFree[DataSerializable_firstFree]
		set DataSerializable_typeId[this_54] = 746
	endif
	set AtmosphericData_dnc[this_54] = null
	set AtmosphericData_fog_state[this_54] = false
	set AtmosphericData_fog_min[this_54] = 0.
	set AtmosphericData_fog_max[this_54] = 0.
	set AtmosphericData_fog_r[this_54] = 0.
	set AtmosphericData_fog_g[this_54] = 0.
	set AtmosphericData_fog_b[this_54] = 0.
	set AtmosphericData_corrector_state[this_54] = false
	set AtmosphericData_corrector_r[this_54] = 0
	set AtmosphericData_corrector_g[this_54] = 0
	set AtmosphericData_corrector_b[this_54] = 0
	set AtmosphericData_weatherId[this_54] = 0
	return this_54
endfunction

function new_HashList takes nothing returns integer
	local integer this_54
	if HashList_firstFree == 0 then
		if HashList_maxIndex < 32768 then
			set HashList_maxIndex = HashList_maxIndex + 1
			set this_54 = HashList_maxIndex
			set HashList_typeId[this_54] = 824
		else
			call error("Out of memory: Could not create HashList.")
			set this_54 = 0
		endif
	else
		set HashList_firstFree = HashList_firstFree - 1
		set this_54 = HashList_nextFree[HashList_firstFree]
		set HashList_typeId[this_54] = 824
	endif
	set HashList_size[this_54] = 0
	return this_54
endfunction

function new_UnitDictionary takes nothing returns integer
	local integer this_54
	if DataSerializable_firstFree == 0 then
		if DataSerializable_maxIndex < 32768 then
			set DataSerializable_maxIndex = DataSerializable_maxIndex + 1
			set this_54 = DataSerializable_maxIndex
			set DataSerializable_typeId[this_54] = 756
		else
			call error("Out of memory: Could not create UnitDictionary.")
			set this_54 = 0
		endif
	else
		set DataSerializable_firstFree = DataSerializable_firstFree - 1
		set this_54 = DataSerializable_nextFree[DataSerializable_firstFree]
		set DataSerializable_typeId[this_54] = 756
	endif
	set UnitDictionary_currentId[this_54] = 0
	set UnitDictionary_dictionary[this_54] = new_Table()
	return this_54
endfunction

function new_MultipleUnitData takes nothing returns integer
	local integer this_54
	if DataSerializable_firstFree == 0 then
		if DataSerializable_maxIndex < 32768 then
			set DataSerializable_maxIndex = DataSerializable_maxIndex + 1
			set this_54 = DataSerializable_maxIndex
			set DataSerializable_typeId[this_54] = 749
		else
			call error("Out of memory: Could not create MultipleUnitData.")
			set this_54 = 0
		endif
	else
		set DataSerializable_firstFree = DataSerializable_firstFree - 1
		set this_54 = DataSerializable_nextFree[DataSerializable_firstFree]
		set DataSerializable_typeId[this_54] = 749
	endif
	set MultipleUnitData_list[this_54] = new_HashList()
	set MultipleUnitData_dictionary[this_54] = new_UnitDictionary()
	return this_54
endfunction

function new_HeightData takes nothing returns integer
	local integer this_54
	if DataSerializable_firstFree == 0 then
		if DataSerializable_maxIndex < 32768 then
			set DataSerializable_maxIndex = DataSerializable_maxIndex + 1
			set this_54 = DataSerializable_maxIndex
			set DataSerializable_typeId[this_54] = 748
		else
			call error("Out of memory: Could not create HeightData.")
			set this_54 = 0
		endif
	else
		set DataSerializable_firstFree = DataSerializable_firstFree - 1
		set this_54 = DataSerializable_nextFree[DataSerializable_firstFree]
		set DataSerializable_typeId[this_54] = 748
	endif
	set HeightData_reader[this_54] = 0
	set HeightData_size[this_54] = 0
	return this_54
endfunction

function new_IterableMap takes nothing returns integer
	local integer this_54
	if Table_firstFree == 0 then
		if Table_maxIndex < 32768 then
			set Table_maxIndex = Table_maxIndex + 1
			set this_54 = Table_maxIndex
			set Table_typeId[this_54] = 984
		else
			call error("Out of memory: Could not create IterableMap.")
			set this_54 = 0
		endif
	else
		set Table_firstFree = Table_firstFree - 1
		set this_54 = Table_nextFree[Table_firstFree]
		set Table_typeId[this_54] = 984
	endif
	set IterableMap_keys[this_54] = new_HashList()
	set IterableMap__destroyed[this_54] = false
	return this_54
endfunction

function new_TerrainCell_2 takes nothing returns integer
	local integer this_54
	if TerrainCell_firstFree == 0 then
		if TerrainCell_maxIndex < 32768 then
			set TerrainCell_maxIndex = TerrainCell_maxIndex + 1
			set this_54 = TerrainCell_maxIndex
			set TerrainCell_typeId[this_54] = 986
		else
			call error("Out of memory: Could not create TerrainCell.")
			set this_54 = 0
		endif
	else
		set TerrainCell_firstFree = TerrainCell_firstFree - 1
		set this_54 = TerrainCell_nextFree[TerrainCell_firstFree]
		set TerrainCell_typeId[this_54] = 986
	endif
	set TerrainCell_current[this_54] = 0
	set TerrainCell_data[this_54] = ""
	return this_54
endfunction

function new_TileData takes nothing returns integer
	local integer this_54
	if DataSerializable_firstFree == 0 then
		if DataSerializable_maxIndex < 32768 then
			set DataSerializable_maxIndex = DataSerializable_maxIndex + 1
			set this_54 = DataSerializable_maxIndex
			set DataSerializable_typeId[this_54] = 755
		else
			call error("Out of memory: Could not create TileData.")
			set this_54 = 0
		endif
	else
		set DataSerializable_firstFree = DataSerializable_firstFree - 1
		set this_54 = DataSerializable_nextFree[DataSerializable_firstFree]
		set DataSerializable_typeId[this_54] = 755
	endif
	set TileData_tileMap[this_54] = new_IterableMap()
	set TileData_cellList[this_54] = new_LinkedList()
	set TileData_currentNewChar[this_54] = 0
	set TileData_currentCell[this_54] = new_TerrainCell_2()
	return this_54
endfunction

function new_TerrainData takes nothing returns integer
	local integer this_54
	if DataSerializable_firstFree == 0 then
		if DataSerializable_maxIndex < 32768 then
			set DataSerializable_maxIndex = DataSerializable_maxIndex + 1
			set this_54 = DataSerializable_maxIndex
			set DataSerializable_typeId[this_54] = 754
		else
			call error("Out of memory: Could not create TerrainData.")
			set this_54 = 0
		endif
	else
		set DataSerializable_firstFree = DataSerializable_firstFree - 1
		set this_54 = DataSerializable_nextFree[DataSerializable_firstFree]
		set DataSerializable_typeId[this_54] = 754
	endif
	set TerrainData_tiles[this_54] = new_TileData()
	set TerrainData_height[this_54] = new_HeightData()
	return this_54
endfunction

function construct_RegionSaveData takes integer this_54, player owner_4, string name returns nothing
	set Persistable_owner[this_54] = owner_4
	set Persistable_middleware[this_54] = 0
	set RegionSaveData_origin_x[this_54] = 0.
	set RegionSaveData_origin_y[this_54] = 0.
	set RegionSaveData_dimensions_x[this_54] = 0.
	set RegionSaveData_dimensions_y[this_54] = 0.
	set RegionSaveData_terrainData[this_54] = new_TerrainData()
	set RegionSaveData_unitData[this_54] = new_MultipleUnitData()
	set RegionSaveData_atmosphericData[this_54] = new_AtmosphericData()
	set RegionSaveData_valid[this_54] = false
	set RegionSaveData_name[this_54] = name
endfunction

function new_RegionSaveData takes player owner_4, string name returns integer
	local integer this_54
	if DataSerializable_firstFree == 0 then
		if DataSerializable_maxIndex < 32768 then
			set DataSerializable_maxIndex = DataSerializable_maxIndex + 1
			set this_54 = DataSerializable_maxIndex
			set DataSerializable_typeId[this_54] = 752
		else
			call error("Out of memory: Could not create RegionSaveData.")
			set this_54 = 0
		endif
	else
		set DataSerializable_firstFree = DataSerializable_firstFree - 1
		set this_54 = DataSerializable_nextFree[DataSerializable_firstFree]
		set DataSerializable_typeId[this_54] = 752
	endif
	call construct_RegionSaveData(this_54, owner_4, name)
	return this_54
endfunction

function tile takes integer x, integer y returns integer
	if x < 0 or x >= TerrainUtils_TILES_X or y < 0 or y >= TerrainUtils_TILES_Y then
		set tile_return_id = -1
		return tile_return_id
	endif
	set tile_return_id = y * TerrainUtils_TILES_X + x
	return tile_return_id
endfunction

function tile_setType takes integer this_id, integer ttype returns nothing
	call SetTerrainType(ModuloInteger(this_id, TerrainUtils_TILES_X) * 128. + MapBounds_boundMin_x, this_id / TerrainUtils_TILES_X * 128. + MapBounds_boundMin_y, ttype, -1, 1, 1)
endfunction

function RegionCommands_closure_impl_2 takes integer this_54, integer context_3, integer arguments_2 returns nothing
	local string command = Argument_asString(Arguments_get(arguments_2, 1), Arguments_context[arguments_2])
	local player owner_4 = CommandExecutor_owner[CommandContext_executor[context_3]]
	local integer iterator
	local unit what_2
	local integer specifier
	local integer iter_11
	local integer tileId
	local integer from
	local integer data_2
	local boolean fog_state
	local real fog_min
	local real fog_max
	local real fog_r
	local real fog_g
	local real fog_b
	local unit this_55
	local integer x
	local integer y
	local integer this_56
	local string Command_Argument_asString_result
	local string Command_Argument_asString_result_2
	local integer result_2
	set this_54 = 0
	set iterator = new_LLIterator_2(CommandContext_selection[context_3])
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
		set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
		set what_2 = unitFromIndex(LLEntry_elem[LLIterator_current[iterator]])
		set specifier = RegionSpecifier_lookup[GetUnitUserData(what_2)]
		if owner_4 == GetOwningPlayer(what_2) and specifier != 0 then
			set this_54 = specifier
			exitwhen true
		endif
	endloop
	if LLIterator_destroyOnClose[iterator] then
		if LLIterator_typeId[iterator] == 0 then
			call error("Double free: object of type LLIterator")
		else
			set LLIterator_nextFree[LLIterator_firstFree] = iterator
			set LLIterator_firstFree = LLIterator_firstFree + 1
			set LLIterator_typeId[iterator] = 0
		endif
	endif
	if command == "" then
		set this_55 = Spawner_lookup[GetPlayerId(owner_4)]
		call new_RegionSpecifier(owner_4, GetUnitX(this_55), GetUnitY(this_55))
	elseif command == "width" then
		if this_54 != 0 then
			call RegionSpecifier_setWidth(this_54, 128. + 256. * Argument_asInt(Arguments_get(arguments_2, 2), Arguments_context[arguments_2]))
		endif
	elseif command == "height" then
		if this_54 != 0 then
			call RegionSpecifier_setHeight(this_54, 128. + 256. * Argument_asInt(Arguments_get(arguments_2, 2), Arguments_context[arguments_2]))
		endif
	elseif command == "size" then
		if this_54 != 0 then
			call RegionSpecifier_setHeight(this_54, 128. + 256. * Argument_asInt(Arguments_get(arguments_2, 2), Arguments_context[arguments_2]))
			call RegionSpecifier_setWidth(this_54, 128. + 256. * Argument_asInt(Arguments_get(arguments_2, 2), Arguments_context[arguments_2]))
		endif
	elseif command == "tile" then
		if this_54 != 0 then
			set iter_11 = new_RectTileIterator(RegionSpecifier_area[this_54])
			set tileId = fromRawCode(Argument_asString(Arguments_get(arguments_2, 2), Arguments_context[arguments_2]))
			set from = iter_11
			loop
				exitwhen RectTileIterator_closed[from] or RectTileIterator_currentY[from] > RectTileIterator_maxY[from]
				set x = RectTileIterator_currentX[from]
				set y = RectTileIterator_currentY[from]
				set RectTileIterator_currentX[from] = RectTileIterator_currentX[from] + 1
				if RectTileIterator_currentX[from] > RectTileIterator_maxX[from] then
					set RectTileIterator_currentX[from] = RectTileIterator_minX[from]
					set RectTileIterator_currentY[from] = RectTileIterator_currentY[from] + 1
				endif
				call tile_setType(tile(x, y), tileId)
			endloop
			if RectTileIterator_typeId[iter_11] == 0 then
				call error("Double free: object of type RectTileIterator")
			else
				set RectTileIterator_nextFree[RectTileIterator_firstFree] = iter_11
				set RectTileIterator_firstFree = RectTileIterator_firstFree + 1
				set RectTileIterator_typeId[iter_11] = 0
			endif
		endif
	elseif command == "save" then
		call RegionSaveData_startSave(new_RegionSaveData(owner_4, Argument_asString(Arguments_get(arguments_2, 2), Arguments_context[arguments_2])), RegionSpecifier_area[this_54], this_54)
	elseif command == "load" then
		set data_2 = new_RegionSaveData(owner_4, Argument_asString(Arguments_get(arguments_2, 2), Arguments_context[arguments_2]))
		if PersistableLoadCallback_firstFree == 0 then
			if PersistableLoadCallback_maxIndex < 32768 then
				set PersistableLoadCallback_maxIndex = PersistableLoadCallback_maxIndex + 1
				set this_56 = PersistableLoadCallback_maxIndex
				set PersistableLoadCallback_typeId[this_56] = 941
			else
				call error("Out of memory: Could not create Closure.")
				set this_56 = 0
			endif
		else
			set PersistableLoadCallback_firstFree = PersistableLoadCallback_firstFree - 1
			set this_56 = PersistableLoadCallback_nextFree[PersistableLoadCallback_firstFree]
			set PersistableLoadCallback_typeId[this_56] = 941
		endif
		set data[this_56] = data_2
		set owner[this_56] = owner_4
		set RegionSaveData_area[data_2] = Rect(0., 0., 0., 0.)
		call Persistable_load(data_2, this_56)
	elseif command == "fog" then
		set Command_Argument_asString_result = Argument_asString(Arguments_get(arguments_2, 2), Arguments_context[arguments_2])
		set fog_state = RegionSpecifier_fog_state[this_54]
		set fog_min = RegionSpecifier_fog_min[this_54]
		set fog_max = RegionSpecifier_fog_max[this_54]
		set fog_r = RegionSpecifier_fog_r[this_54]
		set fog_g = RegionSpecifier_fog_g[this_54]
		set fog_b = RegionSpecifier_fog_b[this_54]
		set fog_state = true
		if Command_Argument_asString_result == "off" then
			set fog_state = false
		elseif Command_Argument_asString_result == "color" then
			set fog_r = Argument_asReal(Arguments_get(arguments_2, 3), Arguments_context[arguments_2])
			set fog_g = Argument_asReal(Arguments_get(arguments_2, 4), Arguments_context[arguments_2])
			set fog_b = Argument_asReal(Arguments_get(arguments_2, 5), Arguments_context[arguments_2])
		elseif Command_Argument_asString_result == "start" then
			set fog_min = Argument_asReal(Arguments_get(arguments_2, 3), Arguments_context[arguments_2])
		elseif Command_Argument_asString_result == "end" then
			set fog_max = Argument_asReal(Arguments_get(arguments_2, 3), Arguments_context[arguments_2])
		endif
		set RegionSpecifier_fog_state[this_54] = fog_state
		set RegionSpecifier_fog_min[this_54] = fog_min
		set RegionSpecifier_fog_max[this_54] = fog_max
		set RegionSpecifier_fog_r[this_54] = fog_r
		set RegionSpecifier_fog_g[this_54] = fog_g
		set RegionSpecifier_fog_b[this_54] = fog_b
	elseif command == "weather" then
		set Command_Argument_asString_result_2 = Argument_asString(Arguments_get(arguments_2, 2), Arguments_context[arguments_2])
		set result_2 = 0
		if HaveSavedInteger(Table_ht, StaticData_WEATHER, StringHash(Command_Argument_asString_result_2)) then
			set result_2 = LoadInteger(Table_ht, StaticData_WEATHER, StringHash(Command_Argument_asString_result_2))
		endif
		set RegionSpecifier_weatherId[this_54] = result_2
		call RegionSpecifier_updateWeather(this_54)
	endif
	set owner_4 = null
	set what_2 = null
	set this_55 = null
endfunction

function getObjectDataField takes integer objectId, string field returns string
	local string original = BlzGetAbilityExtendedTooltip(1097690227, 1)
	local string result_2 = ""
	local integer remainingValue = objectId
	local integer byteno = 0
	local string output
	local integer charValue
	loop
		exitwhen byteno > 3
		set charValue = ModuloInteger(remainingValue, 256)
		set remainingValue = remainingValue / 256
		set result_2 = SubString(".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~.................................................................................................................................", charValue, charValue + 1) + result_2
		set byteno = byteno + 1
	endloop
	call BlzSetAbilityExtendedTooltip(1097690227, "<" + result_2 + "," + field + ">", 1)
	set output = BlzGetAbilityExtendedTooltip(1097690227, 1)
	call BlzSetAbilityExtendedTooltip(1097690227, original, 1)
	return output
endfunction

function TestCommands_closure_impl_4 takes integer this_54, integer context_3, integer arguments_2 returns nothing
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., getObjectDataField(fromRawCode(Argument_asString(Arguments_get(arguments_2, 1), Arguments_context[arguments_2])), Argument_asString(Arguments_get(arguments_2, 2), Arguments_context[arguments_2])))
endfunction

function TestCommands_closure_impl_5 takes integer this_54, integer context_3, integer arguments_2 returns nothing
	local gamecache gc = InitGameCache("t")
	local integer Command_Argument_asInt_result = Argument_asInt(Arguments_get(arguments_2, 1), Arguments_context[arguments_2])
	local string mkey
	local integer i_3
	local string skey
	if 0 >= GamecacheKeys_count then
		call error("Network: trying to get invalid GC key")
	endif
	set mkey = GamecacheKeys_keys[0]
	if Player_localPlayer == CommandExecutor_owner[CommandContext_executor[context_3]] then
		set i_3 = 0
		set this_54 = Command_Argument_asInt_result
		loop
			exitwhen i_3 > this_54
			if i_3 >= GamecacheKeys_count then
				call error("Network: trying to get invalid GC key")
			endif
			set skey = GamecacheKeys_keys[i_3]
			call StoreInteger(gc, mkey, skey, 100300)
			call SyncStoredInteger(gc, mkey, skey)
			set i_3 = i_3 + 1
		endloop
	endif
	set gc = null
endfunction

function PacketReader_open takes string path returns nothing
	local integer this_54
	call PreloadGenClear()
	call PreloadGenStart()
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_54 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_54] = 799
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_54 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_54] = 799
	endif
	if  not try(this_54) then
		call error("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
	endif
	call Preloader(path)
	set PacketReader_currentPacket = 1
endfunction

function TestCommands_closure_impl_6 takes integer this_54, integer context_3, integer arguments_2 returns nothing
	call PacketReader_open(Argument_asString(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]))
endfunction

function HeightField_plateau takes integer point_id, integer size returns nothing
	local real height = LoadReal(HeightField_heightFieldOriginal, ModuloInteger(point_id, TerrainUtils_TILES_X), point_id / TerrainUtils_TILES_X) + LoadReal(HeightField_heightFieldModified, ModuloInteger(point_id, TerrainUtils_TILES_X), point_id / TerrainUtils_TILES_X)
	local integer i_3 =  - size
	local integer temp = size
	local integer j
	local integer temp_2
	local real original
	local real modified
	local real d
	local integer tuple_temp
	loop
		exitwhen i_3 > temp
		set j =  - size
		set temp_2 = size
		loop
			exitwhen j > temp_2
			set tuple_temp = tile(ModuloInteger(point_id, TerrainUtils_TILES_X) + i_3, point_id / TerrainUtils_TILES_X + j)
			set original = LoadReal(HeightField_heightFieldOriginal, ModuloInteger(tuple_temp, TerrainUtils_TILES_X), tuple_temp / TerrainUtils_TILES_X)
			set modified = LoadReal(HeightField_heightFieldModified, ModuloInteger(tuple_temp, TerrainUtils_TILES_X), tuple_temp / TerrainUtils_TILES_X)
			set d = height - (original + modified)
			if d >= 1. or d <= -1. then
				call SaveReal(HeightField_heightFieldModified, ModuloInteger(tuple_temp, TerrainUtils_TILES_X), tuple_temp / TerrainUtils_TILES_X, modified + d)
				call TerrainDeformCrater(ModuloInteger(tuple_temp, TerrainUtils_TILES_X) * 128. + MapBounds_boundMin_x, tuple_temp / TerrainUtils_TILES_X * 128. + MapBounds_boundMin_y, 4.,  - d, 10, true)
			endif
			set j = j + 1
		endloop
		set i_3 = i_3 + 1
	endloop
endfunction

function tile_2 takes real x, real y returns integer
	local integer rx = R2I(x - MapBounds_boundMin_x + 64.) / 128
	local integer ry = R2I(y - MapBounds_boundMin_y + 64.) / 128
	if rx < 0 or rx >= TerrainUtils_TILES_X or ry < 0 or ry >= TerrainUtils_TILES_Y then
		set tile_return_id_2 = -1
		return tile_return_id_2
	endif
	set tile_return_id_2 = ry * TerrainUtils_TILES_X + rx
	return tile_return_id_2
endfunction

function TestCommands_closure_impl_7 takes integer this_54, integer context_3, integer arguments_2 returns nothing
	local unit this_55
	set this_54 = Argument_asInt(Arguments_get(arguments_2, 1), Arguments_context[arguments_2])
	set this_55 = Spawner_lookup[GetPlayerId(CommandExecutor_owner[CommandContext_executor[context_3]])]
	call HeightField_plateau(tile_2(GetUnitX(this_55), GetUnitY(this_55)), this_54)
	set this_55 = null
endfunction

function TestCommands_closure_impl_8 takes integer this_54, integer context_3, integer argument returns nothing
	local string s = ""
	set this_54 = 0
	loop
		exitwhen this_54 > 1023
		set s = s + "a"
		set this_54 = this_54 + 1
	endloop
	call SetPlayerName(CommandExecutor_owner[CommandContext_executor[context_3]], s)
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., GetPlayerName(CommandExecutor_owner[CommandContext_executor[context_3]]))
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., I2S(StringLength(GetPlayerName(CommandExecutor_owner[CommandContext_executor[context_3]]))))
endfunction

function HeightField_bump takes integer point_id, integer radius, real amount returns nothing
	local integer centerX = ModuloInteger(point_id, TerrainUtils_TILES_X)
	local integer centerY = point_id / TerrainUtils_TILES_X
	local integer i_3 =  - radius
	local integer temp = radius
	local integer j
	local integer temp_2
	local integer currentX
	local integer currentY
	local real id
	local real jd
	local real z
	local integer cond_result
	local integer cond_result_2
	local real this_54
	local real cond_result_3
	local real cond_result_4
	local integer tuple_temp
	loop
		exitwhen i_3 > temp
		set j =  - radius
		set temp_2 = radius
		loop
			exitwhen j > temp_2
			set currentX = centerX + i_3
			set currentY = centerY + j
			if i_3 < 0 then
				set cond_result =  - i_3
			else
				set cond_result = i_3
			endif
			set id = cond_result * 1. / radius
			if j < 0 then
				set cond_result_2 =  - j
			else
				set cond_result_2 = j
			endif
			set jd = cond_result_2 * 1. / radius
			set this_54 = 0.5 - id * id - jd * jd
			if this_54 <= 0. then
				set cond_result_4 = 0.
			else
				if this_54 >= 1. then
					set cond_result_3 = 1.
				else
					set cond_result_3 = this_54
				endif
				set cond_result_4 = cond_result_3
			endif
			set z = SquareRoot(cond_result_4) * amount
			set tuple_temp = tile(currentX, currentY)
			call SaveReal(HeightField_heightFieldModified, ModuloInteger(tuple_temp, TerrainUtils_TILES_X), tuple_temp / TerrainUtils_TILES_X, LoadReal(HeightField_heightFieldModified, ModuloInteger(tuple_temp, TerrainUtils_TILES_X), tuple_temp / TerrainUtils_TILES_X) + z)
			call TerrainDeformCrater(ModuloInteger(tuple_temp, TerrainUtils_TILES_X) * 128. + MapBounds_boundMin_x, tuple_temp / TerrainUtils_TILES_X * 128. + MapBounds_boundMin_y, 4.,  - z, 10, true)
			set j = j + 1
		endloop
		set i_3 = i_3 + 1
	endloop
endfunction

function TestCommands_closure_impl_9 takes integer this_54, integer context_3, integer arguments_2 returns nothing
	local real Command_Argument_asReal_result
	local unit this_55
	set this_54 = Argument_asInt(Arguments_get(arguments_2, 1), Arguments_context[arguments_2])
	set Command_Argument_asReal_result = Argument_asReal(Arguments_get(arguments_2, 2), Arguments_context[arguments_2])
	set this_55 = Spawner_lookup[GetPlayerId(CommandExecutor_owner[CommandContext_executor[context_3]])]
	call HeightField_bump(tile_2(GetUnitX(this_55), GetUnitY(this_55)), this_54, Command_Argument_asReal_result)
	set this_55 = null
endfunction

function TestCommands_closure_impl_10 takes integer this_54, integer context_3, integer arguments_2 returns nothing
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_54 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_54] = 809
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_54 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_54] = 809
	endif
	if  not try(this_54) then
		call error("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
	endif
endfunction

function TestCommands_closure_impl_11 takes integer this_54, integer context_3, integer arguments_2 returns nothing
	local string Command_Argument_asString_result = Argument_asString(Arguments_get(arguments_2, 2), Arguments_context[arguments_2])
	local integer id
	local integer i_3
	if SubString(Command_Argument_asString_result, 0, 1) == "_" then
		set id = fromRawCode(SubString(Command_Argument_asString_result, 1, StringLength(Command_Argument_asString_result)))
	else
		set id = UnitId(Command_Argument_asString_result)
	endif
	set i_3 = 0
	set this_54 = Argument_asInt(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]) - 1
	loop
		exitwhen i_3 > this_54
		call CreateUnit(CommandExecutor_owner[CommandContext_executor[context_3]], id, 0., 0., 0)
		set i_3 = i_3 + 1
	endloop
endfunction

function TestCommands_closure_impl_12 takes integer this_54, integer context_3, integer arguments_2 returns nothing
	if Box_firstFree_2 == 0 then
		if Box_maxIndex_2 < 32768 then
			set Box_maxIndex_2 = Box_maxIndex_2 + 1
			set context_3 = Box_maxIndex_2
		else
			call error("Out of memory: Could not create Box.")
			set context_3 = 0
		endif
	else
		set Box_firstFree_2 = Box_firstFree_2 - 1
		set context_3 = Box_nextFree_2[Box_firstFree_2]
	endif
	set Box_v[context_3] = 0
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_54 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_54] = 808
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_54 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_54] = 808
	endif
	set box[this_54] = context_3
	call try(this_54)
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., I2S(Box_v[context_3]))
endfunction

function TestCommands_closure_impl_13 takes integer this_54, integer context_3, integer arguments_2 returns nothing
	call Argument_asReal(Arguments_get(arguments_2, 1), Arguments_context[arguments_2])
	call Argument_asReal(Arguments_get(arguments_2, 2), Arguments_context[arguments_2])
	call Argument_asReal(Arguments_get(arguments_2, 3), Arguments_context[arguments_2])
	call Argument_asReal(Arguments_get(arguments_2, 4), Arguments_context[arguments_2])
endfunction

function TestCommands_closure_impl_14 takes integer this_54, integer context_3, integer arguments_2 returns nothing
	set this_54 = new_Network(CommandExecutor_owner[CommandContext_executor[context_3]])
	if NetworkFinishedCallback_firstFree == 0 then
		if NetworkFinishedCallback_maxIndex < 32768 then
			set NetworkFinishedCallback_maxIndex = NetworkFinishedCallback_maxIndex + 1
			set context_3 = NetworkFinishedCallback_maxIndex
			set NetworkFinishedCallback_typeId[context_3] = 906
		else
			call error("Out of memory: Could not create Closure.")
			set context_3 = 0
		endif
	else
		set NetworkFinishedCallback_firstFree = NetworkFinishedCallback_firstFree - 1
		set context_3 = NetworkFinishedCallback_nextFree[NetworkFinishedCallback_firstFree]
		set NetworkFinishedCallback_typeId[context_3] = 906
	endif
	set Network_finishCallback[this_54] = context_3
	call Network_sendMetadata(this_54)
endfunction

function TestCommands_closure_impl_15 takes integer this_54, integer context_3, integer arguments_2 returns nothing
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_54 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_54] = 810
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_54 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_54] = 810
	endif
	if  not try(this_54) then
		call error("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
	endif
endfunction

function LineSplitterParser_process takes integer this_54 returns string
	local string finalResult
	local integer this_55
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_55 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_55] = 800
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_55 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_55] = 800
	endif
	set this_38[this_55] = this_54
	if  not try(this_55) then
		call error("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
	endif
	set finalResult = LineSplitterParser_result[this_54]
	if BaseParser_typeId[this_54] == 0 then
		call error("Double free: object of type LineSplitterParser")
	else
		set BaseParser_nextFree[BaseParser_firstFree] = this_54
		set BaseParser_firstFree = BaseParser_firstFree + 1
		set BaseParser_typeId[this_54] = 0
	endif
	return finalResult
endfunction

function new_LineSplitterParser takes string input, integer maxWidth returns integer
	local integer this_54
	if BaseParser_firstFree == 0 then
		if BaseParser_maxIndex < 32768 then
			set BaseParser_maxIndex = BaseParser_maxIndex + 1
			set this_54 = BaseParser_maxIndex
			set BaseParser_typeId[this_54] = 641
		else
			call error("Out of memory: Could not create LineSplitterParser.")
			set this_54 = 0
		endif
	else
		set BaseParser_firstFree = BaseParser_firstFree - 1
		set this_54 = BaseParser_nextFree[BaseParser_firstFree]
		set BaseParser_typeId[this_54] = 641
	endif
	set BaseParser_pos[this_54] = 0
	set BaseParser_input[this_54] = input
	set LineSplitterParser_maxWidth[this_54] = maxWidth
	return this_54
endfunction

function TestCommands_closure_impl_16 takes integer this_54, integer context_3, integer arguments_2 returns nothing
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., LineSplitterParser_process(new_LineSplitterParser(Argument_asString(Arguments_get(arguments_2, 2), Arguments_context[arguments_2]), Argument_asInt(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]))))
endfunction

function TestCommands_closure_impl_17 takes integer this_54, integer context_3, integer arguments_2 returns nothing
	local string s = ""
	local integer temp
	set context_3 = 1
	set this_54 = 1
	set temp = Argument_asInt(Arguments_get(arguments_2, 1), Arguments_context[arguments_2])
	loop
		exitwhen this_54 > temp
		set s = s + I2S(ModuloInteger(context_3, 10))
		set context_3 = context_3 + 1
		set this_54 = this_54 + 1
	endloop
	set PacketWriter_currentPacket = 1
	call PreloadGenClear()
	call PreloadGenStart()
	call PacketWriter_write(s)
	call Preload("\" )\r\nendfunction\r\nfunction AAA takes nothing returns nothing \r\n//")
	call PreloadGenEnd("iotest.pld")
	call PacketReader_open("iotest.pld")
endfunction

function TestCommands_closure_impl_18 takes integer this_54, integer context_3, integer argument returns nothing
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_54 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_54] = 807
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_54 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_54] = 807
	endif
	set context_2[this_54] = context_3
	if  not try(this_54) then
		call error("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
	endif
endfunction

function TestCommands_closure_impl_19 takes integer this_54, integer context_3, integer arguments_2 returns nothing
	local player Command_CommandExecutor_owner_result
	local string Command_Argument_asString_result
	local integer Network_Network_getWriter_result
	local integer this_55
	set this_54 = new_Network(CommandExecutor_owner[CommandContext_executor[context_3]])
	set Command_CommandExecutor_owner_result = CommandExecutor_owner[CommandContext_executor[context_3]]
	set Command_Argument_asString_result = Argument_asString(Arguments_get(arguments_2, 1), Arguments_context[arguments_2])
	if Player_localPlayer == Command_CommandExecutor_owner_result then
		set Network_Network_getWriter_result = Network_dataWriter[this_54]
		call SaveStr(Table_ht, HashWriter_data[Network_Network_getWriter_result], HashWriter_stringWriteIndex[Network_Network_getWriter_result], Command_Argument_asString_result)
		set HashWriter_stringWriteIndex[Network_Network_getWriter_result] = HashWriter_stringWriteIndex[Network_Network_getWriter_result] + 1
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "sending" + Command_Argument_asString_result)
	endif
	if NetworkFinishedCallback_firstFree == 0 then
		if NetworkFinishedCallback_maxIndex < 32768 then
			set NetworkFinishedCallback_maxIndex = NetworkFinishedCallback_maxIndex + 1
			set this_55 = NetworkFinishedCallback_maxIndex
			set NetworkFinishedCallback_typeId[this_55] = 905
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set NetworkFinishedCallback_firstFree = NetworkFinishedCallback_firstFree - 1
		set this_55 = NetworkFinishedCallback_nextFree[NetworkFinishedCallback_firstFree]
		set NetworkFinishedCallback_typeId[this_55] = 905
	endif
	set owner_3[this_55] = Command_CommandExecutor_owner_result
	set Network_finishCallback[this_54] = this_55
	call Network_sendMetadata(this_54)
	set Command_CommandExecutor_owner_result = null
endfunction

function TestCommands_closure_impl_20 takes integer this_54, integer context_3, integer arguments_2 returns nothing
	local integer net = new_Network(CommandExecutor_owner[CommandContext_executor[context_3]])
	local integer count_3 = Argument_asInt(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]) - 1
	local player Command_CommandExecutor_owner_result = CommandExecutor_owner[CommandContext_executor[context_3]]
	local player owner_4 = Command_CommandExecutor_owner_result
	local integer i_3
	local integer Network_Network_getWriter_result
	local integer this_55
	if Player_localPlayer == Command_CommandExecutor_owner_result then
		set i_3 = 0
		set this_54 = count_3
		loop
			exitwhen i_3 > this_54
			set Network_Network_getWriter_result = Network_dataWriter[net]
			call SaveInteger(Table_ht, HashWriter_data[Network_Network_getWriter_result], HashWriter_integerWriteIndex[Network_Network_getWriter_result], 163000)
			set HashWriter_integerWriteIndex[Network_Network_getWriter_result] = HashWriter_integerWriteIndex[Network_Network_getWriter_result] + 1
			set i_3 = i_3 + 1
		endloop
	endif
	if NetworkFinishedCallback_firstFree == 0 then
		if NetworkFinishedCallback_maxIndex < 32768 then
			set NetworkFinishedCallback_maxIndex = NetworkFinishedCallback_maxIndex + 1
			set this_55 = NetworkFinishedCallback_maxIndex
			set NetworkFinishedCallback_typeId[this_55] = 904
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set NetworkFinishedCallback_firstFree = NetworkFinishedCallback_firstFree - 1
		set this_55 = NetworkFinishedCallback_nextFree[NetworkFinishedCallback_firstFree]
		set NetworkFinishedCallback_typeId[this_55] = 904
	endif
	set owner_2[this_55] = owner_4
	set count_2[this_55] = count_3
	set Network_finishCallback[net] = this_55
	call Network_sendMetadata(net)
	set owner_4 = null
	set Command_CommandExecutor_owner_result = null
endfunction

function TestCommands_closure_impl_21 takes integer this_54, integer context_3, integer arguments_2 returns nothing
	call SetFloatGameState(GAME_STATE_TIME_OF_DAY, Argument_asReal(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]))
endfunction

function dispatch_SimpleCommand_CommandWrappers_SimpleCommand_callback takes integer this_54, integer context_3, integer arguments_2 returns nothing
	local real Command_Argument_asReal_result
	local real Command_Argument_asReal_result_2
	if Command_typeId[this_54] <= 688 then
		if Command_typeId[this_54] <= 682 then
			if Command_typeId[this_54] <= 679 then
				if Command_typeId[this_54] <= 678 then
					if Command_typeId[this_54] <= 677 then
						call MiscCommands_closure_impl(this_54, context_3, arguments_2)
					else
						call PlayerSettingsCommands_closure_impl(this_54, context_3, arguments_2)
					endif
				else
					call RegionCommands_closure_impl_2(this_54, context_3, arguments_2)
				endif
			elseif Command_typeId[this_54] <= 681 then
				if Command_typeId[this_54] <= 680 then
					call TestCommands_closure_impl_11(this_54, context_3, arguments_2)
				else
					call TestCommands_closure_impl_8(this_54, context_3, arguments_2)
				endif
			else
				call TestCommands_closure_impl_18(this_54, context_3, arguments_2)
			endif
		elseif Command_typeId[this_54] <= 685 then
			if Command_typeId[this_54] <= 684 then
				if Command_typeId[this_54] <= 683 then
					call TestCommands_closure_impl_20(this_54, context_3, arguments_2)
				else
					call TestCommands_closure_impl_5(this_54, context_3, arguments_2)
				endif
			else
				call TestCommands_closure_impl_19(this_54, context_3, arguments_2)
			endif
		elseif Command_typeId[this_54] <= 687 then
			if Command_typeId[this_54] <= 686 then
				call TestCommands_closure_impl_16(this_54, context_3, arguments_2)
			else
				set Command_Argument_asReal_result = Argument_asReal(Arguments_get(arguments_2, 1), Arguments_context[arguments_2])
				set UnitTag_centerFactor = Command_Argument_asReal_result
			endif
		else
			set Command_Argument_asReal_result_2 = Argument_asReal(Arguments_get(arguments_2, 1), Arguments_context[arguments_2])
			set UnitTag_staticOffset = Command_Argument_asReal_result_2
		endif
	elseif Command_typeId[this_54] <= 694 then
		if Command_typeId[this_54] <= 691 then
			if Command_typeId[this_54] <= 690 then
				if Command_typeId[this_54] <= 689 then
					call TestCommands_closure_impl_12(this_54, context_3, arguments_2)
				elseif Argument_asInt(Arguments_get(arguments_2, 1), Arguments_context[arguments_2]) == 1 then
					set Atmospheric_globalBlend = BLEND_MODE_MODULATE_2X
				else
					set Atmospheric_globalBlend = BLEND_MODE_MODULATE
				endif
			else
				call TestCommands_closure_impl_13(this_54, context_3, arguments_2)
			endif
		elseif Command_typeId[this_54] <= 693 then
			if Command_typeId[this_54] <= 692 then
				call TestCommands_closure_impl_21(this_54, context_3, arguments_2)
			else
				call TestCommands_closure_impl_10(this_54, context_3, arguments_2)
			endif
		else
			call TestCommands_closure_impl_14(this_54, context_3, arguments_2)
		endif
	elseif Command_typeId[this_54] <= 697 then
		if Command_typeId[this_54] <= 696 then
			if Command_typeId[this_54] <= 695 then
				call TestCommands_closure_impl_4(this_54, context_3, arguments_2)
			else
				call TestCommands_closure_impl_15(this_54, context_3, arguments_2)
			endif
		else
			call TestCommands_closure_impl_17(this_54, context_3, arguments_2)
		endif
	elseif Command_typeId[this_54] <= 699 then
		if Command_typeId[this_54] <= 698 then
			call TestCommands_closure_impl_6(this_54, context_3, arguments_2)
		else
			call TestCommands_closure_impl_9(this_54, context_3, arguments_2)
		endif
	else
		call TestCommands_closure_impl_7(this_54, context_3, arguments_2)
	endif
endfunction

function dispatch_Command_Command_Command_run takes integer this_54, integer context_3, integer arguments_2 returns nothing
	if Command_typeId[this_54] <= 675 then
		if Command_typeId[this_54] <= 674 then
			call TestCommands_closure_impl(this_54, context_3, arguments_2)
		else
			call TestCommands_closure_impl_2(this_54, context_3, arguments_2)
		endif
	elseif Command_typeId[this_54] <= 700 then
		call dispatch_SimpleCommand_CommandWrappers_SimpleCommand_callback(this_54, context_3, arguments_2)
		call CommandContext_continue(context_3)
	else
		call UnitCommand_run(this_54, context_3, arguments_2)
	endif
endfunction

function new_ArgumentParser takes string input returns integer
	local integer this_54
	if BaseParser_firstFree == 0 then
		if BaseParser_maxIndex < 32768 then
			set BaseParser_maxIndex = BaseParser_maxIndex + 1
			set this_54 = BaseParser_maxIndex
			set BaseParser_typeId[this_54] = 639
		else
			call error("Out of memory: Could not create ArgumentParser.")
			set this_54 = 0
		endif
	else
		set BaseParser_firstFree = BaseParser_firstFree - 1
		set this_54 = BaseParser_nextFree[BaseParser_firstFree]
		set BaseParser_typeId[this_54] = 639
	endif
	set BaseParser_pos[this_54] = 0
	set BaseParser_input[this_54] = input
	return this_54
endfunction

function new_Arguments takes integer parser, integer context_3 returns integer
	local integer this_54
	if Arguments_firstFree == 0 then
		if Arguments_maxIndex < 32768 then
			set Arguments_maxIndex = Arguments_maxIndex + 1
			set this_54 = Arguments_maxIndex
			set Arguments_typeId[this_54] = 629
		else
			call error("Out of memory: Could not create Arguments.")
			set this_54 = 0
		endif
	else
		set Arguments_firstFree = Arguments_firstFree - 1
		set this_54 = Arguments_nextFree[Arguments_firstFree]
		set Arguments_typeId[this_54] = 629
	endif
	set Arguments_args[this_54] = new_HashMap()
	set Arguments_argCount[this_54] = 0
	set Arguments_rest[this_54] = null
	set Arguments_parser[this_54] = parser
	set Arguments_context[this_54] = context_3
	return this_54
endfunction

function CommandContext_next takes integer this_54 returns nothing
	local integer arguments_2
	local integer callback_4
	local integer LinkedList_LinkedList_peek_result
	local integer this_55
	local integer top
	local boolean andLeft
	if CommandContext_isHalted[this_54] then
		set andLeft = true
	else
		set andLeft = LinkedList_size[CommandContext_commandStack[this_54]] == 0
	endif
	if andLeft then
		call CommandExecutor_notifyFinished(CommandContext_executor[this_54], this_54)
		return
	endif
	set LinkedList_LinkedList_peek_result = LLEntry_elem[LLEntry_prev[LinkedList_dummy[CommandContext_commandStack[this_54]]]]
	if LinkedList_LinkedList_peek_result != 0 then
		if BaseParser_pos[LinkedList_LinkedList_peek_result] < StringLength(BaseParser_input[LinkedList_LinkedList_peek_result]) then
			set arguments_2 = new_Arguments(new_ArgumentParser(CommandParser_nextToken(LinkedList_LinkedList_peek_result)), this_54)
			set callback_4 = CommandRegistry_get(Argument_asString(Arguments_get(arguments_2, 0), Arguments_context[arguments_2]))
			if callback_4 != 0 then
				call dispatch_Command_Command_Command_run(callback_4, this_54, arguments_2)
			endif
			call Arguments_onDestroy(arguments_2)
			if Arguments_typeId[arguments_2] == 0 then
				call error("Double free: object of type Arguments")
			else
				set Arguments_nextFree[Arguments_firstFree] = arguments_2
				set Arguments_firstFree = Arguments_firstFree + 1
				set Arguments_typeId[arguments_2] = 0
			endif
		else
			set this_55 = CommandContext_commandStack[this_54]
			set top = LLEntry_prev[LinkedList_dummy[this_55]]
			if top != LinkedList_dummy[this_55] then
				set LLEntry_next[LLEntry_prev[top]] = LLEntry_next[top]
				set LLEntry_prev[LLEntry_next[top]] = LLEntry_prev[top]
				if LLEntry_typeId[top] == 0 then
					call error("Double free: object of type LLEntry")
				else
					set LLEntry_nextFree[LLEntry_firstFree] = top
					set LLEntry_firstFree = LLEntry_firstFree + 1
					set LLEntry_typeId[top] = 0
				endif
				set LinkedList_size[this_55] = LinkedList_size[this_55] - 1
			endif
			if BaseParser_typeId[LinkedList_LinkedList_peek_result] == 0 then
				call error("Double free: object of type CommandParser")
			else
				set BaseParser_nextFree[BaseParser_firstFree] = LinkedList_LinkedList_peek_result
				set BaseParser_firstFree = BaseParser_firstFree + 1
				set BaseParser_typeId[LinkedList_LinkedList_peek_result] = 0
			endif
		endif
	endif
endfunction

function BigString_readSome takes integer this_54, integer amount returns string
	local integer remainingAmount
	local string result_2
	local string temp
	local string this_55
	local integer this_56
	local integer top
	local integer result_3
	local integer numbers_0
	local integer cond_result
	local integer numbers_1
	local integer cond_result_2
	local string this_57
	if amount > 4096 then
		call error("BigString: trying to read a string larger than BIGSTRING_MAX_CHUNK_LENGTH")
	endif
	set remainingAmount = amount
	if StringLength(BigString_currentReadString[this_54]) < amount then
		set result_2 = BigString_currentReadString[this_54]
		set remainingAmount = amount - StringLength(BigString_currentReadString[this_54])
		set BigString_currentReadString[this_54] = ""
	else
		set result_2 = SubString(BigString_currentReadString[this_54], 0, amount)
		set remainingAmount = 0
		set this_55 = BigString_currentReadString[this_54]
		set BigString_currentReadString[this_54] = SubString(this_55, amount, StringLength(this_55))
	endif
	loop
		exitwhen LinkedList_size[BigString_data[this_54]] <= 0 or remainingAmount <= 0
		set this_56 = BigString_data[this_54]
		set top = LLEntry_next[LinkedList_dummy[this_56]]
		set result_3 = 0
		if top != LinkedList_dummy[this_56] then
			set result_3 = LLEntry_elem[top]
			set LLEntry_next[LLEntry_prev[top]] = LLEntry_next[top]
			set LLEntry_prev[LLEntry_next[top]] = LLEntry_prev[top]
			if LLEntry_typeId[top] == 0 then
				call error("Double free: object of type LLEntry")
			else
				set LLEntry_nextFree[LLEntry_firstFree] = top
				set LLEntry_firstFree = LLEntry_firstFree + 1
				set LLEntry_typeId[top] = 0
			endif
			set LinkedList_size[this_56] = LinkedList_size[this_56] - 1
		endif
		set temp = BigStringElement_data[result_3]
		if BigStringElement_typeId[result_3] == 0 then
			call error("Double free: object of type BigStringElement")
		else
			set BigStringElement_nextFree[BigStringElement_firstFree] = result_3
			set BigStringElement_firstFree = BigStringElement_firstFree + 1
			set BigStringElement_typeId[result_3] = 0
		endif
		if StringLength(temp) > remainingAmount then
			set numbers_0 = StringLength(temp)
			if numbers_0 < 2147483647 then
				set cond_result = numbers_0
			else
				set cond_result = 2147483647
			endif
			if remainingAmount < cond_result then
				set cond_result = remainingAmount
			endif
			set result_2 = result_2 + SubString(temp, 0, cond_result)
			set BigString_currentReadString[this_54] = SubString(temp, cond_result, StringLength(temp))
			set remainingAmount = 0
			exitwhen true
		else
			set result_2 = result_2 + temp
			set remainingAmount = remainingAmount - StringLength(temp)
		endif
	endloop
	if remainingAmount > 0 then
		set numbers_1 = StringLength(BigString_currentWriteString[this_54])
		if remainingAmount < 2147483647 then
			set cond_result_2 = remainingAmount
		else
			set cond_result_2 = 2147483647
		endif
		if numbers_1 < cond_result_2 then
			set cond_result_2 = numbers_1
		endif
		set result_2 = result_2 + SubString(BigString_currentWriteString[this_54], 0, cond_result_2)
		set this_57 = BigString_currentWriteString[this_54]
		set BigString_currentWriteString[this_54] = SubString(this_57, cond_result_2, StringLength(this_57))
	endif
	return result_2
endfunction

function Base64Decoder_nextChar takes integer this_54 returns integer
	return char(BigString_readSome(Base64Decoder_stringBuffer[this_54], 1))
endfunction

function Base64Decoder_next3Bytes takes integer this_54 returns nothing
	local integer Base64_Base64Decoder_nextChar_result = Base64Decoder_nextChar(this_54)
	local integer data_2 = 0
	local integer charAmount = 0
	local integer Base64_Base64Decoder_nextChar_result_2
	local integer Base64_Base64Decoder_nextChar_result_3
	local integer Base64_Base64Decoder_nextChar_result_4
	local integer this_55
	local integer this_56
	local integer value_2
	local integer isNegative
	local integer result_2
	if Base64_REVERSE_CHARMAP[Base64_Base64Decoder_nextChar_result] != -1 then
		set data_2 = Base64_REVERSE_CHARMAP[Base64_Base64Decoder_nextChar_result] * BitwiseInit_powShift[18]
	endif
	set Base64_Base64Decoder_nextChar_result_2 = Base64Decoder_nextChar(this_54)
	if Base64_REVERSE_CHARMAP[Base64_Base64Decoder_nextChar_result_2] != -1 then
		set data_2 = data_2 + Base64_REVERSE_CHARMAP[Base64_Base64Decoder_nextChar_result_2] * BitwiseInit_powShift[12]
		set charAmount = 1
	endif
	set Base64_Base64Decoder_nextChar_result_3 = Base64Decoder_nextChar(this_54)
	if Base64_REVERSE_CHARMAP[Base64_Base64Decoder_nextChar_result_3] != -1 then
		set data_2 = data_2 + Base64_REVERSE_CHARMAP[Base64_Base64Decoder_nextChar_result_3] * BitwiseInit_powShift[6]
		set charAmount = charAmount + 1
	endif
	set Base64_Base64Decoder_nextChar_result_4 = Base64Decoder_nextChar(this_54)
	if Base64_REVERSE_CHARMAP[Base64_Base64Decoder_nextChar_result_4] != -1 then
		set data_2 = data_2 + Base64_REVERSE_CHARMAP[Base64_Base64Decoder_nextChar_result_4]
		set charAmount = charAmount + 1
	endif
	loop
		exitwhen charAmount <= 0
		set this_55 = Base64Decoder_byteBuffer[this_54]
		if data_2 < 0 then
			set result_2 = -2147483648 + data_2
		else
			set result_2 = data_2
		endif
		set this_56 = result_2 - result_2 / 16777216 * 16777216
		set value_2 = this_56
		set isNegative = 0
		if this_56 < 0 then
			set value_2 = -2147483648 + this_56
			set isNegative = 1
		endif
		call ByteBuffer_writeByteInternal(this_55, isNegative * BitwiseInit_powShift[15] + value_2 / BitwiseInit_powShift[16])
		set data_2 = data_2 * BitwiseInit_powShift[8]
		set charAmount = charAmount - 1
	endloop
endfunction

function Base64Encoder_encode3 takes integer this_54 returns nothing
	local integer ByteBuffer_ByteBuffer_readByteInternal_result = ByteBuffer_readByteInternal(Base64Encoder_byteBuffer[this_54])
	local integer ByteBuffer_ByteBuffer_readByteInternal_result_2 = ByteBuffer_readByteInternal(Base64Encoder_byteBuffer[this_54])
	local integer ByteBuffer_ByteBuffer_readByteInternal_result_3 = ByteBuffer_readByteInternal(Base64Encoder_byteBuffer[this_54])
	call Base64Encoder_encodeSingle(this_54, ByteBuffer_ByteBuffer_readByteInternal_result * BitwiseInit_powShift[16] + ByteBuffer_ByteBuffer_readByteInternal_result_2 * BitwiseInit_powShift[8] + ByteBuffer_ByteBuffer_readByteInternal_result_3, 3)
endfunction

function HeightData_closure_impl takes integer this_54 returns nothing
	local integer this_55 = iter_2[this_54]
	local integer x = RectTileIterator_currentX[this_55]
	local integer y = RectTileIterator_currentY[this_55]
	local integer this_56
	local integer number
	local integer tuple_temp
	set RectTileIterator_currentX[this_55] = RectTileIterator_currentX[this_55] + 1
	if RectTileIterator_currentX[this_55] > RectTileIterator_maxX[this_55] then
		set RectTileIterator_currentX[this_55] = RectTileIterator_minX[this_55]
		set RectTileIterator_currentY[this_55] = RectTileIterator_currentY[this_55] + 1
	endif
	set tuple_temp = tile(x, y)
	set HeightData_size[this_12[this_54]] = HeightData_size[this_12[this_54]] + 1
	set this_56 = writer[this_54]
	set number = R2I(LoadReal(HeightField_heightFieldModified, ModuloInteger(tuple_temp, TerrainUtils_TILES_X), tuple_temp / TerrainUtils_TILES_X)) + 32767
	call SaveInteger(Table_ht, HashWriter_data[this_56], HashWriter_integerWriteIndex[this_56], number)
	set HashWriter_integerWriteIndex[this_56] = HashWriter_integerWriteIndex[this_56] + 1
endfunction

function HeightData_closure_impl_2 takes integer this_54 returns nothing
	local integer this_55 = iter_4[this_54]
	local integer x = RectTileIterator_currentX[this_55]
	local integer y = RectTileIterator_currentY[this_55]
	local real original
	local real modified
	local real d
	local integer HashData_HashReader_readInt_result
	local integer tuple_temp
	set RectTileIterator_currentX[this_55] = RectTileIterator_currentX[this_55] + 1
	if RectTileIterator_currentX[this_55] > RectTileIterator_maxX[this_55] then
		set RectTileIterator_currentX[this_55] = RectTileIterator_minX[this_55]
		set RectTileIterator_currentY[this_55] = RectTileIterator_currentY[this_55] + 1
	endif
	set tuple_temp = tile(x, y)
	set HeightData_size[this_13[this_54]] = HeightData_size[this_13[this_54]] + 1
	set HashData_HashReader_readInt_result = HashReader_readInt(HeightData_reader[this_13[this_54]])
	set original = LoadReal(HeightField_heightFieldOriginal, ModuloInteger(tuple_temp, TerrainUtils_TILES_X), tuple_temp / TerrainUtils_TILES_X)
	set modified = LoadReal(HeightField_heightFieldModified, ModuloInteger(tuple_temp, TerrainUtils_TILES_X), tuple_temp / TerrainUtils_TILES_X)
	set d = (HashData_HashReader_readInt_result - 32767) * 1. - (original + modified)
	if d >= 1. or d <= -1. then
		call SaveReal(HeightField_heightFieldModified, ModuloInteger(tuple_temp, TerrainUtils_TILES_X), tuple_temp / TerrainUtils_TILES_X, modified + d)
		call TerrainDeformCrater(ModuloInteger(tuple_temp, TerrainUtils_TILES_X) * 128. + MapBounds_boundMin_x, tuple_temp / TerrainUtils_TILES_X * 128. + MapBounds_boundMin_y, 4.,  - d, 10, true)
	endif
endfunction

function tile_getHeight takes integer this_id returns real
	call MoveLocation(Vectors_tempLoc, ModuloInteger(this_id, TerrainUtils_TILES_X) * 128. + MapBounds_boundMin_x, this_id / TerrainUtils_TILES_X * 128. + MapBounds_boundMin_y)
	return GetLocationZ(Vectors_tempLoc)
endfunction

function HeightField_closure_impl takes integer this_54 returns nothing
	local integer this_55 = iter_6[this_54]
	local integer x = RectTileIterator_currentX[this_55]
	local integer y = RectTileIterator_currentY[this_55]
	set RectTileIterator_currentX[this_55] = RectTileIterator_currentX[this_55] + 1
	if RectTileIterator_currentX[this_55] > RectTileIterator_maxX[this_55] then
		set RectTileIterator_currentX[this_55] = RectTileIterator_minX[this_55]
		set RectTileIterator_currentY[this_55] = RectTileIterator_currentY[this_55] + 1
	endif
	set this_54 = tile(x, y)
	call SaveReal(HeightField_heightFieldOriginal, ModuloInteger(this_54, TerrainUtils_TILES_X), this_54 / TerrainUtils_TILES_X, tile_getHeight(this_54))
	call SaveReal(HeightField_heightFieldModified, ModuloInteger(this_54, TerrainUtils_TILES_X), this_54 / TerrainUtils_TILES_X, 0.)
endfunction

function GamecacheBuffer_readBoolean takes integer this_54 returns boolean
	local gamecache this_55
	local string missionKey
	local integer i_3
	local gamecache this_56
	local string missionKey_2
	local integer i_4
	local boolean GamecacheBuffer_readBooleantempReturn
	if GamecacheBuffer_readIndex[this_54] + 1 >= GamecacheKeys_count then
		call error("GamecacheBuffer: trying to read out of available keys bounds")
	endif
	set GamecacheBuffer_readIndex[this_54] = GamecacheBuffer_readIndex[this_54] + 1
	if GamecacheBuffer_bufferType[this_54] != 2 then
		call error("GamecacheBuffer: invalid buffer usage - mismatched type")
	endif
	set this_55 = GamecacheBuffer_gc[this_54]
	set missionKey = GamecacheBuffer_parentKey[this_54]
	set i_3 = GamecacheBuffer_readIndex[this_54]
	if i_3 >= GamecacheKeys_count then
		call error("Network: trying to get invalid GC key")
	endif
	if  not HaveStoredBoolean(this_55, missionKey, GamecacheKeys_keys[i_3]) then
		call error("GamecacheBuffer: trying to read non-present bool #" + I2S(GamecacheBuffer_readIndex[this_54]))
	endif
	set this_56 = GamecacheBuffer_gc[this_54]
	set missionKey_2 = GamecacheBuffer_parentKey[this_54]
	set i_4 = GamecacheBuffer_readIndex[this_54]
	if i_4 >= GamecacheKeys_count then
		call error("Network: trying to get invalid GC key")
	endif
	set GamecacheBuffer_readBooleantempReturn = GetStoredBoolean(this_56, missionKey_2, GamecacheKeys_keys[i_4])
	set this_55 = null
	set this_56 = null
	return GamecacheBuffer_readBooleantempReturn
endfunction

function Network_closure_impl takes integer this_54 returns nothing
	local integer this_55 = Network_dataWriter[this_29[this_54]]
	local boolean GamecacheBuffer_GamecacheBuffer_readBoolean_result = GamecacheBuffer_readBoolean(Network_gcBooleanBuffer[this_29[this_54]])
	call SaveBoolean(Table_ht, HashWriter_data[this_55], HashWriter_booleanWriteIndex[this_55], GamecacheBuffer_GamecacheBuffer_readBoolean_result)
	set HashWriter_booleanWriteIndex[this_55] = HashWriter_booleanWriteIndex[this_55] + 1
	set Network_counters_booleans[this_29[this_54]] = Network_counters_booleans[this_29[this_54]] + 1
endfunction

function GamecacheBuffer_readReal takes integer this_54 returns real
	local gamecache this_55
	local string missionKey
	local integer i_3
	local gamecache this_56
	local string missionKey_2
	local integer i_4
	local real GamecacheBuffer_readRealtempReturn
	if GamecacheBuffer_readIndex[this_54] + 1 >= GamecacheKeys_count then
		call error("GamecacheBuffer: trying to read out of available keys bounds")
	endif
	set GamecacheBuffer_readIndex[this_54] = GamecacheBuffer_readIndex[this_54] + 1
	if GamecacheBuffer_bufferType[this_54] != 1 then
		call error("GamecacheBuffer: invalid buffer usage - mismatched type")
	endif
	set this_55 = GamecacheBuffer_gc[this_54]
	set missionKey = GamecacheBuffer_parentKey[this_54]
	set i_3 = GamecacheBuffer_readIndex[this_54]
	if i_3 >= GamecacheKeys_count then
		call error("Network: trying to get invalid GC key")
	endif
	if  not HaveStoredReal(this_55, missionKey, GamecacheKeys_keys[i_3]) then
		call error("GamecacheBuffer: trying to read non-present real #" + I2S(GamecacheBuffer_readIndex[this_54]))
	endif
	set this_56 = GamecacheBuffer_gc[this_54]
	set missionKey_2 = GamecacheBuffer_parentKey[this_54]
	set i_4 = GamecacheBuffer_readIndex[this_54]
	if i_4 >= GamecacheKeys_count then
		call error("Network: trying to get invalid GC key")
	endif
	set GamecacheBuffer_readRealtempReturn = GetStoredReal(this_56, missionKey_2, GamecacheKeys_keys[i_4])
	set this_55 = null
	set this_56 = null
	return GamecacheBuffer_readRealtempReturn
endfunction

function Network_closure_impl_2 takes integer this_54 returns nothing
	local integer this_55 = Network_dataWriter[this_25[this_54]]
	local real GamecacheBuffer_GamecacheBuffer_readReal_result = GamecacheBuffer_readReal(Network_gcRealBuffer[this_25[this_54]])
	call SaveReal(Table_ht, HashWriter_data[this_55], HashWriter_realWriteIndex[this_55], GamecacheBuffer_GamecacheBuffer_readReal_result)
	set HashWriter_realWriteIndex[this_55] = HashWriter_realWriteIndex[this_55] + 1
	set Network_counters_reals[this_25[this_54]] = Network_counters_reals[this_25[this_54]] + 1
endfunction

function GamecacheBuffer_writeInt takes integer this_54, integer value_2 returns nothing
	local gamecache this_55
	local string missionKey
	local integer i_3
	if GamecacheBuffer_writeIndex[this_54] + 1 >= GamecacheKeys_count then
		call error("GamecacheBuffer: trying to write out of available keys bounds")
	endif
	set GamecacheBuffer_writeIndex[this_54] = GamecacheBuffer_writeIndex[this_54] + 1
	if GamecacheBuffer_bufferType[this_54] != 0 then
		call error("GamecacheBuffer: invalid buffer usage - mismatched type")
	endif
	set this_55 = GamecacheBuffer_gc[this_54]
	set missionKey = GamecacheBuffer_parentKey[this_54]
	set i_3 = GamecacheBuffer_writeIndex[this_54]
	if i_3 >= GamecacheKeys_count then
		call error("Network: trying to get invalid GC key")
	endif
	call StoreInteger(this_55, missionKey, GamecacheKeys_keys[i_3], value_2)
	set this_55 = null
endfunction

function Network_closure_impl_3 takes integer this_54 returns nothing
	local integer this_55 = Network_gcStringBuffer[this_31[this_54]]
	local integer this_56 = StringEncoder_outputReader[Network_stringEncoder[this_31[this_54]]]
	local integer Table_Table_loadInt_result = LoadInteger(Table_ht, HashReader_data[this_56], HashReader_integerReadIndex[this_56])
	set HashReader_integerReadIndex[this_56] = HashReader_integerReadIndex[this_56] + 1
	call GamecacheBuffer_writeInt(this_55, Table_Table_loadInt_result)
	set Network_counters_asciiInts[this_31[this_54]] = Network_counters_asciiInts[this_31[this_54]] + 1
endfunction

function GamecacheBuffer_readInt takes integer this_54 returns integer
	local gamecache this_55
	local string missionKey
	local integer i_3
	local gamecache this_56
	local string missionKey_2
	local integer i_4
	local integer GamecacheBuffer_readInttempReturn
	if GamecacheBuffer_readIndex[this_54] + 1 >= GamecacheKeys_count then
		call error("GamecacheBuffer: trying to read out of available keys bounds")
	endif
	set GamecacheBuffer_readIndex[this_54] = GamecacheBuffer_readIndex[this_54] + 1
	if GamecacheBuffer_bufferType[this_54] != 0 then
		call error("GamecacheBuffer: invalid buffer usage - mismatched type")
	endif
	set this_55 = GamecacheBuffer_gc[this_54]
	set missionKey = GamecacheBuffer_parentKey[this_54]
	set i_3 = GamecacheBuffer_readIndex[this_54]
	if i_3 >= GamecacheKeys_count then
		call error("Network: trying to get invalid GC key")
	endif
	if  not HaveStoredInteger(this_55, missionKey, GamecacheKeys_keys[i_3]) then
		call error("GamecacheBuffer: trying to read non-present int #" + I2S(GamecacheBuffer_readIndex[this_54]))
	endif
	set this_56 = GamecacheBuffer_gc[this_54]
	set missionKey_2 = GamecacheBuffer_parentKey[this_54]
	set i_4 = GamecacheBuffer_readIndex[this_54]
	if i_4 >= GamecacheKeys_count then
		call error("Network: trying to get invalid GC key")
	endif
	set GamecacheBuffer_readInttempReturn = GetStoredInteger(this_56, missionKey_2, GamecacheKeys_keys[i_4])
	set this_55 = null
	set this_56 = null
	return GamecacheBuffer_readInttempReturn
endfunction

function Network_closure_impl_4 takes integer this_54 returns nothing
	local integer this_55 = Network_stringEncoder[this_33[this_54]]
	local integer GamecacheBuffer_GamecacheBuffer_readInt_result = GamecacheBuffer_readInt(Network_gcStringBuffer[this_33[this_54]])
	local integer this_56 = StringEncoder_inputWriter[this_55]
	call SaveInteger(Table_ht, HashWriter_data[this_56], HashWriter_integerWriteIndex[this_56], GamecacheBuffer_GamecacheBuffer_readInt_result)
	set HashWriter_integerWriteIndex[this_56] = HashWriter_integerWriteIndex[this_56] + 1
	set Network_counters_asciiInts[this_33[this_54]] = Network_counters_asciiInts[this_33[this_54]] + 1
endfunction

function GamecacheBuffer_writeBoolean takes integer this_54, boolean value_2 returns nothing
	local gamecache this_55
	local string missionKey
	local integer i_3
	if GamecacheBuffer_writeIndex[this_54] + 1 >= GamecacheKeys_count then
		call error("GamecacheBuffer: trying to write out of available keys bounds")
	endif
	set GamecacheBuffer_writeIndex[this_54] = GamecacheBuffer_writeIndex[this_54] + 1
	if GamecacheBuffer_bufferType[this_54] != 2 then
		call error("GamecacheBuffer: invalid buffer usage - mismatched type")
	endif
	set this_55 = GamecacheBuffer_gc[this_54]
	set missionKey = GamecacheBuffer_parentKey[this_54]
	set i_3 = GamecacheBuffer_writeIndex[this_54]
	if i_3 >= GamecacheKeys_count then
		call error("Network: trying to get invalid GC key")
	endif
	call StoreBoolean(this_55, missionKey, GamecacheKeys_keys[i_3], value_2)
	set this_55 = null
endfunction

function Network_closure_impl_5 takes integer this_54 returns nothing
	local integer this_55 = Network_gcBooleanBuffer[this_27[this_54]]
	local integer this_56 = Network_dataReader[this_27[this_54]]
	local boolean Table_Table_loadBoolean_result = LoadBoolean(Table_ht, HashReader_data[this_56], HashReader_booleanReadIndex[this_56])
	set HashReader_booleanReadIndex[this_56] = HashReader_booleanReadIndex[this_56] + 1
	call GamecacheBuffer_writeBoolean(this_55, Table_Table_loadBoolean_result)
	set Network_counters_booleans[this_27[this_54]] = Network_counters_booleans[this_27[this_54]] + 1
endfunction

function Network_closure_impl_6 takes integer this_54 returns nothing
	local integer this_55 = Network_dataWriter[this_37[this_54]]
	local string HashData_HashReader_readString_result = HashReader_readString(StringEncoder_outputReader[Network_stringEncoder[this_37[this_54]]])
	call SaveStr(Table_ht, HashWriter_data[this_55], HashWriter_stringWriteIndex[this_55], HashData_HashReader_readString_result)
	set HashWriter_stringWriteIndex[this_55] = HashWriter_stringWriteIndex[this_55] + 1
endfunction

function Network_closure_impl_7 takes integer this_54 returns nothing
	local integer this_55 = Network_dataWriter[this_21[this_54]]
	local integer GamecacheBuffer_GamecacheBuffer_readInt_result = GamecacheBuffer_readInt(Network_gcIntBuffer[this_21[this_54]])
	call SaveInteger(Table_ht, HashWriter_data[this_55], HashWriter_integerWriteIndex[this_55], GamecacheBuffer_GamecacheBuffer_readInt_result)
	set HashWriter_integerWriteIndex[this_55] = HashWriter_integerWriteIndex[this_55] + 1
	set Network_counters_ints[this_21[this_54]] = Network_counters_ints[this_21[this_54]] + 1
endfunction

function GamecacheBuffer_writeReal takes integer this_54, real value_2 returns nothing
	local gamecache this_55
	local string missionKey
	local integer i_3
	if GamecacheBuffer_writeIndex[this_54] + 1 >= GamecacheKeys_count then
		call error("GamecacheBuffer: trying to write out of available keys bounds")
	endif
	set GamecacheBuffer_writeIndex[this_54] = GamecacheBuffer_writeIndex[this_54] + 1
	if GamecacheBuffer_bufferType[this_54] != 1 then
		call error("GamecacheBuffer: invalid buffer usage - mismatched type")
	endif
	set this_55 = GamecacheBuffer_gc[this_54]
	set missionKey = GamecacheBuffer_parentKey[this_54]
	set i_3 = GamecacheBuffer_writeIndex[this_54]
	if i_3 >= GamecacheKeys_count then
		call error("Network: trying to get invalid GC key")
	endif
	call StoreReal(this_55, missionKey, GamecacheKeys_keys[i_3], value_2)
	set this_55 = null
endfunction

function Network_closure_impl_8 takes integer this_54 returns nothing
	local integer this_55 = Network_gcRealBuffer[this_23[this_54]]
	local integer this_56 = Network_dataReader[this_23[this_54]]
	local real Table_Table_loadReal_result = LoadReal(Table_ht, HashReader_data[this_56], HashReader_realReadIndex[this_56])
	set HashReader_realReadIndex[this_56] = HashReader_realReadIndex[this_56] + 1
	call GamecacheBuffer_writeReal(this_55, Table_Table_loadReal_result)
	set Network_counters_reals[this_23[this_54]] = Network_counters_reals[this_23[this_54]] + 1
endfunction

function Network_closure_impl_9 takes integer this_54 returns nothing
	local integer this_55 = Network_stringEncoder[this_17[this_54]]
	local string HashData_HashReader_readString_result = HashReader_readString(Network_dataReader[this_17[this_54]])
	local integer this_56 = StringEncoder_inputWriter[this_55]
	call SaveStr(Table_ht, HashWriter_data[this_56], HashWriter_stringWriteIndex[this_56], HashData_HashReader_readString_result)
	set HashWriter_stringWriteIndex[this_56] = HashWriter_stringWriteIndex[this_56] + 1
endfunction

function Network_closure_impl_10 takes integer this_54 returns nothing
	local integer this_55 = Network_gcIntBuffer[this_19[this_54]]
	local integer this_56 = Network_dataReader[this_19[this_54]]
	local integer Table_Table_loadInt_result = LoadInteger(Table_ht, HashReader_data[this_56], HashReader_integerReadIndex[this_56])
	set HashReader_integerReadIndex[this_56] = HashReader_integerReadIndex[this_56] + 1
	call GamecacheBuffer_writeInt(this_55, Table_Table_loadInt_result)
	set Network_counters_ints[this_19[this_54]] = Network_counters_ints[this_19[this_54]] + 1
endfunction

function getCharFromIndex takes integer i_3 returns string
	if i_3 > 95 then
		call error("Network: trying to get invalid character from index '" + I2S(i_3) + "'")
	endif
	return SubString(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", i_3, i_3 + 1)
endfunction

function StringEncoder_closure_impl takes integer this_54 returns nothing
	local string temp = StringEncoder_currentValue[this_46[this_54]]
	local integer this_55 = StringEncoder_inputReader[this_46[this_54]]
	local integer Table_Table_loadInt_result = LoadInteger(Table_ht, HashReader_data[this_55], HashReader_integerReadIndex[this_55])
	set HashReader_integerReadIndex[this_55] = HashReader_integerReadIndex[this_55] + 1
	set StringEncoder_currentValue[this_46[this_54]] = temp + getCharFromIndex(Table_Table_loadInt_result)
	set StringEncoder_counter[this_46[this_54]] = StringEncoder_counter[this_46[this_54]] + 1
endfunction

function StringEncoder_decodeString takes integer this_54 returns string
	local integer this_55
	local integer Table_Table_loadInt_result
	local integer this_56
	local integer this_57
	set StringEncoder_currentValue[this_54] = ""
	set this_55 = StringEncoder_inputReader[this_54]
	set Table_Table_loadInt_result = LoadInteger(Table_ht, HashReader_data[this_55], HashReader_integerReadIndex[this_55])
	set HashReader_integerReadIndex[this_55] = HashReader_integerReadIndex[this_55] + 1
	set StringEncoder_counter[this_54] = 0
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_56 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_56] = 886
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_56 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_56] = 886
	endif
	set this_45[this_56] = this_54
	set length_2[this_56] = Table_Table_loadInt_result
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_57 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_57] = 862
		else
			call error("Out of memory: Could not create Closure.")
			set this_57 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_57 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_57] = 862
	endif
	set this_46[this_57] = this_54
	call executeWhile(256, this_56, this_57)
	return StringEncoder_currentValue[this_54]
endfunction

function StringEncoder_closure_impl_2 takes integer this_54 returns nothing
	local integer this_55 = StringEncoder_outputWriter[this_50[this_54]]
	local string StringEncoder_StringEncoder_decodeString_result = StringEncoder_decodeString(this_50[this_54])
	call SaveStr(Table_ht, HashWriter_data[this_55], HashWriter_stringWriteIndex[this_55], StringEncoder_StringEncoder_decodeString_result)
	set HashWriter_stringWriteIndex[this_55] = HashWriter_stringWriteIndex[this_55] + 1
endfunction

function getIndexFromChar takes string c returns integer
	local integer hash
	local boolean andLeft
	if StringCase(c, true) == c then
		set andLeft = StringCase(c, false) != c
	else
		set andLeft = false
	endif
	if andLeft or c == "/" then
		set hash = StringHash("00" + c)
	else
		set hash = StringHash(c)
	endif
	if  not HaveSavedInteger(Table_ht, StringEncoder_alphabetLookup, hash) then
		call error("Network: trying to get index from invalid character '" + c + "'")
	endif
	return LoadInteger(Table_ht, StringEncoder_alphabetLookup, hash)
endfunction

function StringEncoder_closure_impl_3 takes integer this_54 returns nothing
	local integer this_55 = StringEncoder_outputWriter[this_44[this_54]]
	local integer index = StringEncoder_counter[this_44[this_54]]
	local integer number = getIndexFromChar(SubString(value[this_54], index, index + 1))
	call SaveInteger(Table_ht, HashWriter_data[this_55], HashWriter_integerWriteIndex[this_55], number)
	set HashWriter_integerWriteIndex[this_55] = HashWriter_integerWriteIndex[this_55] + 1
	set StringEncoder_counter[this_44[this_54]] = StringEncoder_counter[this_44[this_54]] + 1
endfunction

function StringEncoder_encodeString takes integer this_54, string value_2 returns nothing
	local integer length_3 = StringLength(value_2)
	local integer this_55
	local integer this_56
	local integer this_57
	set StringEncoder_counter[this_54] = 0
	set this_55 = StringEncoder_outputWriter[this_54]
	call SaveInteger(Table_ht, HashWriter_data[this_55], HashWriter_integerWriteIndex[this_55], length_3)
	set HashWriter_integerWriteIndex[this_55] = HashWriter_integerWriteIndex[this_55] + 1
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_56 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_56] = 885
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_56 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_56] = 885
	endif
	set this_43[this_56] = this_54
	set length[this_56] = length_3
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_57 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_57] = 861
		else
			call error("Out of memory: Could not create Closure.")
			set this_57 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_57 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_57] = 861
	endif
	set this_44[this_57] = this_54
	set value[this_57] = value_2
	call executeWhile(256, this_56, this_57)
endfunction

function tile_getType takes integer this_id returns integer
	return GetTerrainType(ModuloInteger(this_id, TerrainUtils_TILES_X) * 128. + MapBounds_boundMin_x, this_id / TerrainUtils_TILES_X * 128. + MapBounds_boundMin_y)
endfunction

function TileData_closure_impl takes integer this_54 returns nothing
	local integer this_55 = iter_10[this_54]
	local integer x = RectTileIterator_currentX[this_55]
	local integer y = RectTileIterator_currentY[this_55]
	local integer id
	local integer index
	local integer Table_Table_loadInt_result
	local integer this_56
	local integer entry
	local string temp
	local integer tuple_temp
	set RectTileIterator_currentX[this_55] = RectTileIterator_currentX[this_55] + 1
	if RectTileIterator_currentX[this_55] > RectTileIterator_maxX[this_55] then
		set RectTileIterator_currentX[this_55] = RectTileIterator_minX[this_55]
		set RectTileIterator_currentY[this_55] = RectTileIterator_currentY[this_55] + 1
	endif
	set id = tile_getType(tile(x, y))
	if  not HaveSavedInteger(Table_ht, tileMapInverted[this_54], id) then
		set index = TileData_currentNewChar[this_52[this_54]]
		set tuple_temp = char(SubString("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSUTVWXYZ", index, index + 1))
		call dispatch_HashMap_HashMap_HashMap_put(tileMapInverted[this_54], id, tuple_temp)
		call IterableMap_put(TileData_tileMap[this_52[this_54]], tuple_temp, id)
		set TileData_currentNewChar[this_52[this_54]] = TileData_currentNewChar[this_52[this_54]] + 1
	endif
	set temp = TerrainCell_data[TileData_currentCell[this_52[this_54]]]
	set Table_Table_loadInt_result = LoadInteger(Table_ht, tileMapInverted[this_54], id)
	set TerrainCell_data[TileData_currentCell[this_52[this_54]]] = temp + char_toString(Table_Table_loadInt_result)
	if StringLength(TerrainCell_data[TileData_currentCell[this_52[this_54]]]) >= 1023 then
		set this_56 = TileData_cellList[this_52[this_54]]
		set entry = new_LLEntry(TileData_currentCell[this_52[this_54]], LLEntry_prev[LinkedList_dummy[this_56]], LinkedList_dummy[this_56])
		set LLEntry_next[LLEntry_prev[LinkedList_dummy[this_56]]] = entry
		set LLEntry_prev[LinkedList_dummy[this_56]] = entry
		set LinkedList_size[this_56] = LinkedList_size[this_56] + 1
		set TileData_currentCell[this_52[this_54]] = new_TerrainCell_2()
	endif
endfunction

function TerrainCell_next takes integer this_54, integer tileMap returns integer
	local integer Table_Table_loadInt_result
	local integer index
	if TerrainCell_current[this_54] >= StringLength(TerrainCell_data[this_54]) then
		return 0
	endif
	set index = TerrainCell_current[this_54]
	set Table_Table_loadInt_result = LoadInteger(Table_ht, tileMap, char(SubString(TerrainCell_data[this_54], index, index + 1)))
	set TerrainCell_current[this_54] = TerrainCell_current[this_54] + 1
	return Table_Table_loadInt_result
endfunction

function TileData_closure_impl_2 takes integer this_54 returns nothing
	local integer TileData_TerrainCell_next_result = TerrainCell_next(LLEntry_elem[LLEntry_prev[LinkedList_dummy[TileData_cellList[this_51[this_54]]]]], TileData_tileMap[this_51[this_54]])
	local integer this_55
	local integer top
	local integer result_2
	local integer this_56
	local integer x
	local integer y
	if TileData_TerrainCell_next_result == 0 then
		set this_55 = TileData_cellList[this_51[this_54]]
		set top = LLEntry_prev[LinkedList_dummy[this_55]]
		set result_2 = 0
		if top != LinkedList_dummy[this_55] then
			set result_2 = LLEntry_elem[top]
			set LLEntry_next[LLEntry_prev[top]] = LLEntry_next[top]
			set LLEntry_prev[LLEntry_next[top]] = LLEntry_prev[top]
			if LLEntry_typeId[top] == 0 then
				call error("Double free: object of type LLEntry")
			else
				set LLEntry_nextFree[LLEntry_firstFree] = top
				set LLEntry_firstFree = LLEntry_firstFree + 1
				set LLEntry_typeId[top] = 0
			endif
			set LinkedList_size[this_55] = LinkedList_size[this_55] - 1
		endif
		if TerrainCell_typeId[result_2] == 0 then
			call error("Double free: object of type TerrainCell")
		else
			set TerrainCell_nextFree[TerrainCell_firstFree] = result_2
			set TerrainCell_firstFree = TerrainCell_firstFree + 1
			set TerrainCell_typeId[result_2] = 0
		endif
		if LinkedList_size[TileData_cellList[this_51[this_54]]] == 0 then
			set RectTileIterator_closed[iter_8[this_54]] = true
		endif
	else
		set this_56 = iter_8[this_54]
		set x = RectTileIterator_currentX[this_56]
		set y = RectTileIterator_currentY[this_56]
		set RectTileIterator_currentX[this_56] = RectTileIterator_currentX[this_56] + 1
		if RectTileIterator_currentX[this_56] > RectTileIterator_maxX[this_56] then
			set RectTileIterator_currentX[this_56] = RectTileIterator_minX[this_56]
			set RectTileIterator_currentY[this_56] = RectTileIterator_currentY[this_56] + 1
		endif
		call tile_setType(tile(x, y), TileData_TerrainCell_next_result)
	endif
endfunction

function XorEncryptor_closure_impl takes integer this_54 returns nothing
	local integer this_55 = encoder[this_54]
	local integer ByteBuffer_ByteBuffer_readByteInternal_result = ByteBuffer_readByteInternal(Base64Decoder_byteBuffer[decoder[this_54]])
	local integer other = XorEncryptor_KEY[XorEncryptor_keyPos]
	call ByteBuffer_writeByteInternal(Base64Encoder_byteBuffer[this_55], BitwiseInit_xorData[BitwiseInit_lbyte[ByteBuffer_ByteBuffer_readByteInternal_result] * 16 + BitwiseInit_lbyte[other]] * 16 + BitwiseInit_xorData[BitwiseInit_rbyte[ByteBuffer_ByteBuffer_readByteInternal_result] * 16 + BitwiseInit_rbyte[other]])
	set XorEncryptor_keyPos = XorEncryptor_keyPos + 1
	set XorEncryptor_counter = XorEncryptor_counter + 1
	if XorEncryptor_keyPos >= 31 then
		set XorEncryptor_keyPos = 0
	endif
endfunction

function dispatch_SynchronizerFunction_GamecacheBuffer_SynchronizerFunction_sync takes integer this_54, string key returns nothing
	if SynchronizerFunction_typeId[this_54] <= 980 then
		if SynchronizerFunction_typeId[this_54] <= 979 then
			call SyncStoredInteger(GamecacheBuffer_gc[this_7[this_54]], GamecacheBuffer_parentKey[this_7[this_54]], key)
		else
			call SyncStoredReal(GamecacheBuffer_gc[this_8[this_54]], GamecacheBuffer_parentKey[this_8[this_54]], key)
		endif
	else
		call SyncStoredBoolean(GamecacheBuffer_gc[this_9[this_54]], GamecacheBuffer_parentKey[this_9[this_54]], key)
	endif
endfunction

function dispatch_LimitedExecuteAction_Execute_LimitedExecuteAction_run takes integer this_54 returns nothing
	local integer i_3
	local integer temp
	if LimitedExecuteAction_typeId[this_54] <= 856 then
		if LimitedExecuteAction_typeId[this_54] <= 850 then
			if LimitedExecuteAction_typeId[this_54] <= 847 then
				if LimitedExecuteAction_typeId[this_54] <= 846 then
					if LimitedExecuteAction_typeId[this_54] <= 845 then
						call Base64Decoder_next3Bytes(this[this_54])
						set Base64_loopCounter = Base64_loopCounter + 1
					else
						call Base64Encoder_encode3(this_2[this_54])
						set Base64_loopCounter = Base64_loopCounter + 1
					endif
				else
					set temp = synchronizer[this_54]
					set i_3 = GamecacheBuffer_syncCounter[this_11[this_54]]
					if i_3 >= GamecacheKeys_count then
						call error("Network: trying to get invalid GC key")
					endif
					call dispatch_SynchronizerFunction_GamecacheBuffer_SynchronizerFunction_sync(temp, GamecacheKeys_keys[i_3])
					set GamecacheBuffer_syncCounter[this_11[this_54]] = GamecacheBuffer_syncCounter[this_11[this_54]] + 1
				endif
			elseif LimitedExecuteAction_typeId[this_54] <= 849 then
				if LimitedExecuteAction_typeId[this_54] <= 848 then
					call HeightData_closure_impl(this_54)
				else
					call HeightData_closure_impl_2(this_54)
				endif
			else
				call HeightField_closure_impl(this_54)
			endif
		elseif LimitedExecuteAction_typeId[this_54] <= 853 then
			if LimitedExecuteAction_typeId[this_54] <= 852 then
				if LimitedExecuteAction_typeId[this_54] <= 851 then
					call Network_closure_impl_9(this_54)
				else
					call Network_closure_impl_10(this_54)
				endif
			else
				call Network_closure_impl_7(this_54)
			endif
		elseif LimitedExecuteAction_typeId[this_54] <= 855 then
			if LimitedExecuteAction_typeId[this_54] <= 854 then
				call Network_closure_impl_8(this_54)
			else
				call Network_closure_impl_2(this_54)
			endif
		else
			call Network_closure_impl_5(this_54)
		endif
	elseif LimitedExecuteAction_typeId[this_54] <= 862 then
		if LimitedExecuteAction_typeId[this_54] <= 859 then
			if LimitedExecuteAction_typeId[this_54] <= 858 then
				if LimitedExecuteAction_typeId[this_54] <= 857 then
					call Network_closure_impl(this_54)
				else
					call Network_closure_impl_3(this_54)
				endif
			else
				call Network_closure_impl_4(this_54)
			endif
		elseif LimitedExecuteAction_typeId[this_54] <= 861 then
			if LimitedExecuteAction_typeId[this_54] <= 860 then
				call Network_closure_impl_6(this_54)
			else
				call StringEncoder_closure_impl_3(this_54)
			endif
		else
			call StringEncoder_closure_impl(this_54)
		endif
	elseif LimitedExecuteAction_typeId[this_54] <= 865 then
		if LimitedExecuteAction_typeId[this_54] <= 864 then
			if LimitedExecuteAction_typeId[this_54] <= 863 then
				call StringEncoder_encodeString(this_48[this_54], HashReader_readString(StringEncoder_inputReader[this_48[this_54]]))
			else
				call StringEncoder_closure_impl_2(this_54)
			endif
		else
			call TileData_closure_impl_2(this_54)
		endif
	elseif LimitedExecuteAction_typeId[this_54] <= 866 then
		call TileData_closure_impl(this_54)
	else
		call XorEncryptor_closure_impl(this_54)
	endif
endfunction

function dispatch_LimitedExecuteCondition_Execute_LimitedExecuteCondition_check takes integer this_54 returns boolean
	local boolean Execute_LimitedExecuteCondition_check_result
	local integer this_55
	local integer this_56
	local integer this_57
	local integer this_58
	local integer this_59
	local integer this_60
	local integer this_61
	local integer this_62
	local integer this_63
	local boolean andLeft
	local boolean andLeft_2
	local boolean andLeft_3
	local boolean andLeft_4
	local boolean andLeft_5
	local boolean andLeft_6
	local boolean andLeft_7
	local boolean andLeft_8
	if LimitedExecuteCondition_typeId[this_54] <= 880 then
		if LimitedExecuteCondition_typeId[this_54] <= 874 then
			if LimitedExecuteCondition_typeId[this_54] <= 871 then
				if LimitedExecuteCondition_typeId[this_54] <= 870 then
					set Execute_LimitedExecuteCondition_check_result = Base64_loopCounter <= Base64_loopActions
				else
					set Execute_LimitedExecuteCondition_check_result = GamecacheBuffer_syncCounter[this_10[this_54]] <= GamecacheBuffer_writeIndex[this_10[this_54]]
				endif
			elseif LimitedExecuteCondition_typeId[this_54] <= 873 then
				if LimitedExecuteCondition_typeId[this_54] <= 872 then
					set this_55 = iter[this_54]
					set Execute_LimitedExecuteCondition_check_result = ( not RectTileIterator_closed[this_55]) and RectTileIterator_currentY[this_55] <= RectTileIterator_maxY[this_55]
				else
					set this_56 = iter_3[this_54]
					set Execute_LimitedExecuteCondition_check_result = ( not RectTileIterator_closed[this_56]) and RectTileIterator_currentY[this_56] <= RectTileIterator_maxY[this_56]
				endif
			else
				set this_57 = iter_5[this_54]
				set Execute_LimitedExecuteCondition_check_result = ( not RectTileIterator_closed[this_57]) and RectTileIterator_currentY[this_57] <= RectTileIterator_maxY[this_57]
			endif
		elseif LimitedExecuteCondition_typeId[this_54] <= 877 then
			if LimitedExecuteCondition_typeId[this_54] <= 876 then
				if LimitedExecuteCondition_typeId[this_54] <= 875 then
					set this_58 = Network_dataReader[this_16[this_54]]
					set Execute_LimitedExecuteCondition_check_result = HashReader_stringCount[this_58] > HashReader_stringReadIndex[this_58]
				else
					if Network_counters_ints[this_18[this_54]] < Network_meta_ints[this_18[this_54]] then
						set andLeft = GamecacheKeys_count - GamecacheBuffer_writeIndex[Network_gcIntBuffer[this_18[this_54]]] - 1 > 0
					else
						set andLeft = false
					endif
					set Execute_LimitedExecuteCondition_check_result = andLeft
				endif
			else
				if Network_counters_ints[this_20[this_54]] < Network_meta_ints[this_20[this_54]] then
					set andLeft_2 = GamecacheKeys_count - GamecacheBuffer_readIndex[Network_gcIntBuffer[this_20[this_54]]] - 1 > 0
				else
					set andLeft_2 = false
				endif
				set Execute_LimitedExecuteCondition_check_result = andLeft_2
			endif
		elseif LimitedExecuteCondition_typeId[this_54] <= 879 then
			if LimitedExecuteCondition_typeId[this_54] <= 878 then
				if Network_counters_reals[this_22[this_54]] < Network_meta_reals[this_22[this_54]] then
					set andLeft_3 = GamecacheKeys_count - GamecacheBuffer_writeIndex[Network_gcRealBuffer[this_22[this_54]]] - 1 > 0
				else
					set andLeft_3 = false
				endif
				set Execute_LimitedExecuteCondition_check_result = andLeft_3
			else
				if Network_counters_reals[this_24[this_54]] < Network_meta_reals[this_24[this_54]] then
					set andLeft_4 = GamecacheKeys_count - GamecacheBuffer_readIndex[Network_gcRealBuffer[this_24[this_54]]] - 1 > 0
				else
					set andLeft_4 = false
				endif
				set Execute_LimitedExecuteCondition_check_result = andLeft_4
			endif
		else
			if Network_counters_booleans[this_26[this_54]] < Network_meta_booleans[this_26[this_54]] then
				set andLeft_5 = GamecacheKeys_count - GamecacheBuffer_writeIndex[Network_gcBooleanBuffer[this_26[this_54]]] - 1 > 0
			else
				set andLeft_5 = false
			endif
			set Execute_LimitedExecuteCondition_check_result = andLeft_5
		endif
	elseif LimitedExecuteCondition_typeId[this_54] <= 886 then
		if LimitedExecuteCondition_typeId[this_54] <= 883 then
			if LimitedExecuteCondition_typeId[this_54] <= 882 then
				if LimitedExecuteCondition_typeId[this_54] <= 881 then
					if Network_counters_booleans[this_28[this_54]] < Network_meta_booleans[this_28[this_54]] then
						set andLeft_6 = GamecacheKeys_count - GamecacheBuffer_readIndex[Network_gcBooleanBuffer[this_28[this_54]]] - 1 > 0
					else
						set andLeft_6 = false
					endif
					set Execute_LimitedExecuteCondition_check_result = andLeft_6
				else
					if Network_counters_asciiInts[this_30[this_54]] < Network_meta_asciiInts[this_30[this_54]] then
						set andLeft_7 = GamecacheKeys_count - GamecacheBuffer_writeIndex[Network_gcStringBuffer[this_30[this_54]]] - 1 > 0
					else
						set andLeft_7 = false
					endif
					set Execute_LimitedExecuteCondition_check_result = andLeft_7
				endif
			else
				if Network_counters_asciiInts[this_32[this_54]] < Network_meta_asciiInts[this_32[this_54]] then
					set andLeft_8 = GamecacheKeys_count - GamecacheBuffer_readIndex[Network_gcStringBuffer[this_32[this_54]]] - 1 > 0
				else
					set andLeft_8 = false
				endif
				set Execute_LimitedExecuteCondition_check_result = andLeft_8
			endif
		elseif LimitedExecuteCondition_typeId[this_54] <= 885 then
			if LimitedExecuteCondition_typeId[this_54] <= 884 then
				set this_59 = StringEncoder_outputReader[Network_stringEncoder[this_36[this_54]]]
				set Execute_LimitedExecuteCondition_check_result = HashReader_stringCount[this_59] > HashReader_stringReadIndex[this_59]
			else
				set Execute_LimitedExecuteCondition_check_result = StringEncoder_counter[this_43[this_54]] < length[this_54]
			endif
		else
			set Execute_LimitedExecuteCondition_check_result = StringEncoder_counter[this_45[this_54]] < length_2[this_54]
		endif
	elseif LimitedExecuteCondition_typeId[this_54] <= 889 then
		if LimitedExecuteCondition_typeId[this_54] <= 888 then
			if LimitedExecuteCondition_typeId[this_54] <= 887 then
				set this_60 = StringEncoder_inputReader[this_47[this_54]]
				set Execute_LimitedExecuteCondition_check_result = HashReader_stringCount[this_60] > HashReader_stringReadIndex[this_60]
			else
				set this_61 = StringEncoder_inputReader[this_49[this_54]]
				set Execute_LimitedExecuteCondition_check_result = HashReader_integerCount[this_61] > HashReader_integerReadIndex[this_61]
			endif
		else
			set this_62 = iter_7[this_54]
			set Execute_LimitedExecuteCondition_check_result = ( not RectTileIterator_closed[this_62]) and RectTileIterator_currentY[this_62] <= RectTileIterator_maxY[this_62]
		endif
	elseif LimitedExecuteCondition_typeId[this_54] <= 890 then
		set this_63 = iter_9[this_54]
		set Execute_LimitedExecuteCondition_check_result = ( not RectTileIterator_closed[this_63]) and RectTileIterator_currentY[this_63] <= RectTileIterator_maxY[this_63]
	else
		set Execute_LimitedExecuteCondition_check_result = XorEncryptor_counter < XorEncryptor_counterMax
	endif
	return Execute_LimitedExecuteCondition_check_result
endfunction

function Execute_closure_impl takes integer this_54 returns nothing
	local integer i_3 = 0
	loop
		exitwhen ( not dispatch_LimitedExecuteCondition_Execute_LimitedExecuteCondition_check(condition[this_54])) or i_3 >= resetCount[this_54]
		call dispatch_LimitedExecuteAction_Execute_LimitedExecuteAction_run(action[this_54])
		set i_3 = i_3 + 1
	endloop
	if dispatch_LimitedExecuteCondition_Execute_LimitedExecuteCondition_check(condition[this_54]) then
		call executeWhileInternal(resetCount[this_54], condition[this_54], action[this_54])
	endif
endfunction

function GamecacheKeys_precompute takes string prefix_2, integer depth_2 returns nothing
	local integer i_3
	local integer temp
	local integer i_4
	local integer temp_2
	local integer this_54
	if depth_2 == 0 then
		set i_3 = 0
		set temp = 68
		loop
			exitwhen i_3 > temp
			if GamecacheKeys_count == 100 then
				return
			endif
			set GamecacheKeys_keys[GamecacheKeys_count] = prefix_2 + SubString(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`{|}~", i_3, i_3 + 1)
			set GamecacheKeys_count = GamecacheKeys_count + 1
			set i_3 = i_3 + 1
		endloop
	else
		set i_4 = 0
		set temp_2 = 68
		loop
			exitwhen i_4 > temp_2
			if GamecacheKeys_count == 100 then
				return
			endif
			if ForForceCallback_firstFree == 0 then
				if ForForceCallback_maxIndex < 32768 then
					set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
					set this_54 = ForForceCallback_maxIndex
					set ForForceCallback_typeId[this_54] = 794
				else
					call error("Out of memory: Could not create Closure.")
					set this_54 = 0
				endif
			else
				set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
				set this_54 = ForForceCallback_nextFree[ForForceCallback_firstFree]
				set ForForceCallback_typeId[this_54] = 794
			endif
			set prefix[this_54] = prefix_2
			set i_2[this_54] = i_4
			set depth[this_54] = depth_2
			if  not try(this_54) then
				call error("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
			endif
			set i_4 = i_4 + 1
		endloop
	endif
endfunction

function new_CommandParser takes string input returns integer
	local integer this_54
	if BaseParser_firstFree == 0 then
		if BaseParser_maxIndex < 32768 then
			set BaseParser_maxIndex = BaseParser_maxIndex + 1
			set this_54 = BaseParser_maxIndex
			set BaseParser_typeId[this_54] = 640
		else
			call error("Out of memory: Could not create CommandParser.")
			set this_54 = 0
		endif
	else
		set BaseParser_firstFree = BaseParser_firstFree - 1
		set this_54 = BaseParser_nextFree[BaseParser_firstFree]
		set BaseParser_typeId[this_54] = 640
	endif
	set BaseParser_pos[this_54] = 0
	set BaseParser_input[this_54] = input
	return this_54
endfunction

function CommandContext_run takes integer this_54, string command returns nothing
	local integer parser = new_CommandParser(command)
	local integer this_55 = CommandContext_commandStack[this_54]
	local integer entry = new_LLEntry(parser, LLEntry_prev[LinkedList_dummy[this_55]], LinkedList_dummy[this_55])
	set LLEntry_next[LLEntry_prev[LinkedList_dummy[this_55]]] = entry
	set LLEntry_prev[LinkedList_dummy[this_55]] = entry
	set LinkedList_size[this_55] = LinkedList_size[this_55] + 1
	call CommandContext_next(this_54)
endfunction

function CommandExecutor_get takes player who_2 returns integer
	return LoadInteger(Table_ht, CommandExecutor_executors, GetPlayerId(who_2))
endfunction

function construct_CommandContext takes integer this_54, integer executor, integer scriptContext returns nothing
	set CommandContext_commandStack[this_54] = new_LinkedList()
	set CommandContext_isHalted[this_54] = false
	set CommandContext_executor[this_54] = executor
	set CommandContext_selection[this_54] = player_selectedUnitsList(CommandExecutor_owner[executor])
	set CommandContext_scriptContext[this_54] = scriptContext
endfunction

function new_CommandContext takes integer executor, integer scriptContext returns integer
	local integer this_54
	if CommandContext_firstFree == 0 then
		if CommandContext_maxIndex < 32768 then
			set CommandContext_maxIndex = CommandContext_maxIndex + 1
			set this_54 = CommandContext_maxIndex
			set CommandContext_typeId[this_54] = 731
		else
			call error("Out of memory: Could not create CommandContext.")
			set this_54 = 0
		endif
	else
		set CommandContext_firstFree = CommandContext_firstFree - 1
		set this_54 = CommandContext_nextFree[CommandContext_firstFree]
		set CommandContext_typeId[this_54] = 731
	endif
	call construct_CommandContext(this_54, executor, scriptContext)
	return this_54
endfunction

function CommandExecutor_newContext takes integer this_54 returns integer
	local integer context_3 = new_CommandContext(this_54, CommandExecutor_scriptContext[this_54])
	local integer this_55 = CommandExecutor_contextList[this_54]
	local integer entry = new_LLEntry(context_3, LLEntry_prev[LinkedList_dummy[this_55]], LinkedList_dummy[this_55])
	set LLEntry_next[LLEntry_prev[LinkedList_dummy[this_55]]] = entry
	set LLEntry_prev[LinkedList_dummy[this_55]] = entry
	set LinkedList_size[this_55] = LinkedList_size[this_55] + 1
	return context_3
endfunction

function MiscInit_closure_impl_4 takes integer this_54 returns nothing
	local integer this_55 = CommandExecutor_get(who[this_54])
	local string command = chatString[this_54]
	call CommandContext_run(CommandExecutor_newContext(this_55), command)
endfunction

function Network_closure_impl_11 takes integer this_54 returns nothing
	local integer this_55
	if Player_localPlayer == Network_sender[this_15[this_54]] then
		if ForForceCallback_firstFree == 0 then
			if ForForceCallback_maxIndex < 32768 then
				set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
				set this_55 = ForForceCallback_maxIndex
				set ForForceCallback_typeId[this_55] = 797
			else
				call error("Out of memory: Could not create Closure.")
				set this_55 = 0
			endif
		else
			set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
			set this_55 = ForForceCallback_nextFree[ForForceCallback_firstFree]
			set ForForceCallback_typeId[this_55] = 797
		endif
		set callback[this_55] = callback_2[this_54]
		set this_14[this_55] = this_15[this_54]
		if  not try(this_55) then
			call error("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
		endif
	endif
endfunction

function new_HashDataProxyReader takes integer proxyWriter, integer source returns integer
	local integer this_54
	if DataReader_firstFree == 0 then
		if DataReader_maxIndex < 32768 then
			set DataReader_maxIndex = DataReader_maxIndex + 1
			set this_54 = DataReader_maxIndex
			set DataReader_typeId[this_54] = 743
		else
			call error("Out of memory: Could not create HashDataProxyReader.")
			set this_54 = 0
		endif
	else
		set DataReader_firstFree = DataReader_firstFree - 1
		set this_54 = DataReader_nextFree[DataReader_firstFree]
		set DataReader_typeId[this_54] = 743
	endif
	set HashDataProxyReader_proxyWriter[this_54] = proxyWriter
	set HashDataProxyReader_source[this_54] = source
	return this_54
endfunction

function Persistable_closure_impl_2 takes integer this_54 returns nothing
	local integer proxyReader = new_HashDataProxyReader(Network_dataWriter[network[this_54]], reader[this_54])
	call dispatch_DataSerializable_DataInterfaces_DataSerializable_deserialize(this_40[this_54], proxyReader)
	if DataReader_typeId[proxyReader] == 0 then
		call error("Double free: object of type HashDataProxyReader")
	else
		set DataReader_nextFree[DataReader_firstFree] = proxyReader
		set DataReader_firstFree = DataReader_firstFree + 1
		set DataReader_typeId[proxyReader] = 0
	endif
endfunction

function new_Base64DataReader takes integer buffer returns integer
	local integer this_54
	if DataReader_firstFree == 0 then
		if DataReader_maxIndex < 32768 then
			set DataReader_maxIndex = DataReader_maxIndex + 1
			set this_54 = DataReader_maxIndex
			set DataReader_typeId[this_54] = 742
		else
			call error("Out of memory: Could not create Base64DataReader.")
			set this_54 = 0
		endif
	else
		set DataReader_firstFree = DataReader_firstFree - 1
		set this_54 = DataReader_nextFree[DataReader_firstFree]
		set DataReader_typeId[this_54] = 742
	endif
	set Base64DataReader_buffer[this_54] = buffer
	return this_54
endfunction

function Base64DataDecoder_decode takes integer this_54, integer data_2 returns integer
	local integer decoder_2
	local integer temp
	if DataDecoder_typeId[this_54] == 0 then
		call error("Double free: object of type Base64DataDecoder")
	else
		set DataDecoder_nextFree[DataDecoder_firstFree] = this_54
		set DataDecoder_firstFree = DataDecoder_firstFree + 1
		set DataDecoder_typeId[this_54] = 0
	endif
	set decoder_2 = new_Base64Decoder(data_2)
	call Base64Decoder_decode(decoder_2)
	set temp = Base64Decoder_byteBuffer[decoder_2]
	set Base64Decoder_byteBuffer[decoder_2] = 0
	call Base64Decoder_onDestroy(decoder_2)
	if Base64Decoder_typeId[decoder_2] == 0 then
		call error("Double free: object of type Base64Decoder")
	else
		set Base64Decoder_nextFree[Base64Decoder_firstFree] = decoder_2
		set Base64Decoder_firstFree = Base64Decoder_firstFree + 1
		set Base64Decoder_typeId[decoder_2] = 0
	endif
	return new_Base64DataReader(temp)
endfunction

function PacketReader_read takes nothing returns string
	local string data_2 = BlzGetAbilityTooltip(1096303700, PacketReader_currentPacket)
	if data_2 == "END OF FILE" then
		return ""
	endif
	set PacketReader_currentPacket = PacketReader_currentPacket + 1
	return data_2
endfunction

function PacketReader_readBigString takes nothing returns integer
	local integer bigStringData = new_LinkedList()
	local string data_2 = PacketReader_read()
	local integer entry
	local integer this_54
	loop
		exitwhen data_2 == ""
		set entry = new_LLEntry(new_BigStringElement(data_2), LLEntry_prev[LinkedList_dummy[bigStringData]], LinkedList_dummy[bigStringData])
		set LLEntry_next[LLEntry_prev[LinkedList_dummy[bigStringData]]] = entry
		set LLEntry_prev[LinkedList_dummy[bigStringData]] = entry
		set LinkedList_size[bigStringData] = LinkedList_size[bigStringData] + 1
		set data_2 = PacketReader_read()
	endloop
	if BigString_firstFree == 0 then
		if BigString_maxIndex < 32768 then
			set BigString_maxIndex = BigString_maxIndex + 1
			set this_54 = BigString_maxIndex
			set BigString_typeId[this_54] = 645
		else
			call error("Out of memory: Could not create BigString.")
			set this_54 = 0
		endif
	else
		set BigString_firstFree = BigString_firstFree - 1
		set this_54 = BigString_nextFree[BigString_firstFree]
		set BigString_typeId[this_54] = 645
	endif
	call construct_BigString2(this_54, bigStringData, 4096)
	return this_54
endfunction

function new_Base64DataDecoder takes nothing returns integer
	local integer this_54
	if DataDecoder_firstFree == 0 then
		if DataDecoder_maxIndex < 32768 then
			set DataDecoder_maxIndex = DataDecoder_maxIndex + 1
			set this_54 = DataDecoder_maxIndex
			set DataDecoder_typeId[this_54] = 738
		else
			call error("Out of memory: Could not create Base64DataDecoder.")
			set this_54 = 0
		endif
	else
		set DataDecoder_firstFree = DataDecoder_firstFree - 1
		set this_54 = DataDecoder_nextFree[DataDecoder_firstFree]
		set DataDecoder_typeId[this_54] = 738
	endif
	return this_54
endfunction

function Persistable_closure_impl_3 takes integer this_54 returns nothing
	local integer this_55 = this_39[this_54]
	local integer checksum
	local integer data_2
	local string Persistable_Persistable_getPath_result
	local integer Base64Data_Base64DataDecoder_decode_result
	local boolean andLeft
	if DataSerializable_typeId[this_55] <= 751 then
		set Persistable_Persistable_getPath_result = "yarp2/settings.pld"
	else
		set Persistable_Persistable_getPath_result = "yarp2/saves/" + RegionSaveData_name[this_55] + ".pld"
	endif
	call PacketReader_open(Persistable_Persistable_getPath_result)
	set checksum = S2I(PacketReader_read())
	set data_2 = PacketReader_readBigString()
	if checksum == 0 then
		set andLeft = true
	else
		set andLeft = checksum != BigString_checksum(data_2)
	endif
	if andLeft then
		call BigString_onDestroy(data_2)
		if BigString_typeId[data_2] == 0 then
			call error("Double free: object of type BigString")
		else
			set BigString_nextFree[BigString_firstFree] = data_2
			set BigString_firstFree = BigString_firstFree + 1
			set BigString_typeId[data_2] = 0
		endif
		call error("Persistable: checksum failed to validate")
	else
		if Persistable_middleware[this_39[this_54]] != 0 then
			set data_2 = transform(data_2)
		endif
		set Base64Data_Base64DataDecoder_decode_result = Base64DataDecoder_decode(new_Base64DataDecoder(), data_2)
		set Box_inner[readerBox[this_54]] = Base64Data_Base64DataDecoder_decode_result
	endif
endfunction

function TestCommands_closure_impl_22 takes integer this_54 returns nothing
	local integer this_55 = arguments[this_54]
	local integer tuple_temp = Niya_parse(Argument_asString(Arguments_get(this_55, 1), Arguments_context[this_55]))
	local string tuple_temp_2 = Niya_parse_return_error
	if tuple_temp_2 != null then
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., tuple_temp_2)
	else
		call cyc_Scripting_closure_impl(2, tuple_temp, CommandContext_scriptContext[context[this_54]], 0, 0)
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., R2S(tempReturn_real))
	endif
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "Done!")
endfunction

function TestCommands_closure_impl_23 takes integer this_54 returns nothing
	local integer this_55
	local integer this_56
	local integer this_57
	local integer this_58
	local integer this_59
	local integer this_60
	local integer this_61
	local integer this_62
	local integer this_63
	local integer this_64
	local integer this_65
	local integer this_66
	local integer this_67
	local integer this_68
	local integer this_69
	local integer this_70
	local integer this_71
	local integer this_72
	local integer this_73
	local integer this_74
	local integer this_75
	local integer this_76
	local integer this_77
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_55 = Command_maxIndex
			set Command_typeId[this_55] = 674
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_55 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_55] = 674
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("test"), this_55)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_56 = Command_maxIndex
			set Command_typeId[this_56] = 675
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_56 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_56] = 675
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("exec"), this_56)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_57 = Command_maxIndex
			set Command_typeId[this_57] = 680
		else
			call error("Out of memory: Could not create Closure.")
			set this_57 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_57 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_57] = 680
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("spawn"), this_57)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_58 = Command_maxIndex
			set Command_typeId[this_58] = 681
		else
			call error("Out of memory: Could not create Closure.")
			set this_58 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_58 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_58] = 681
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("n2"), this_58)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_59 = Command_maxIndex
			set Command_typeId[this_59] = 682
		else
			call error("Out of memory: Could not create Closure.")
			set this_59 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_59 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_59] = 682
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("loadme"), this_59)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_60 = Command_maxIndex
			set Command_typeId[this_60] = 683
		else
			call error("Out of memory: Could not create Closure.")
			set this_60 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_60 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_60] = 683
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("networkint"), this_60)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_61 = Command_maxIndex
			set Command_typeId[this_61] = 684
		else
			call error("Out of memory: Could not create Closure.")
			set this_61 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_61 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_61] = 684
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("gctest"), this_61)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_62 = Command_maxIndex
			set Command_typeId[this_62] = 685
		else
			call error("Out of memory: Could not create Closure.")
			set this_62 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_62 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_62] = 685
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("networkstring"), this_62)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_63 = Command_maxIndex
			set Command_typeId[this_63] = 686
		else
			call error("Out of memory: Could not create Closure.")
			set this_63 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_63 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_63] = 686
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("splittest"), this_63)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_64 = Command_maxIndex
			set Command_typeId[this_64] = 687
		else
			call error("Out of memory: Could not create Closure.")
			set this_64 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_64 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_64] = 687
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("centerfactor"), this_64)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_65 = Command_maxIndex
			set Command_typeId[this_65] = 688
		else
			call error("Out of memory: Could not create Closure.")
			set this_65 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_65 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_65] = 688
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("offset"), this_65)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_66 = Command_maxIndex
			set Command_typeId[this_66] = 689
		else
			call error("Out of memory: Could not create Closure.")
			set this_66 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_66 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_66] = 689
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("logtest"), this_66)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_54 = Command_maxIndex
			set Command_typeId[this_54] = 690
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_54 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_54] = 690
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("blend"), this_54)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_67 = Command_maxIndex
			set Command_typeId[this_67] = 691
		else
			call error("Out of memory: Could not create Closure.")
			set this_67 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_67 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_67] = 691
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("modulate"), this_67)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_68 = Command_maxIndex
			set Command_typeId[this_68] = 692
		else
			call error("Out of memory: Could not create Closure.")
			set this_68 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_68 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_68] = 692
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("time"), this_68)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_69 = Command_maxIndex
			set Command_typeId[this_69] = 693
		else
			call error("Out of memory: Could not create Closure.")
			set this_69 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_69 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_69] = 693
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("fail"), this_69)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_70 = Command_maxIndex
			set Command_typeId[this_70] = 694
		else
			call error("Out of memory: Could not create Closure.")
			set this_70 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_70 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_70] = 694
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("testnetwork"), this_70)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_71 = Command_maxIndex
			set Command_typeId[this_71] = 695
		else
			call error("Out of memory: Could not create Closure.")
			set this_71 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_71 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_71] = 695
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("getdata"), this_71)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_72 = Command_maxIndex
			set Command_typeId[this_72] = 696
		else
			call error("Out of memory: Could not create Closure.")
			set this_72 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_72 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_72] = 696
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("preloadtest"), this_72)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_73 = Command_maxIndex
			set Command_typeId[this_73] = 697
		else
			call error("Out of memory: Could not create Closure.")
			set this_73 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_73 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_73] = 697
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("iotest"), this_73)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_74 = Command_maxIndex
			set Command_typeId[this_74] = 698
		else
			call error("Out of memory: Could not create Closure.")
			set this_74 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_74 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_74] = 698
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("file"), this_74)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_75 = Command_maxIndex
			set Command_typeId[this_75] = 699
		else
			call error("Out of memory: Could not create Closure.")
			set this_75 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_75 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_75] = 699
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("bump"), this_75)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_76 = Command_maxIndex
			set Command_typeId[this_76] = 700
		else
			call error("Out of memory: Could not create Closure.")
			set this_76 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_76 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_76] = 700
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("plateau"), this_76)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_77 = Command_maxIndex
			set Command_typeId[this_77] = 702
		else
			call error("Out of memory: Could not create Closure.")
			set this_77 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_77 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_77] = 702
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("sfxtest"), this_77)
endfunction

function TestCommands_closure_impl_24 takes integer this_54 returns nothing
	set this_54 = PlayerSettings_lookup[GetPlayerId(CommandExecutor_owner[CommandContext_executor[context_2[this_54]]])]
	call Persistable_load(this_54, 0)
endfunction

function TestCommands_closure_impl_25 takes integer this_54 returns nothing
	local string s = "AAAAAAAAAAAAA"
	set this_54 = StringLength("AAAAAAAAAAAAA")
	loop
		exitwhen this_54 < 1
		call PreloadGenClear()
		call PreloadGenStart()
		call Preload(s)
		call PreloadGenEnd("lengthtest/preloadtest" + I2S(this_54) + ".pld")
		set s = SubString(s, 1, StringLength(s))
		set this_54 = this_54 - 1
	endloop
endfunction

function UnitPropertyCommands_closure_impl_25 takes integer this_54 returns nothing
	local integer this_55
	local integer this_56
	local integer this_57
	local integer this_58
	local integer this_59
	local integer this_60
	local integer this_61
	local integer this_62
	local integer this_63
	local integer this_64
	local integer this_65
	local integer this_66
	local integer this_67
	local integer this_68
	local integer this_69
	local integer this_70
	local integer this_71
	local integer this_72
	local integer this_73
	local integer this_74
	local integer this_75
	local integer this_76
	local integer this_77
	local integer this_78
	local integer this_79
	local integer this_80
	local integer this_81
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_55 = Command_maxIndex
			set Command_typeId[this_55] = 703
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_55 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_55] = 703
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("remove"), this_55)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_56 = Command_maxIndex
			set Command_typeId[this_56] = 704
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_56 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_56] = 704
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("kill"), this_56)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_57 = Command_maxIndex
			set Command_typeId[this_57] = 705
		else
			call error("Out of memory: Could not create Closure.")
			set this_57 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_57 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_57] = 705
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("explode"), this_57)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_58 = Command_maxIndex
			set Command_typeId[this_58] = 706
		else
			call error("Out of memory: Could not create Closure.")
			set this_58 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_58 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_58] = 706
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("size"), this_58)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_59 = Command_maxIndex
			set Command_typeId[this_59] = 707
		else
			call error("Out of memory: Could not create Closure.")
			set this_59 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_59 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_59] = 707
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("sized"), this_59)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_60 = Command_maxIndex
			set Command_typeId[this_60] = 708
		else
			call error("Out of memory: Could not create Closure.")
			set this_60 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_60 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_60] = 708
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("fa"), this_60)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_61 = Command_maxIndex
			set Command_typeId[this_61] = 709
		else
			call error("Out of memory: Could not create Closure.")
			set this_61 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_61 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_61] = 709
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("fd"), this_61)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_62 = Command_maxIndex
			set Command_typeId[this_62] = 710
		else
			call error("Out of memory: Could not create Closure.")
			set this_62 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_62 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_62] = 710
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("fly"), this_62)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_63 = Command_maxIndex
			set Command_typeId[this_63] = 711
		else
			call error("Out of memory: Could not create Closure.")
			set this_63 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_63 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_63] = 711
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("flyd"), this_63)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_64 = Command_maxIndex
			set Command_typeId[this_64] = 712
		else
			call error("Out of memory: Could not create Closure.")
			set this_64 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_64 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_64] = 712
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("name"), this_64)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_65 = Command_maxIndex
			set Command_typeId[this_65] = 713
		else
			call error("Out of memory: Could not create Closure.")
			set this_65 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_65 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_65] = 713
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("heroname"), this_65)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_66 = Command_maxIndex
			set Command_typeId[this_66] = 714
		else
			call error("Out of memory: Could not create Closure.")
			set this_66 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_66 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_66] = 714
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("tint"), this_66)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_67 = Command_maxIndex
			set Command_typeId[this_67] = 715
		else
			call error("Out of memory: Could not create Closure.")
			set this_67 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_67 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_67] = 715
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("color"), this_67)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_68 = Command_maxIndex
			set Command_typeId[this_68] = 716
		else
			call error("Out of memory: Could not create Closure.")
			set this_68 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_68 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_68] = 716
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("say"), this_68)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_69 = Command_maxIndex
			set Command_typeId[this_69] = 717
		else
			call error("Out of memory: Could not create Closure.")
			set this_69 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_69 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_69] = 717
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("color"), this_69)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_70 = Command_maxIndex
			set Command_typeId[this_70] = 718
		else
			call error("Out of memory: Could not create Closure.")
			set this_70 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_70 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_70] = 718
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("setlife"), this_70)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_71 = Command_maxIndex
			set Command_typeId[this_71] = 719
		else
			call error("Out of memory: Could not create Closure.")
			set this_71 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_71 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_71] = 719
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("setmana"), this_71)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_72 = Command_maxIndex
			set Command_typeId[this_72] = 720
		else
			call error("Out of memory: Could not create Closure.")
			set this_72 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_72 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_72] = 720
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("setdam"), this_72)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_73 = Command_maxIndex
			set Command_typeId[this_73] = 721
		else
			call error("Out of memory: Could not create Closure.")
			set this_73 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_73 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_73] = 721
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("setatkspd"), this_73)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_54 = Command_maxIndex
			set Command_typeId[this_54] = 722
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_54 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_54] = 722
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("addlife"), this_54)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_74 = Command_maxIndex
			set Command_typeId[this_74] = 723
		else
			call error("Out of memory: Could not create Closure.")
			set this_74 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_74 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_74] = 723
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("addmana"), this_74)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_75 = Command_maxIndex
			set Command_typeId[this_75] = 724
		else
			call error("Out of memory: Could not create Closure.")
			set this_75 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_75 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_75] = 724
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("adddam"), this_75)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_76 = Command_maxIndex
			set Command_typeId[this_76] = 725
		else
			call error("Out of memory: Could not create Closure.")
			set this_76 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_76 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_76] = 725
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("addatkspd"), this_76)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_77 = Command_maxIndex
			set Command_typeId[this_77] = 726
		else
			call error("Out of memory: Could not create Closure.")
			set this_77 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_77 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_77] = 726
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("movex"), this_77)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_78 = Command_maxIndex
			set Command_typeId[this_78] = 727
		else
			call error("Out of memory: Could not create Closure.")
			set this_78 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_78 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_78] = 727
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("movey"), this_78)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_79 = Command_maxIndex
			set Command_typeId[this_79] = 728
		else
			call error("Out of memory: Could not create Closure.")
			set this_79 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_79 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_79] = 728
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("move"), this_79)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_80 = Command_maxIndex
			set Command_typeId[this_80] = 729
		else
			call error("Out of memory: Could not create Closure.")
			set this_80 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_80 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_80] = 729
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("pitch"), this_80)
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_81 = Command_maxIndex
			set Command_typeId[this_81] = 730
		else
			call error("Out of memory: Could not create Closure.")
			set this_81 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_81 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_81] = 730
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("roll"), this_81)
endfunction

function Persistable_closure_impl_4 takes integer this_54, integer writer_2 returns nothing
	local integer this_55 = HashWriter_data[writer_2]
	if Table_typeId[this_55] <= 983 then
		call FlushChildHashtable(Table_ht, this_55)
	else
		call IterableMap_flush(this_55)
	endif
	call SaveInteger(Table_ht, HashWriter_data[writer_2], HashWriter_integerWriteIndex[writer_2], Box_inner[statusBox[this_54]])
	set HashWriter_integerWriteIndex[writer_2] = HashWriter_integerWriteIndex[writer_2] + 1
endfunction

function dispatch_NetworkWriteCallback_Network_NetworkWriteCallback_onWrite takes integer this_54, integer writer_2 returns nothing
	if NetworkWriteCallback_typeId[this_54] <= 908 then
		call SaveInteger(Table_ht, HashWriter_data[writer_2], HashWriter_integerWriteIndex[writer_2], 0)
		set HashWriter_integerWriteIndex[writer_2] = HashWriter_integerWriteIndex[writer_2] + 1
	else
		call Persistable_closure_impl_4(this_54, writer_2)
	endif
endfunction

function precomputeLookup takes nothing returns nothing
	local integer i_3 = 0
	local integer temp = 94
	local string c
	local boolean andLeft
	loop
		exitwhen i_3 > temp
		set c = SubString(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", i_3, i_3 + 1)
		if StringCase(c, true) == c then
			set andLeft = StringCase(c, false) != c
		else
			set andLeft = false
		endif
		if andLeft or c == "/" then
			call dispatch_HashMap_HashMap_HashMap_put(StringEncoder_alphabetLookup, StringHash("00" + c), i_3)
		else
			call dispatch_HashMap_HashMap_HashMap_put(StringEncoder_alphabetLookup, StringHash(c), i_3)
		endif
		set i_3 = i_3 + 1
	endloop
endfunction

function testCollisions takes nothing returns nothing
	local integer i_3 = 0
	local integer temp = 94
	local string msg
	local string msg_2
	local string msg_3
	loop
		exitwhen i_3 > temp
		if getIndexFromChar(getCharFromIndex(i_3)) != i_3 then
			set msg = "CollisionTest failed for " + I2S(i_3) + " " + getCharFromIndex(i_3)
			call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., Loglevel_getTag(4) + " - " + msg)
			set msg_2 = "getIndexFromChar() == " + I2S(getIndexFromChar(getCharFromIndex(i_3)))
			call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., Loglevel_getTag(4) + " - " + msg_2)
			set msg_3 = "getCharFromIndex(getIndexFromChar)) == " + getCharFromIndex(getIndexFromChar(getCharFromIndex(i_3)))
			call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., Loglevel_getTag(4) + " - " + msg_3)
			call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., Loglevel_getTag(4) + " - " + "This is a BAD thing and you should report it to wurst devs!")
		endif
		set i_3 = i_3 + 1
	endloop
endfunction

function dispatch_ForForceCallback_Execute_ForForceCallback_run takes integer this_54 returns nothing
	local integer index
	local integer i_3
	local integer temp
	local integer this_55
	local string lastToken
	local string Parsers_LineSplitterParser_nextToken_result
	local string Parsers_LineSplitterParser_nextToken_result_2
	local integer this_56
	if ForForceCallback_typeId[this_54] <= 800 then
		if ForForceCallback_typeId[this_54] <= 795 then
			if ForForceCallback_typeId[this_54] <= 792 then
				if ForForceCallback_typeId[this_54] <= 791 then
					if ForForceCallback_typeId[this_54] <= 790 then
						call Base64Encoder_closure_impl(this_54)
					else
						call CommandContext_next(this_4[this_54])
					endif
				else
					call Execute_closure_impl(this_54)
				endif
			elseif ForForceCallback_typeId[this_54] <= 794 then
				if ForForceCallback_typeId[this_54] <= 793 then
					call GamecacheKeys_precompute("", i[this_54] - 1)
				else
					set index = i_2[this_54]
					call GamecacheKeys_precompute(prefix[this_54] + SubString(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`{|}~", index, index + 1), depth[this_54] - 1)
				endif
			else
				call MiscInit_closure_impl_4(this_54)
			endif
		elseif ForForceCallback_typeId[this_54] <= 798 then
			if ForForceCallback_typeId[this_54] <= 797 then
				if ForForceCallback_typeId[this_54] <= 796 then
					call Network_closure_impl_11(this_54)
				else
					call dispatch_NetworkWriteCallback_Network_NetworkWriteCallback_onWrite(callback[this_54], Network_dataWriter[this_14[this_54]])
				endif
			else
				call Network_sendRound(this_35[this_54])
			endif
		elseif ForForceCallback_typeId[this_54] <= 799 then
			set i_3 = 1
			set temp = 64
			loop
				exitwhen i_3 > temp
				call BlzSetAbilityTooltip(1096303700, "END OF FILE", i_3)
				set i_3 = i_3 + 1
			endloop
		else
			set this_55 = this_54
			set Parsers_LineSplitterParser_nextToken_result = LineSplitterParser_nextToken(this_38[this_54])
			set lastToken = Parsers_LineSplitterParser_nextToken_result
			set LineSplitterParser_result[this_38[this_54]] = Parsers_LineSplitterParser_nextToken_result
			loop
				exitwhen lastToken == ""
				set Parsers_LineSplitterParser_nextToken_result_2 = LineSplitterParser_nextToken(this_38[this_55])
				set lastToken = Parsers_LineSplitterParser_nextToken_result_2
				if Parsers_LineSplitterParser_nextToken_result_2 != "" then
					set LineSplitterParser_result[this_38[this_55]] = LineSplitterParser_result[this_38[this_55]] + "\n" + Parsers_LineSplitterParser_nextToken_result_2
				endif
			endloop
		endif
	elseif ForForceCallback_typeId[this_54] <= 806 then
		if ForForceCallback_typeId[this_54] <= 803 then
			if ForForceCallback_typeId[this_54] <= 802 then
				if ForForceCallback_typeId[this_54] <= 801 then
					call Persistable_closure_impl_3(this_54)
				else
					call Persistable_closure_impl_2(this_54)
				endif
			else
				call precomputeLookup()
			endif
		elseif ForForceCallback_typeId[this_54] <= 805 then
			if ForForceCallback_typeId[this_54] <= 804 then
				call testCollisions()
			else
				call TestCommands_closure_impl_23(this_54)
			endif
		else
			call TestCommands_closure_impl_22(this_54)
		endif
	elseif ForForceCallback_typeId[this_54] <= 809 then
		if ForForceCallback_typeId[this_54] <= 808 then
			if ForForceCallback_typeId[this_54] <= 807 then
				call TestCommands_closure_impl_24(this_54)
			else
				set this_56 = this_54
				loop
					call BlzSetAbilityTooltip(1096901235, "asdfghj", 0)
					set Box_v[box[this_56]] = Box_v[box[this_56]] + 1
				endloop
			endif
		else
			call error("fail")
		endif
	elseif ForForceCallback_typeId[this_54] <= 810 then
		call TestCommands_closure_impl_25(this_54)
	else
		call UnitPropertyCommands_closure_impl_25(this_54)
	endif
endfunction

function executeCurrentCallback takes nothing returns nothing
	set ErrorHandling_lastError = ""
	call dispatch_ForForceCallback_Execute_ForForceCallback_run(Execute_tempCallbacks[Execute_tempCallbacksCount - 1])
	set Execute_tempCallbacksSuccess[Execute_tempCallbacksCount - 1] = true
endfunction

function init_Abilities takes nothing returns boolean
	return true
endfunction

function init_AbilityIds takes nothing returns boolean
	return true
endfunction

function init_Angle takes nothing returns boolean
	return true
endfunction

function CallbackPeriodic_start takes integer this_54, real time returns nothing
	set CallbackPeriodic_t[this_54] = getTimer()
	call timer_setData(CallbackPeriodic_t[this_54], this_54)
	call TimerStart(CallbackPeriodic_t[this_54], time, true, ref_function_CallbackPeriodic_staticCallback)
endfunction

function init_Atmospheric takes nothing returns boolean
	local integer cond_result = R2I(128)
	local integer cond_result_2
	local integer cond_result_3
	local integer this_54
	set Atmospheric_MODULATE_DEFAULT_R = cond_result
	set cond_result_2 = R2I(128)
	set Atmospheric_MODULATE_DEFAULT_G = cond_result_2
	set cond_result_3 = R2I(128)
	set Atmospheric_MODULATE_DEFAULT_B = cond_result_3
	set Atmospheric_globalBlend = BLEND_MODE_MODULATE_2X
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set this_54 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[this_54] = 656
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set this_54 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[this_54] = 656
	endif
	call CallbackPeriodic_start(this_54, 0.030)
	return true
endfunction

function init_AutoGenerated takes nothing returns boolean
	return true
endfunction

function init_Base64 takes nothing returns boolean
	set Base64_CHARMAP[0] = "A"
	set Base64_CHARMAP[1] = "B"
	set Base64_CHARMAP[2] = "C"
	set Base64_CHARMAP[3] = "D"
	set Base64_CHARMAP[4] = "E"
	set Base64_CHARMAP[5] = "F"
	set Base64_CHARMAP[6] = "G"
	set Base64_CHARMAP[7] = "H"
	set Base64_CHARMAP[8] = "I"
	set Base64_CHARMAP[9] = "J"
	set Base64_CHARMAP[10] = "K"
	set Base64_CHARMAP[11] = "L"
	set Base64_CHARMAP[12] = "M"
	set Base64_CHARMAP[13] = "N"
	set Base64_CHARMAP[14] = "O"
	set Base64_CHARMAP[15] = "P"
	set Base64_CHARMAP[16] = "Q"
	set Base64_CHARMAP[17] = "R"
	set Base64_CHARMAP[18] = "S"
	set Base64_CHARMAP[19] = "T"
	set Base64_CHARMAP[20] = "U"
	set Base64_CHARMAP[21] = "V"
	set Base64_CHARMAP[22] = "W"
	set Base64_CHARMAP[23] = "X"
	set Base64_CHARMAP[24] = "Y"
	set Base64_CHARMAP[25] = "Z"
	set Base64_CHARMAP[26] = "a"
	set Base64_CHARMAP[27] = "b"
	set Base64_CHARMAP[28] = "c"
	set Base64_CHARMAP[29] = "d"
	set Base64_CHARMAP[30] = "e"
	set Base64_CHARMAP[31] = "f"
	set Base64_CHARMAP[32] = "g"
	set Base64_CHARMAP[33] = "h"
	set Base64_CHARMAP[34] = "i"
	set Base64_CHARMAP[35] = "j"
	set Base64_CHARMAP[36] = "k"
	set Base64_CHARMAP[37] = "l"
	set Base64_CHARMAP[38] = "m"
	set Base64_CHARMAP[39] = "n"
	set Base64_CHARMAP[40] = "o"
	set Base64_CHARMAP[41] = "p"
	set Base64_CHARMAP[42] = "q"
	set Base64_CHARMAP[43] = "r"
	set Base64_CHARMAP[44] = "s"
	set Base64_CHARMAP[45] = "t"
	set Base64_CHARMAP[46] = "u"
	set Base64_CHARMAP[47] = "v"
	set Base64_CHARMAP[48] = "w"
	set Base64_CHARMAP[49] = "x"
	set Base64_CHARMAP[50] = "y"
	set Base64_CHARMAP[51] = "z"
	set Base64_CHARMAP[52] = "0"
	set Base64_CHARMAP[53] = "1"
	set Base64_CHARMAP[54] = "2"
	set Base64_CHARMAP[55] = "3"
	set Base64_CHARMAP[56] = "4"
	set Base64_CHARMAP[57] = "5"
	set Base64_CHARMAP[58] = "6"
	set Base64_CHARMAP[59] = "7"
	set Base64_CHARMAP[60] = "8"
	set Base64_CHARMAP[61] = "9"
	set Base64_CHARMAP[62] = "+"
	set Base64_CHARMAP[63] = "/"
	set Base64_REVERSE_CHARMAP[0] = -1
	set Base64_REVERSE_CHARMAP[1] = -1
	set Base64_REVERSE_CHARMAP[2] = -1
	set Base64_REVERSE_CHARMAP[3] = -1
	set Base64_REVERSE_CHARMAP[4] = -1
	set Base64_REVERSE_CHARMAP[5] = -1
	set Base64_REVERSE_CHARMAP[6] = -1
	set Base64_REVERSE_CHARMAP[7] = -1
	set Base64_REVERSE_CHARMAP[8] = -1
	set Base64_REVERSE_CHARMAP[9] = -1
	set Base64_REVERSE_CHARMAP[10] = -1
	set Base64_REVERSE_CHARMAP[11] = -1
	set Base64_REVERSE_CHARMAP[12] = -1
	set Base64_REVERSE_CHARMAP[13] = -1
	set Base64_REVERSE_CHARMAP[14] = -1
	set Base64_REVERSE_CHARMAP[15] = -1
	set Base64_REVERSE_CHARMAP[16] = -1
	set Base64_REVERSE_CHARMAP[17] = -1
	set Base64_REVERSE_CHARMAP[18] = -1
	set Base64_REVERSE_CHARMAP[19] = -1
	set Base64_REVERSE_CHARMAP[20] = -1
	set Base64_REVERSE_CHARMAP[21] = -1
	set Base64_REVERSE_CHARMAP[22] = -1
	set Base64_REVERSE_CHARMAP[23] = -1
	set Base64_REVERSE_CHARMAP[24] = -1
	set Base64_REVERSE_CHARMAP[25] = -1
	set Base64_REVERSE_CHARMAP[26] = -1
	set Base64_REVERSE_CHARMAP[27] = -1
	set Base64_REVERSE_CHARMAP[28] = -1
	set Base64_REVERSE_CHARMAP[29] = -1
	set Base64_REVERSE_CHARMAP[30] = -1
	set Base64_REVERSE_CHARMAP[31] = -1
	set Base64_REVERSE_CHARMAP[32] = -1
	set Base64_REVERSE_CHARMAP[33] = -1
	set Base64_REVERSE_CHARMAP[34] = -1
	set Base64_REVERSE_CHARMAP[35] = -1
	set Base64_REVERSE_CHARMAP[36] = -1
	set Base64_REVERSE_CHARMAP[37] = -1
	set Base64_REVERSE_CHARMAP[38] = -1
	set Base64_REVERSE_CHARMAP[39] = -1
	set Base64_REVERSE_CHARMAP[40] = -1
	set Base64_REVERSE_CHARMAP[41] = -1
	set Base64_REVERSE_CHARMAP[42] = -1
	set Base64_REVERSE_CHARMAP[43] = 62
	set Base64_REVERSE_CHARMAP[44] = -1
	set Base64_REVERSE_CHARMAP[45] = -1
	set Base64_REVERSE_CHARMAP[46] = -1
	set Base64_REVERSE_CHARMAP[47] = 63
	set Base64_REVERSE_CHARMAP[48] = 52
	set Base64_REVERSE_CHARMAP[49] = 53
	set Base64_REVERSE_CHARMAP[50] = 54
	set Base64_REVERSE_CHARMAP[51] = 55
	set Base64_REVERSE_CHARMAP[52] = 56
	set Base64_REVERSE_CHARMAP[53] = 57
	set Base64_REVERSE_CHARMAP[54] = 58
	set Base64_REVERSE_CHARMAP[55] = 59
	set Base64_REVERSE_CHARMAP[56] = 60
	set Base64_REVERSE_CHARMAP[57] = 61
	set Base64_REVERSE_CHARMAP[58] = -1
	set Base64_REVERSE_CHARMAP[59] = -1
	set Base64_REVERSE_CHARMAP[60] = -1
	set Base64_REVERSE_CHARMAP[61] = -1
	set Base64_REVERSE_CHARMAP[62] = -1
	set Base64_REVERSE_CHARMAP[63] = -1
	set Base64_REVERSE_CHARMAP[64] = -1
	set Base64_REVERSE_CHARMAP[65] = 0
	set Base64_REVERSE_CHARMAP[66] = 1
	set Base64_REVERSE_CHARMAP[67] = 2
	set Base64_REVERSE_CHARMAP[68] = 3
	set Base64_REVERSE_CHARMAP[69] = 4
	set Base64_REVERSE_CHARMAP[70] = 5
	set Base64_REVERSE_CHARMAP[71] = 6
	set Base64_REVERSE_CHARMAP[72] = 7
	set Base64_REVERSE_CHARMAP[73] = 8
	set Base64_REVERSE_CHARMAP[74] = 9
	set Base64_REVERSE_CHARMAP[75] = 10
	set Base64_REVERSE_CHARMAP[76] = 11
	set Base64_REVERSE_CHARMAP[77] = 12
	set Base64_REVERSE_CHARMAP[78] = 13
	set Base64_REVERSE_CHARMAP[79] = 14
	set Base64_REVERSE_CHARMAP[80] = 15
	set Base64_REVERSE_CHARMAP[81] = 16
	set Base64_REVERSE_CHARMAP[82] = 17
	set Base64_REVERSE_CHARMAP[83] = 18
	set Base64_REVERSE_CHARMAP[84] = 19
	set Base64_REVERSE_CHARMAP[85] = 20
	set Base64_REVERSE_CHARMAP[86] = 21
	set Base64_REVERSE_CHARMAP[87] = 22
	set Base64_REVERSE_CHARMAP[88] = 23
	set Base64_REVERSE_CHARMAP[89] = 24
	set Base64_REVERSE_CHARMAP[90] = 25
	set Base64_REVERSE_CHARMAP[91] = -1
	set Base64_REVERSE_CHARMAP[92] = -1
	set Base64_REVERSE_CHARMAP[93] = -1
	set Base64_REVERSE_CHARMAP[94] = -1
	set Base64_REVERSE_CHARMAP[95] = -1
	set Base64_REVERSE_CHARMAP[96] = -1
	set Base64_REVERSE_CHARMAP[97] = 26
	set Base64_REVERSE_CHARMAP[98] = 27
	set Base64_REVERSE_CHARMAP[99] = 28
	set Base64_REVERSE_CHARMAP[100] = 29
	set Base64_REVERSE_CHARMAP[101] = 30
	set Base64_REVERSE_CHARMAP[102] = 31
	set Base64_REVERSE_CHARMAP[103] = 32
	set Base64_REVERSE_CHARMAP[104] = 33
	set Base64_REVERSE_CHARMAP[105] = 34
	set Base64_REVERSE_CHARMAP[106] = 35
	set Base64_REVERSE_CHARMAP[107] = 36
	set Base64_REVERSE_CHARMAP[108] = 37
	set Base64_REVERSE_CHARMAP[109] = 38
	set Base64_REVERSE_CHARMAP[110] = 39
	set Base64_REVERSE_CHARMAP[111] = 40
	set Base64_REVERSE_CHARMAP[112] = 41
	set Base64_REVERSE_CHARMAP[113] = 42
	set Base64_REVERSE_CHARMAP[114] = 43
	set Base64_REVERSE_CHARMAP[115] = 44
	set Base64_REVERSE_CHARMAP[116] = 45
	set Base64_REVERSE_CHARMAP[117] = 46
	set Base64_REVERSE_CHARMAP[118] = 47
	set Base64_REVERSE_CHARMAP[119] = 48
	set Base64_REVERSE_CHARMAP[120] = 49
	set Base64_REVERSE_CHARMAP[121] = 50
	set Base64_REVERSE_CHARMAP[122] = 51
	set Base64_REVERSE_CHARMAP[123] = -1
	set Base64_REVERSE_CHARMAP[124] = -1
	set Base64_REVERSE_CHARMAP[125] = -1
	set Base64_REVERSE_CHARMAP[126] = -1
	set Base64_REVERSE_CHARMAP[127] = -1
	set Base64_REVERSE_CHARMAP[128] = -1
	set Base64_REVERSE_CHARMAP[129] = -1
	set Base64_REVERSE_CHARMAP[130] = -1
	set Base64_REVERSE_CHARMAP[131] = -1
	set Base64_REVERSE_CHARMAP[132] = -1
	set Base64_REVERSE_CHARMAP[133] = -1
	set Base64_REVERSE_CHARMAP[134] = -1
	set Base64_REVERSE_CHARMAP[135] = -1
	set Base64_REVERSE_CHARMAP[136] = -1
	set Base64_REVERSE_CHARMAP[137] = -1
	set Base64_REVERSE_CHARMAP[138] = -1
	set Base64_REVERSE_CHARMAP[139] = -1
	set Base64_REVERSE_CHARMAP[140] = -1
	set Base64_REVERSE_CHARMAP[141] = -1
	set Base64_REVERSE_CHARMAP[142] = -1
	set Base64_REVERSE_CHARMAP[143] = -1
	set Base64_REVERSE_CHARMAP[144] = -1
	set Base64_REVERSE_CHARMAP[145] = -1
	set Base64_REVERSE_CHARMAP[146] = -1
	set Base64_REVERSE_CHARMAP[147] = -1
	set Base64_REVERSE_CHARMAP[148] = -1
	set Base64_REVERSE_CHARMAP[149] = -1
	set Base64_REVERSE_CHARMAP[150] = -1
	set Base64_REVERSE_CHARMAP[151] = -1
	set Base64_REVERSE_CHARMAP[152] = -1
	set Base64_REVERSE_CHARMAP[153] = -1
	set Base64_REVERSE_CHARMAP[154] = -1
	set Base64_REVERSE_CHARMAP[155] = -1
	set Base64_REVERSE_CHARMAP[156] = -1
	set Base64_REVERSE_CHARMAP[157] = -1
	set Base64_REVERSE_CHARMAP[158] = -1
	set Base64_REVERSE_CHARMAP[159] = -1
	set Base64_REVERSE_CHARMAP[160] = -1
	set Base64_REVERSE_CHARMAP[161] = -1
	set Base64_REVERSE_CHARMAP[162] = -1
	set Base64_REVERSE_CHARMAP[163] = -1
	set Base64_REVERSE_CHARMAP[164] = -1
	set Base64_REVERSE_CHARMAP[165] = -1
	set Base64_REVERSE_CHARMAP[166] = -1
	set Base64_REVERSE_CHARMAP[167] = -1
	set Base64_REVERSE_CHARMAP[168] = -1
	set Base64_REVERSE_CHARMAP[169] = -1
	set Base64_REVERSE_CHARMAP[170] = -1
	set Base64_REVERSE_CHARMAP[171] = -1
	set Base64_REVERSE_CHARMAP[172] = -1
	set Base64_REVERSE_CHARMAP[173] = -1
	set Base64_REVERSE_CHARMAP[174] = -1
	set Base64_REVERSE_CHARMAP[175] = -1
	set Base64_REVERSE_CHARMAP[176] = -1
	set Base64_REVERSE_CHARMAP[177] = -1
	set Base64_REVERSE_CHARMAP[178] = -1
	set Base64_REVERSE_CHARMAP[179] = -1
	set Base64_REVERSE_CHARMAP[180] = -1
	set Base64_REVERSE_CHARMAP[181] = -1
	set Base64_REVERSE_CHARMAP[182] = -1
	set Base64_REVERSE_CHARMAP[183] = -1
	set Base64_REVERSE_CHARMAP[184] = -1
	set Base64_REVERSE_CHARMAP[185] = -1
	set Base64_REVERSE_CHARMAP[186] = -1
	set Base64_REVERSE_CHARMAP[187] = -1
	set Base64_REVERSE_CHARMAP[188] = -1
	set Base64_REVERSE_CHARMAP[189] = -1
	set Base64_REVERSE_CHARMAP[190] = -1
	set Base64_REVERSE_CHARMAP[191] = -1
	set Base64_REVERSE_CHARMAP[192] = -1
	set Base64_REVERSE_CHARMAP[193] = -1
	set Base64_REVERSE_CHARMAP[194] = -1
	set Base64_REVERSE_CHARMAP[195] = -1
	set Base64_REVERSE_CHARMAP[196] = -1
	set Base64_REVERSE_CHARMAP[197] = -1
	set Base64_REVERSE_CHARMAP[198] = -1
	set Base64_REVERSE_CHARMAP[199] = -1
	set Base64_REVERSE_CHARMAP[200] = -1
	set Base64_REVERSE_CHARMAP[201] = -1
	set Base64_REVERSE_CHARMAP[202] = -1
	set Base64_REVERSE_CHARMAP[203] = -1
	set Base64_REVERSE_CHARMAP[204] = -1
	set Base64_REVERSE_CHARMAP[205] = -1
	set Base64_REVERSE_CHARMAP[206] = -1
	set Base64_REVERSE_CHARMAP[207] = -1
	set Base64_REVERSE_CHARMAP[208] = -1
	set Base64_REVERSE_CHARMAP[209] = -1
	set Base64_REVERSE_CHARMAP[210] = -1
	set Base64_REVERSE_CHARMAP[211] = -1
	set Base64_REVERSE_CHARMAP[212] = -1
	set Base64_REVERSE_CHARMAP[213] = -1
	set Base64_REVERSE_CHARMAP[214] = -1
	set Base64_REVERSE_CHARMAP[215] = -1
	set Base64_REVERSE_CHARMAP[216] = -1
	set Base64_REVERSE_CHARMAP[217] = -1
	set Base64_REVERSE_CHARMAP[218] = -1
	set Base64_REVERSE_CHARMAP[219] = -1
	set Base64_REVERSE_CHARMAP[220] = -1
	set Base64_REVERSE_CHARMAP[221] = -1
	set Base64_REVERSE_CHARMAP[222] = -1
	set Base64_REVERSE_CHARMAP[223] = -1
	set Base64_REVERSE_CHARMAP[224] = -1
	set Base64_REVERSE_CHARMAP[225] = -1
	set Base64_REVERSE_CHARMAP[226] = -1
	set Base64_REVERSE_CHARMAP[227] = -1
	set Base64_REVERSE_CHARMAP[228] = -1
	set Base64_REVERSE_CHARMAP[229] = -1
	set Base64_REVERSE_CHARMAP[230] = -1
	set Base64_REVERSE_CHARMAP[231] = -1
	set Base64_REVERSE_CHARMAP[232] = -1
	set Base64_REVERSE_CHARMAP[233] = -1
	set Base64_REVERSE_CHARMAP[234] = -1
	set Base64_REVERSE_CHARMAP[235] = -1
	set Base64_REVERSE_CHARMAP[236] = -1
	set Base64_REVERSE_CHARMAP[237] = -1
	set Base64_REVERSE_CHARMAP[238] = -1
	set Base64_REVERSE_CHARMAP[239] = -1
	set Base64_REVERSE_CHARMAP[240] = -1
	set Base64_REVERSE_CHARMAP[241] = -1
	set Base64_REVERSE_CHARMAP[242] = -1
	set Base64_REVERSE_CHARMAP[243] = -1
	set Base64_REVERSE_CHARMAP[244] = -1
	set Base64_REVERSE_CHARMAP[245] = -1
	set Base64_REVERSE_CHARMAP[246] = -1
	set Base64_REVERSE_CHARMAP[247] = -1
	set Base64_REVERSE_CHARMAP[248] = -1
	set Base64_REVERSE_CHARMAP[249] = -1
	set Base64_REVERSE_CHARMAP[250] = -1
	set Base64_REVERSE_CHARMAP[251] = -1
	set Base64_REVERSE_CHARMAP[252] = -1
	set Base64_REVERSE_CHARMAP[253] = -1
	set Base64_REVERSE_CHARMAP[254] = -1
	return true
endfunction

function init_Basics takes nothing returns boolean
	set Basics_DUMMY_PLAYER = Player_players[PLAYER_NEUTRAL_PASSIVE]
	return true
endfunction

function initCharmap takes nothing returns nothing
	local integer i_3 = 0
	local integer temp = 9
	loop
		exitwhen i_3 > temp
		call SaveInteger(Table_ht, BigInt_charmapR, StringHash(BigInt_charmap[i_3]), i_3)
		set i_3 = i_3 + 1
	endloop
endfunction

function init_BigInt takes nothing returns boolean
	set BigInt_charmap[0] = "0"
	set BigInt_charmap[1] = "1"
	set BigInt_charmap[2] = "2"
	set BigInt_charmap[3] = "3"
	set BigInt_charmap[4] = "4"
	set BigInt_charmap[5] = "5"
	set BigInt_charmap[6] = "6"
	set BigInt_charmap[7] = "7"
	set BigInt_charmap[8] = "8"
	set BigInt_charmap[9] = "9"
	set BigInt_charmap[10] = "A"
	set BigInt_charmap[11] = "B"
	set BigInt_charmap[12] = "C"
	set BigInt_charmap[13] = "D"
	set BigInt_charmap[14] = "E"
	set BigInt_charmap[15] = "F"
	set BigInt_charmap[16] = "G"
	set BigInt_charmap[17] = "H"
	set BigInt_charmap[18] = "I"
	set BigInt_charmap[19] = "J"
	set BigInt_charmap[20] = "K"
	set BigInt_charmap[21] = "L"
	set BigInt_charmap[22] = "M"
	set BigInt_charmap[23] = "N"
	set BigInt_charmap[24] = "O"
	set BigInt_charmap[25] = "P"
	set BigInt_charmap[26] = "Q"
	set BigInt_charmap[27] = "R"
	set BigInt_charmap[28] = "S"
	set BigInt_charmap[29] = "T"
	set BigInt_charmap[30] = "U"
	set BigInt_charmap[31] = "V"
	set BigInt_charmapR = new_Table()
	call initCharmap()
	return true
endfunction

function init_BigInt2 takes nothing returns boolean
	return true
endfunction

function init_BigString takes nothing returns boolean
	return true
endfunction

function initBitwise takes nothing returns nothing
	local integer i16 = 0
	local integer i256 = 0
	local integer i_3
	local integer i256_2
	local integer i16_2
	local integer bit
	local integer pow
	loop
		exitwhen i256 >= 256
		set i_3 = 0
		loop
			exitwhen i_3 >= 16
			set BitwiseInit_lbyte[i256] = i16
			set i256 = i256 + 1
			set i_3 = i_3 + 1
		endloop
		set i16 = i16 + 1
	endloop
	set i256_2 = 0
	loop
		exitwhen i256_2 >= 256
		set i16_2 = 0
		loop
			exitwhen i16_2 >= 16
			set BitwiseInit_rbyte[i256_2] = i16_2
			set i256_2 = i256_2 + 1
			set i16_2 = i16_2 + 1
		endloop
	endloop
	set bit = 0
	set pow = 1
	loop
		exitwhen bit > 32
		set BitwiseInit_powShift[bit] = pow
		set pow = pow * 2
		set bit = bit + 1
	endloop
endfunction

function init_BitwiseInit takes nothing returns boolean
	set BitwiseInit_andData[0] = 0
	set BitwiseInit_andData[1] = 0
	set BitwiseInit_andData[2] = 0
	set BitwiseInit_andData[3] = 0
	set BitwiseInit_andData[4] = 0
	set BitwiseInit_andData[5] = 0
	set BitwiseInit_andData[6] = 0
	set BitwiseInit_andData[7] = 0
	set BitwiseInit_andData[8] = 0
	set BitwiseInit_andData[9] = 0
	set BitwiseInit_andData[10] = 0
	set BitwiseInit_andData[11] = 0
	set BitwiseInit_andData[12] = 0
	set BitwiseInit_andData[13] = 0
	set BitwiseInit_andData[14] = 0
	set BitwiseInit_andData[15] = 0
	set BitwiseInit_andData[16] = 0
	set BitwiseInit_andData[17] = 1
	set BitwiseInit_andData[18] = 0
	set BitwiseInit_andData[19] = 1
	set BitwiseInit_andData[20] = 0
	set BitwiseInit_andData[21] = 1
	set BitwiseInit_andData[22] = 0
	set BitwiseInit_andData[23] = 1
	set BitwiseInit_andData[24] = 0
	set BitwiseInit_andData[25] = 1
	set BitwiseInit_andData[26] = 0
	set BitwiseInit_andData[27] = 1
	set BitwiseInit_andData[28] = 0
	set BitwiseInit_andData[29] = 1
	set BitwiseInit_andData[30] = 0
	set BitwiseInit_andData[31] = 1
	set BitwiseInit_andData[32] = 0
	set BitwiseInit_andData[33] = 0
	set BitwiseInit_andData[34] = 2
	set BitwiseInit_andData[35] = 2
	set BitwiseInit_andData[36] = 0
	set BitwiseInit_andData[37] = 0
	set BitwiseInit_andData[38] = 2
	set BitwiseInit_andData[39] = 2
	set BitwiseInit_andData[40] = 0
	set BitwiseInit_andData[41] = 0
	set BitwiseInit_andData[42] = 2
	set BitwiseInit_andData[43] = 2
	set BitwiseInit_andData[44] = 0
	set BitwiseInit_andData[45] = 0
	set BitwiseInit_andData[46] = 2
	set BitwiseInit_andData[47] = 2
	set BitwiseInit_andData[48] = 0
	set BitwiseInit_andData[49] = 1
	set BitwiseInit_andData[50] = 2
	set BitwiseInit_andData[51] = 3
	set BitwiseInit_andData[52] = 0
	set BitwiseInit_andData[53] = 1
	set BitwiseInit_andData[54] = 2
	set BitwiseInit_andData[55] = 3
	set BitwiseInit_andData[56] = 0
	set BitwiseInit_andData[57] = 1
	set BitwiseInit_andData[58] = 2
	set BitwiseInit_andData[59] = 3
	set BitwiseInit_andData[60] = 0
	set BitwiseInit_andData[61] = 1
	set BitwiseInit_andData[62] = 2
	set BitwiseInit_andData[63] = 3
	set BitwiseInit_andData[64] = 0
	set BitwiseInit_andData[65] = 0
	set BitwiseInit_andData[66] = 0
	set BitwiseInit_andData[67] = 0
	set BitwiseInit_andData[68] = 4
	set BitwiseInit_andData[69] = 4
	set BitwiseInit_andData[70] = 4
	set BitwiseInit_andData[71] = 4
	set BitwiseInit_andData[72] = 0
	set BitwiseInit_andData[73] = 0
	set BitwiseInit_andData[74] = 0
	set BitwiseInit_andData[75] = 0
	set BitwiseInit_andData[76] = 4
	set BitwiseInit_andData[77] = 4
	set BitwiseInit_andData[78] = 4
	set BitwiseInit_andData[79] = 4
	set BitwiseInit_andData[80] = 0
	set BitwiseInit_andData[81] = 1
	set BitwiseInit_andData[82] = 0
	set BitwiseInit_andData[83] = 1
	set BitwiseInit_andData[84] = 4
	set BitwiseInit_andData[85] = 5
	set BitwiseInit_andData[86] = 4
	set BitwiseInit_andData[87] = 5
	set BitwiseInit_andData[88] = 0
	set BitwiseInit_andData[89] = 1
	set BitwiseInit_andData[90] = 0
	set BitwiseInit_andData[91] = 1
	set BitwiseInit_andData[92] = 4
	set BitwiseInit_andData[93] = 5
	set BitwiseInit_andData[94] = 4
	set BitwiseInit_andData[95] = 5
	set BitwiseInit_andData[96] = 0
	set BitwiseInit_andData[97] = 0
	set BitwiseInit_andData[98] = 2
	set BitwiseInit_andData[99] = 2
	set BitwiseInit_andData[100] = 4
	set BitwiseInit_andData[101] = 4
	set BitwiseInit_andData[102] = 6
	set BitwiseInit_andData[103] = 6
	set BitwiseInit_andData[104] = 0
	set BitwiseInit_andData[105] = 0
	set BitwiseInit_andData[106] = 2
	set BitwiseInit_andData[107] = 2
	set BitwiseInit_andData[108] = 4
	set BitwiseInit_andData[109] = 4
	set BitwiseInit_andData[110] = 6
	set BitwiseInit_andData[111] = 6
	set BitwiseInit_andData[112] = 0
	set BitwiseInit_andData[113] = 1
	set BitwiseInit_andData[114] = 2
	set BitwiseInit_andData[115] = 3
	set BitwiseInit_andData[116] = 4
	set BitwiseInit_andData[117] = 5
	set BitwiseInit_andData[118] = 6
	set BitwiseInit_andData[119] = 7
	set BitwiseInit_andData[120] = 0
	set BitwiseInit_andData[121] = 1
	set BitwiseInit_andData[122] = 2
	set BitwiseInit_andData[123] = 3
	set BitwiseInit_andData[124] = 4
	set BitwiseInit_andData[125] = 5
	set BitwiseInit_andData[126] = 6
	set BitwiseInit_andData[127] = 7
	set BitwiseInit_andData[128] = 0
	set BitwiseInit_andData[129] = 0
	set BitwiseInit_andData[130] = 0
	set BitwiseInit_andData[131] = 0
	set BitwiseInit_andData[132] = 0
	set BitwiseInit_andData[133] = 0
	set BitwiseInit_andData[134] = 0
	set BitwiseInit_andData[135] = 0
	set BitwiseInit_andData[136] = 8
	set BitwiseInit_andData[137] = 8
	set BitwiseInit_andData[138] = 8
	set BitwiseInit_andData[139] = 8
	set BitwiseInit_andData[140] = 8
	set BitwiseInit_andData[141] = 8
	set BitwiseInit_andData[142] = 8
	set BitwiseInit_andData[143] = 8
	set BitwiseInit_andData[144] = 0
	set BitwiseInit_andData[145] = 1
	set BitwiseInit_andData[146] = 0
	set BitwiseInit_andData[147] = 1
	set BitwiseInit_andData[148] = 0
	set BitwiseInit_andData[149] = 1
	set BitwiseInit_andData[150] = 0
	set BitwiseInit_andData[151] = 1
	set BitwiseInit_andData[152] = 8
	set BitwiseInit_andData[153] = 9
	set BitwiseInit_andData[154] = 8
	set BitwiseInit_andData[155] = 9
	set BitwiseInit_andData[156] = 8
	set BitwiseInit_andData[157] = 9
	set BitwiseInit_andData[158] = 8
	set BitwiseInit_andData[159] = 9
	set BitwiseInit_andData[160] = 0
	set BitwiseInit_andData[161] = 0
	set BitwiseInit_andData[162] = 2
	set BitwiseInit_andData[163] = 2
	set BitwiseInit_andData[164] = 0
	set BitwiseInit_andData[165] = 0
	set BitwiseInit_andData[166] = 2
	set BitwiseInit_andData[167] = 2
	set BitwiseInit_andData[168] = 8
	set BitwiseInit_andData[169] = 8
	set BitwiseInit_andData[170] = 10
	set BitwiseInit_andData[171] = 10
	set BitwiseInit_andData[172] = 8
	set BitwiseInit_andData[173] = 8
	set BitwiseInit_andData[174] = 10
	set BitwiseInit_andData[175] = 10
	set BitwiseInit_andData[176] = 0
	set BitwiseInit_andData[177] = 1
	set BitwiseInit_andData[178] = 2
	set BitwiseInit_andData[179] = 3
	set BitwiseInit_andData[180] = 0
	set BitwiseInit_andData[181] = 1
	set BitwiseInit_andData[182] = 2
	set BitwiseInit_andData[183] = 3
	set BitwiseInit_andData[184] = 8
	set BitwiseInit_andData[185] = 9
	set BitwiseInit_andData[186] = 10
	set BitwiseInit_andData[187] = 11
	set BitwiseInit_andData[188] = 8
	set BitwiseInit_andData[189] = 9
	set BitwiseInit_andData[190] = 10
	set BitwiseInit_andData[191] = 11
	set BitwiseInit_andData[192] = 0
	set BitwiseInit_andData[193] = 0
	set BitwiseInit_andData[194] = 0
	set BitwiseInit_andData[195] = 0
	set BitwiseInit_andData[196] = 4
	set BitwiseInit_andData[197] = 4
	set BitwiseInit_andData[198] = 4
	set BitwiseInit_andData[199] = 4
	set BitwiseInit_andData[200] = 8
	set BitwiseInit_andData[201] = 8
	set BitwiseInit_andData[202] = 8
	set BitwiseInit_andData[203] = 8
	set BitwiseInit_andData[204] = 12
	set BitwiseInit_andData[205] = 12
	set BitwiseInit_andData[206] = 12
	set BitwiseInit_andData[207] = 12
	set BitwiseInit_andData[208] = 0
	set BitwiseInit_andData[209] = 1
	set BitwiseInit_andData[210] = 0
	set BitwiseInit_andData[211] = 1
	set BitwiseInit_andData[212] = 4
	set BitwiseInit_andData[213] = 5
	set BitwiseInit_andData[214] = 4
	set BitwiseInit_andData[215] = 5
	set BitwiseInit_andData[216] = 8
	set BitwiseInit_andData[217] = 9
	set BitwiseInit_andData[218] = 8
	set BitwiseInit_andData[219] = 9
	set BitwiseInit_andData[220] = 12
	set BitwiseInit_andData[221] = 13
	set BitwiseInit_andData[222] = 12
	set BitwiseInit_andData[223] = 13
	set BitwiseInit_andData[224] = 0
	set BitwiseInit_andData[225] = 0
	set BitwiseInit_andData[226] = 2
	set BitwiseInit_andData[227] = 2
	set BitwiseInit_andData[228] = 4
	set BitwiseInit_andData[229] = 4
	set BitwiseInit_andData[230] = 6
	set BitwiseInit_andData[231] = 6
	set BitwiseInit_andData[232] = 8
	set BitwiseInit_andData[233] = 8
	set BitwiseInit_andData[234] = 10
	set BitwiseInit_andData[235] = 10
	set BitwiseInit_andData[236] = 12
	set BitwiseInit_andData[237] = 12
	set BitwiseInit_andData[238] = 14
	set BitwiseInit_andData[239] = 14
	set BitwiseInit_andData[240] = 0
	set BitwiseInit_andData[241] = 1
	set BitwiseInit_andData[242] = 2
	set BitwiseInit_andData[243] = 3
	set BitwiseInit_andData[244] = 4
	set BitwiseInit_andData[245] = 5
	set BitwiseInit_andData[246] = 6
	set BitwiseInit_andData[247] = 7
	set BitwiseInit_andData[248] = 8
	set BitwiseInit_andData[249] = 9
	set BitwiseInit_andData[250] = 10
	set BitwiseInit_andData[251] = 11
	set BitwiseInit_andData[252] = 12
	set BitwiseInit_andData[253] = 13
	set BitwiseInit_andData[254] = 14
	set BitwiseInit_andData[255] = 15
	set BitwiseInit_xorData[0] = 0
	set BitwiseInit_xorData[1] = 1
	set BitwiseInit_xorData[2] = 2
	set BitwiseInit_xorData[3] = 3
	set BitwiseInit_xorData[4] = 4
	set BitwiseInit_xorData[5] = 5
	set BitwiseInit_xorData[6] = 6
	set BitwiseInit_xorData[7] = 7
	set BitwiseInit_xorData[8] = 8
	set BitwiseInit_xorData[9] = 9
	set BitwiseInit_xorData[10] = 10
	set BitwiseInit_xorData[11] = 11
	set BitwiseInit_xorData[12] = 12
	set BitwiseInit_xorData[13] = 13
	set BitwiseInit_xorData[14] = 14
	set BitwiseInit_xorData[15] = 15
	set BitwiseInit_xorData[16] = 1
	set BitwiseInit_xorData[17] = 0
	set BitwiseInit_xorData[18] = 3
	set BitwiseInit_xorData[19] = 2
	set BitwiseInit_xorData[20] = 5
	set BitwiseInit_xorData[21] = 4
	set BitwiseInit_xorData[22] = 7
	set BitwiseInit_xorData[23] = 6
	set BitwiseInit_xorData[24] = 9
	set BitwiseInit_xorData[25] = 8
	set BitwiseInit_xorData[26] = 11
	set BitwiseInit_xorData[27] = 10
	set BitwiseInit_xorData[28] = 13
	set BitwiseInit_xorData[29] = 12
	set BitwiseInit_xorData[30] = 15
	set BitwiseInit_xorData[31] = 14
	set BitwiseInit_xorData[32] = 2
	set BitwiseInit_xorData[33] = 3
	set BitwiseInit_xorData[34] = 0
	set BitwiseInit_xorData[35] = 1
	set BitwiseInit_xorData[36] = 6
	set BitwiseInit_xorData[37] = 7
	set BitwiseInit_xorData[38] = 4
	set BitwiseInit_xorData[39] = 5
	set BitwiseInit_xorData[40] = 10
	set BitwiseInit_xorData[41] = 11
	set BitwiseInit_xorData[42] = 8
	set BitwiseInit_xorData[43] = 9
	set BitwiseInit_xorData[44] = 14
	set BitwiseInit_xorData[45] = 15
	set BitwiseInit_xorData[46] = 12
	set BitwiseInit_xorData[47] = 13
	set BitwiseInit_xorData[48] = 3
	set BitwiseInit_xorData[49] = 2
	set BitwiseInit_xorData[50] = 1
	set BitwiseInit_xorData[51] = 0
	set BitwiseInit_xorData[52] = 7
	set BitwiseInit_xorData[53] = 6
	set BitwiseInit_xorData[54] = 5
	set BitwiseInit_xorData[55] = 4
	set BitwiseInit_xorData[56] = 11
	set BitwiseInit_xorData[57] = 10
	set BitwiseInit_xorData[58] = 9
	set BitwiseInit_xorData[59] = 8
	set BitwiseInit_xorData[60] = 15
	set BitwiseInit_xorData[61] = 14
	set BitwiseInit_xorData[62] = 13
	set BitwiseInit_xorData[63] = 12
	set BitwiseInit_xorData[64] = 4
	set BitwiseInit_xorData[65] = 5
	set BitwiseInit_xorData[66] = 6
	set BitwiseInit_xorData[67] = 7
	set BitwiseInit_xorData[68] = 0
	set BitwiseInit_xorData[69] = 1
	set BitwiseInit_xorData[70] = 2
	set BitwiseInit_xorData[71] = 3
	set BitwiseInit_xorData[72] = 12
	set BitwiseInit_xorData[73] = 13
	set BitwiseInit_xorData[74] = 14
	set BitwiseInit_xorData[75] = 15
	set BitwiseInit_xorData[76] = 8
	set BitwiseInit_xorData[77] = 9
	set BitwiseInit_xorData[78] = 10
	set BitwiseInit_xorData[79] = 11
	set BitwiseInit_xorData[80] = 5
	set BitwiseInit_xorData[81] = 4
	set BitwiseInit_xorData[82] = 7
	set BitwiseInit_xorData[83] = 6
	set BitwiseInit_xorData[84] = 1
	set BitwiseInit_xorData[85] = 0
	set BitwiseInit_xorData[86] = 3
	set BitwiseInit_xorData[87] = 2
	set BitwiseInit_xorData[88] = 13
	set BitwiseInit_xorData[89] = 12
	set BitwiseInit_xorData[90] = 15
	set BitwiseInit_xorData[91] = 14
	set BitwiseInit_xorData[92] = 9
	set BitwiseInit_xorData[93] = 8
	set BitwiseInit_xorData[94] = 11
	set BitwiseInit_xorData[95] = 10
	set BitwiseInit_xorData[96] = 6
	set BitwiseInit_xorData[97] = 7
	set BitwiseInit_xorData[98] = 4
	set BitwiseInit_xorData[99] = 5
	set BitwiseInit_xorData[100] = 2
	set BitwiseInit_xorData[101] = 3
	set BitwiseInit_xorData[102] = 0
	set BitwiseInit_xorData[103] = 1
	set BitwiseInit_xorData[104] = 14
	set BitwiseInit_xorData[105] = 15
	set BitwiseInit_xorData[106] = 12
	set BitwiseInit_xorData[107] = 13
	set BitwiseInit_xorData[108] = 10
	set BitwiseInit_xorData[109] = 11
	set BitwiseInit_xorData[110] = 8
	set BitwiseInit_xorData[111] = 9
	set BitwiseInit_xorData[112] = 7
	set BitwiseInit_xorData[113] = 6
	set BitwiseInit_xorData[114] = 5
	set BitwiseInit_xorData[115] = 4
	set BitwiseInit_xorData[116] = 3
	set BitwiseInit_xorData[117] = 2
	set BitwiseInit_xorData[118] = 1
	set BitwiseInit_xorData[119] = 0
	set BitwiseInit_xorData[120] = 15
	set BitwiseInit_xorData[121] = 14
	set BitwiseInit_xorData[122] = 13
	set BitwiseInit_xorData[123] = 12
	set BitwiseInit_xorData[124] = 11
	set BitwiseInit_xorData[125] = 10
	set BitwiseInit_xorData[126] = 9
	set BitwiseInit_xorData[127] = 8
	set BitwiseInit_xorData[128] = 8
	set BitwiseInit_xorData[129] = 9
	set BitwiseInit_xorData[130] = 10
	set BitwiseInit_xorData[131] = 11
	set BitwiseInit_xorData[132] = 12
	set BitwiseInit_xorData[133] = 13
	set BitwiseInit_xorData[134] = 14
	set BitwiseInit_xorData[135] = 15
	set BitwiseInit_xorData[136] = 0
	set BitwiseInit_xorData[137] = 1
	set BitwiseInit_xorData[138] = 2
	set BitwiseInit_xorData[139] = 3
	set BitwiseInit_xorData[140] = 4
	set BitwiseInit_xorData[141] = 5
	set BitwiseInit_xorData[142] = 6
	set BitwiseInit_xorData[143] = 7
	set BitwiseInit_xorData[144] = 9
	set BitwiseInit_xorData[145] = 8
	set BitwiseInit_xorData[146] = 11
	set BitwiseInit_xorData[147] = 10
	set BitwiseInit_xorData[148] = 13
	set BitwiseInit_xorData[149] = 12
	set BitwiseInit_xorData[150] = 15
	set BitwiseInit_xorData[151] = 14
	set BitwiseInit_xorData[152] = 1
	set BitwiseInit_xorData[153] = 0
	set BitwiseInit_xorData[154] = 3
	set BitwiseInit_xorData[155] = 2
	set BitwiseInit_xorData[156] = 5
	set BitwiseInit_xorData[157] = 4
	set BitwiseInit_xorData[158] = 7
	set BitwiseInit_xorData[159] = 6
	set BitwiseInit_xorData[160] = 10
	set BitwiseInit_xorData[161] = 11
	set BitwiseInit_xorData[162] = 8
	set BitwiseInit_xorData[163] = 9
	set BitwiseInit_xorData[164] = 14
	set BitwiseInit_xorData[165] = 15
	set BitwiseInit_xorData[166] = 12
	set BitwiseInit_xorData[167] = 13
	set BitwiseInit_xorData[168] = 2
	set BitwiseInit_xorData[169] = 3
	set BitwiseInit_xorData[170] = 0
	set BitwiseInit_xorData[171] = 1
	set BitwiseInit_xorData[172] = 6
	set BitwiseInit_xorData[173] = 7
	set BitwiseInit_xorData[174] = 4
	set BitwiseInit_xorData[175] = 5
	set BitwiseInit_xorData[176] = 11
	set BitwiseInit_xorData[177] = 10
	set BitwiseInit_xorData[178] = 9
	set BitwiseInit_xorData[179] = 8
	set BitwiseInit_xorData[180] = 15
	set BitwiseInit_xorData[181] = 14
	set BitwiseInit_xorData[182] = 13
	set BitwiseInit_xorData[183] = 12
	set BitwiseInit_xorData[184] = 3
	set BitwiseInit_xorData[185] = 2
	set BitwiseInit_xorData[186] = 1
	set BitwiseInit_xorData[187] = 0
	set BitwiseInit_xorData[188] = 7
	set BitwiseInit_xorData[189] = 6
	set BitwiseInit_xorData[190] = 5
	set BitwiseInit_xorData[191] = 4
	set BitwiseInit_xorData[192] = 12
	set BitwiseInit_xorData[193] = 13
	set BitwiseInit_xorData[194] = 14
	set BitwiseInit_xorData[195] = 15
	set BitwiseInit_xorData[196] = 8
	set BitwiseInit_xorData[197] = 9
	set BitwiseInit_xorData[198] = 10
	set BitwiseInit_xorData[199] = 11
	set BitwiseInit_xorData[200] = 4
	set BitwiseInit_xorData[201] = 5
	set BitwiseInit_xorData[202] = 6
	set BitwiseInit_xorData[203] = 7
	set BitwiseInit_xorData[204] = 0
	set BitwiseInit_xorData[205] = 1
	set BitwiseInit_xorData[206] = 2
	set BitwiseInit_xorData[207] = 3
	set BitwiseInit_xorData[208] = 13
	set BitwiseInit_xorData[209] = 12
	set BitwiseInit_xorData[210] = 15
	set BitwiseInit_xorData[211] = 14
	set BitwiseInit_xorData[212] = 9
	set BitwiseInit_xorData[213] = 8
	set BitwiseInit_xorData[214] = 11
	set BitwiseInit_xorData[215] = 10
	set BitwiseInit_xorData[216] = 5
	set BitwiseInit_xorData[217] = 4
	set BitwiseInit_xorData[218] = 7
	set BitwiseInit_xorData[219] = 6
	set BitwiseInit_xorData[220] = 1
	set BitwiseInit_xorData[221] = 0
	set BitwiseInit_xorData[222] = 3
	set BitwiseInit_xorData[223] = 2
	set BitwiseInit_xorData[224] = 14
	set BitwiseInit_xorData[225] = 15
	set BitwiseInit_xorData[226] = 12
	set BitwiseInit_xorData[227] = 13
	set BitwiseInit_xorData[228] = 10
	set BitwiseInit_xorData[229] = 11
	set BitwiseInit_xorData[230] = 8
	set BitwiseInit_xorData[231] = 9
	set BitwiseInit_xorData[232] = 6
	set BitwiseInit_xorData[233] = 7
	set BitwiseInit_xorData[234] = 4
	set BitwiseInit_xorData[235] = 5
	set BitwiseInit_xorData[236] = 2
	set BitwiseInit_xorData[237] = 3
	set BitwiseInit_xorData[238] = 0
	set BitwiseInit_xorData[239] = 1
	set BitwiseInit_xorData[240] = 15
	set BitwiseInit_xorData[241] = 14
	set BitwiseInit_xorData[242] = 13
	set BitwiseInit_xorData[243] = 12
	set BitwiseInit_xorData[244] = 11
	set BitwiseInit_xorData[245] = 10
	set BitwiseInit_xorData[246] = 9
	set BitwiseInit_xorData[247] = 8
	set BitwiseInit_xorData[248] = 7
	set BitwiseInit_xorData[249] = 6
	set BitwiseInit_xorData[250] = 5
	set BitwiseInit_xorData[251] = 4
	set BitwiseInit_xorData[252] = 3
	set BitwiseInit_xorData[253] = 2
	set BitwiseInit_xorData[254] = 1
	set BitwiseInit_xorData[255] = 0
	call initBitwise()
	return true
endfunction

function init_Buildings takes nothing returns boolean
	return true
endfunction

function new_OrderStringFactory takes nothing returns integer
	local integer this_54
	if OrderStringFactory_firstFree == 0 then
		if OrderStringFactory_maxIndex < 32768 then
			set OrderStringFactory_maxIndex = OrderStringFactory_maxIndex + 1
			set this_54 = OrderStringFactory_maxIndex
		else
			call error("Out of memory: Could not create OrderStringFactory.")
			set this_54 = 0
		endif
	else
		set OrderStringFactory_firstFree = OrderStringFactory_firstFree - 1
		set this_54 = OrderStringFactory_nextFree[OrderStringFactory_firstFree]
	endif
	return this_54
endfunction

function init_ChannelAbilityPreset takes nothing returns boolean
	call new_OrderStringFactory()
	return true
endfunction

function init_ClosureEvents takes nothing returns boolean
	local integer this_54
	set ClosureEvents_EVENT_PLAYER_CHAT_FILTER = ConvertPlayerEvent(96)
	set EventListener_castMap = new_HashMap()
	set EventListener_castMapCasters = new_HashMap()
	set ClosureEvents_unitTrig = CreateTrigger()
	set ClosureEvents_leaveTrig = CreateTrigger()
	set ClosureEvents_keyTrig = CreateTrigger()
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_54 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_54] = 662
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_54 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_54] = 662
	endif
	call CallbackSingle_start(this_54, 0.)
	return true
endfunction

function init_ClosureForGroups takes nothing returns boolean
	set ClosureForGroups_DUMMY_GROUP = CreateGroup()
	set ClosureForGroups_filter = Filter(ref_function_ClosureForGroups_closure_impl)
	return true
endfunction

function init_ClosureTimers takes nothing returns boolean
	set ClosureTimers_x = 200
	return true
endfunction

function init_CodegenUtils takes nothing returns boolean
	set CodegenUtils_REGISTRIES = InitHashtable()
	return true
endfunction

function init_ColorUtil takes nothing returns boolean
	set ColorUtil_colors = new_HashMap()
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("red"), 0)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("blue"), 1)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("teal"), 2)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("purple"), 3)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("yellow"), 4)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("orange"), 5)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("green"), 6)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("pink"), 7)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("gray"), 8)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("light blue"), 9)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("lightblue"), 9)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("lb"), 9)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("dark green"), 10)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("darkgreen"), 10)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("dg"), 10)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("brown"), 11)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("maroon"), 12)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("navy"), 13)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("turquoise"), 14)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("violet"), 15)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("wheat"), 16)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("peach"), 17)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("mint"), 18)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("lavender"), 19)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("coal"), 20)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("snow"), 21)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("emerald"), 22)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("peanut"), 23)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("black"), 24)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("red2"), 12)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("blue2"), 13)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("teal2"), 14)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("purple2"), 15)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("yellow2"), 16)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("orange2"), 17)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("green2"), 18)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("pink2"), 19)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("gray2"), 20)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("white"), 21)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("lightblue2"), 21)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("lb2"), 21)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("darkgreen2"), 22)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("dg2"), 22)
	call dispatch_HashMap_HashMap_HashMap_put(ColorUtil_colors, StringHash("brown2"), 23)
	return true
endfunction

function initializeTable takes nothing returns nothing
	local integer i_3 = 0
	loop
		exitwhen i_3 > 15
		call SaveInteger(Table_ht, Colors_decs, StringHash(Colors_hexs[i_3]), i_3)
		set i_3 = i_3 + 1
	endloop
endfunction

function init_Colors takes nothing returns boolean
	set Colors_PLAYER_COLORS_red[0] = 255
	set Colors_PLAYER_COLORS_green[0] = 2
	set Colors_PLAYER_COLORS_blue[0] = 2
	set Colors_PLAYER_COLORS_red[1] = 0
	set Colors_PLAYER_COLORS_green[1] = 65
	set Colors_PLAYER_COLORS_blue[1] = 255
	set Colors_PLAYER_COLORS_red[2] = 27
	set Colors_PLAYER_COLORS_green[2] = 229
	set Colors_PLAYER_COLORS_blue[2] = 184
	set Colors_PLAYER_COLORS_red[3] = 83
	set Colors_PLAYER_COLORS_green[3] = 0
	set Colors_PLAYER_COLORS_blue[3] = 128
	set Colors_PLAYER_COLORS_red[4] = 255
	set Colors_PLAYER_COLORS_green[4] = 252
	set Colors_PLAYER_COLORS_blue[4] = 0
	set Colors_PLAYER_COLORS_red[5] = 254
	set Colors_PLAYER_COLORS_green[5] = 137
	set Colors_PLAYER_COLORS_blue[5] = 13
	set Colors_PLAYER_COLORS_red[6] = 31
	set Colors_PLAYER_COLORS_green[6] = 191
	set Colors_PLAYER_COLORS_blue[6] = 0
	set Colors_PLAYER_COLORS_red[7] = 228
	set Colors_PLAYER_COLORS_green[7] = 90
	set Colors_PLAYER_COLORS_blue[7] = 175
	set Colors_PLAYER_COLORS_red[8] = 148
	set Colors_PLAYER_COLORS_green[8] = 149
	set Colors_PLAYER_COLORS_blue[8] = 150
	set Colors_PLAYER_COLORS_red[9] = 125
	set Colors_PLAYER_COLORS_green[9] = 190
	set Colors_PLAYER_COLORS_blue[9] = 241
	set Colors_PLAYER_COLORS_red[10] = 15
	set Colors_PLAYER_COLORS_green[10] = 97
	set Colors_PLAYER_COLORS_blue[10] = 69
	set Colors_PLAYER_COLORS_red[11] = 77
	set Colors_PLAYER_COLORS_green[11] = 41
	set Colors_PLAYER_COLORS_blue[11] = 3
	set Colors_PLAYER_COLORS_red[12] = 155
	set Colors_PLAYER_COLORS_green[12] = 0
	set Colors_PLAYER_COLORS_blue[12] = 0
	set Colors_PLAYER_COLORS_red[13] = 0
	set Colors_PLAYER_COLORS_green[13] = 0
	set Colors_PLAYER_COLORS_blue[13] = 195
	set Colors_PLAYER_COLORS_red[14] = 0
	set Colors_PLAYER_COLORS_green[14] = 234
	set Colors_PLAYER_COLORS_blue[14] = 255
	set Colors_PLAYER_COLORS_red[15] = 190
	set Colors_PLAYER_COLORS_green[15] = 0
	set Colors_PLAYER_COLORS_blue[15] = 254
	set Colors_PLAYER_COLORS_red[16] = 235
	set Colors_PLAYER_COLORS_green[16] = 205
	set Colors_PLAYER_COLORS_blue[16] = 135
	set Colors_PLAYER_COLORS_red[17] = 248
	set Colors_PLAYER_COLORS_green[17] = 164
	set Colors_PLAYER_COLORS_blue[17] = 139
	set Colors_PLAYER_COLORS_red[18] = 191
	set Colors_PLAYER_COLORS_green[18] = 255
	set Colors_PLAYER_COLORS_blue[18] = 128
	set Colors_PLAYER_COLORS_red[19] = 220
	set Colors_PLAYER_COLORS_green[19] = 185
	set Colors_PLAYER_COLORS_blue[19] = 235
	set Colors_PLAYER_COLORS_red[20] = 40
	set Colors_PLAYER_COLORS_green[20] = 40
	set Colors_PLAYER_COLORS_blue[20] = 40
	set Colors_PLAYER_COLORS_red[21] = 235
	set Colors_PLAYER_COLORS_green[21] = 240
	set Colors_PLAYER_COLORS_blue[21] = 255
	set Colors_PLAYER_COLORS_red[22] = 0
	set Colors_PLAYER_COLORS_green[22] = 120
	set Colors_PLAYER_COLORS_blue[22] = 30
	set Colors_PLAYER_COLORS_red[23] = 164
	set Colors_PLAYER_COLORS_green[23] = 11
	set Colors_PLAYER_COLORS_blue[23] = 51
	set Colors_hexs[0] = "0"
	set Colors_hexs[1] = "1"
	set Colors_hexs[2] = "2"
	set Colors_hexs[3] = "3"
	set Colors_hexs[4] = "4"
	set Colors_hexs[5] = "5"
	set Colors_hexs[6] = "6"
	set Colors_hexs[7] = "7"
	set Colors_hexs[8] = "8"
	set Colors_hexs[9] = "9"
	set Colors_hexs[10] = "A"
	set Colors_hexs[11] = "B"
	set Colors_hexs[12] = "C"
	set Colors_hexs[13] = "D"
	set Colors_hexs[14] = "E"
	set Colors_hexs[15] = "F"
	set Colors_decs = new_Table()
	call initializeTable()
	return true
endfunction

function new_ScriptContext takes nothing returns integer
	local integer this_54
	if ScriptContext_firstFree == 0 then
		if ScriptContext_maxIndex < 32768 then
			set ScriptContext_maxIndex = ScriptContext_maxIndex + 1
			set this_54 = ScriptContext_maxIndex
		else
			call error("Out of memory: Could not create ScriptContext.")
			set this_54 = 0
		endif
	else
		set ScriptContext_firstFree = ScriptContext_firstFree - 1
		set this_54 = ScriptContext_nextFree[ScriptContext_firstFree]
	endif
	set ScriptContext_variableContext[this_54] = new_Table()
	return this_54
endfunction

function new_CommandExecutor takes player owner_4 returns integer
	local integer this_54
	if CommandExecutor_firstFree == 0 then
		if CommandExecutor_maxIndex < 32768 then
			set CommandExecutor_maxIndex = CommandExecutor_maxIndex + 1
			set this_54 = CommandExecutor_maxIndex
		else
			call error("Out of memory: Could not create CommandExecutor.")
			set this_54 = 0
		endif
	else
		set CommandExecutor_firstFree = CommandExecutor_firstFree - 1
		set this_54 = CommandExecutor_nextFree[CommandExecutor_firstFree]
	endif
	set CommandExecutor_contextList[this_54] = new_LinkedList()
	set CommandExecutor_scriptContext[this_54] = new_ScriptContext()
	set CommandExecutor_owner[this_54] = owner_4
	return this_54
endfunction

function CommandExecutor_createExecutors takes nothing returns nothing
	local integer i_3
	local integer temp
	local player who_2
	local integer executor
	if PlayerCallback_firstFree == 0 then
		if PlayerCallback_maxIndex < 32768 then
			set PlayerCallback_maxIndex = PlayerCallback_maxIndex + 1
		else
			call error("Out of memory: Could not create Closure.")
		endif
	else
		set PlayerCallback_firstFree = PlayerCallback_firstFree - 1
	endif
	set i_3 = 0
	set temp = bj_MAX_PLAYER_SLOTS - 1
	loop
		exitwhen i_3 > temp
		set who_2 = Player_players[i_3]
		set executor = new_CommandExecutor(who_2)
		call dispatch_HashMap_HashMap_HashMap_put(CommandExecutor_executors, GetPlayerId(who_2), executor)
		set i_3 = i_3 + 1
	endloop
	set who_2 = null
endfunction

function init_Command takes nothing returns boolean
	set CommandRegistry_registry = new_HashMap()
	set CommandExecutor_executors = new_HashMap()
	call CommandExecutor_createExecutors()
	return true
endfunction

function init_Config takes nothing returns boolean
	return true
endfunction

function init_DestructableUtil takes nothing returns boolean
	call new_Table()
	return true
endfunction

function init_Doodads takes nothing returns boolean
	return true
endfunction

function createDummy takes real pos_x, real pos_y, player owner_4, real facing_radians returns unit
	local unit u = CreateUnit(owner_4, 2019849581, pos_x, pos_y, facing_radians * 57.295779513)
	call SetUnitX(u, pos_x)
	call SetUnitY(u, pos_y)
	call UnitAddAbility(u, 1097691750)
	call UnitRemoveAbility(u, 1097691750)
	call UnitAddAbility(u, 1097625443)
	set createDummytempReturn = u
	set u = null
	return createDummytempReturn
endfunction

function new_ArrayQueue takes nothing returns integer
	local integer this_54
	if ArrayQueue_firstFree == 0 then
		if ArrayQueue_maxIndex < 32768 then
			set ArrayQueue_maxIndex = ArrayQueue_maxIndex + 1
			set this_54 = ArrayQueue_maxIndex
		else
			call error("Out of memory: Could not create ArrayQueue.")
			set this_54 = 0
		endif
	else
		set ArrayQueue_firstFree = ArrayQueue_firstFree - 1
		set this_54 = ArrayQueue_nextFree[ArrayQueue_firstFree]
	endif
	set ArrayQueue_rp[this_54] = 0
	set ArrayQueue_size[this_54] = 0
	return this_54
endfunction

function init_DummyRecycler takes nothing returns boolean
	local integer i_3
	local integer temp
	local integer j
	local integer temp_2
	local integer this_54
	set DummyRecycler_ANGLE_DEGREE = 360 * 1. / 8
	call CreateTimer()
	set i_3 = 0
	set temp = 7
	loop
		exitwhen i_3 > temp
		set DummyRecycler_angleQueues[i_3] = new_ArrayQueue()
		set j = 0
		set temp_2 = 5
		loop
			exitwhen j > temp_2
			set this_54 = DummyRecycler_angleQueues[i_3]
			call createDummy(MapBounds_boundMax_x, MapBounds_boundMax_y, Basics_DUMMY_PLAYER, i_3 * DummyRecycler_ANGLE_DEGREE * 0.017453293)
			if ArrayQueue_size[this_54] < 6 then
				set ArrayQueue_size[this_54] = ArrayQueue_size[this_54] + 1
				set ArrayQueue_rp[this_54] = ModuloInteger(ArrayQueue_rp[this_54] + 1, 6)
			else
				call error("Queue Overflow")
			endif
			set j = j + 1
		endloop
		set i_3 = i_3 + 1
	endloop
	return true
endfunction

function init_EffectProxy takes nothing returns boolean
	local integer this_54
	local integer this_55
	call vec3_toQuat(0., 0., 1., 0.017453292)
	call vec3_toQuat(0., 1., 0., 0.017453292)
	call vec3_toQuat(1., 0., 0., 0.017453292)
	if Iterator_firstFree == 0 then
		if Iterator_maxIndex < 32768 then
			set Iterator_maxIndex = Iterator_maxIndex + 1
			set this_54 = Iterator_maxIndex
		else
			call error("Out of memory: Could not create Iterator.")
			set this_54 = 0
		endif
	else
		set Iterator_firstFree = Iterator_firstFree - 1
		set this_54 = Iterator_nextFree[Iterator_firstFree]
	endif
	set Iterator_current[this_54] = DynamicEffectProxy_LinkedListModule_first
	set DynamicEffectProxy_LinkedListModule_staticItr = this_54
	if BackIterator_firstFree == 0 then
		if BackIterator_maxIndex < 32768 then
			set BackIterator_maxIndex = BackIterator_maxIndex + 1
		else
			call error("Out of memory: Could not create BackIterator.")
		endif
	else
		set BackIterator_firstFree = BackIterator_firstFree - 1
	endif
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set this_55 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[this_55] = 657
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set this_55 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[this_55] = 657
	endif
	call CallbackPeriodic_start(this_55, 0.030)
	if Iterator_firstFree_2 == 0 then
		if Iterator_maxIndex_2 < 32768 then
			set Iterator_maxIndex_2 = Iterator_maxIndex_2 + 1
		else
			call error("Out of memory: Could not create Iterator.")
		endif
	else
		set Iterator_firstFree_2 = Iterator_firstFree_2 - 1
	endif
	if BackIterator_firstFree_2 == 0 then
		if BackIterator_maxIndex_2 < 32768 then
			set BackIterator_maxIndex_2 = BackIterator_maxIndex_2 + 1
		else
			call error("Out of memory: Could not create BackIterator.")
		endif
	else
		set BackIterator_firstFree_2 = BackIterator_firstFree_2 - 1
	endif
	return true
endfunction

function init_ErrorHandling takes nothing returns boolean
	set ErrorHandling_HT = InitHashtable()
	set ErrorHandling_lastError = ""
	return true
endfunction

function init_EventHelper takes nothing returns boolean
	call new_HashMap()
	call new_HashMap()
	call new_Table()
	return true
endfunction

function init_Execute takes nothing returns boolean
	set Execute_executeForce = CreateForce()
	call ForceAddPlayer(Execute_executeForce, Player_localPlayer)
	return true
endfunction

function new_FormationSettings takes nothing returns integer
	local integer this_54
	if FormationSettings_firstFree == 0 then
		if FormationSettings_maxIndex < 32768 then
			set FormationSettings_maxIndex = FormationSettings_maxIndex + 1
			set this_54 = FormationSettings_maxIndex
		else
			call error("Out of memory: Could not create FormationSettings.")
			set this_54 = 0
		endif
	else
		set FormationSettings_firstFree = FormationSettings_firstFree - 1
		set this_54 = FormationSettings_nextFree[FormationSettings_firstFree]
	endif
	set FormationSettings_rectWidth[this_54] = 4
	set FormationSettings_rectVertSpacing[this_54] = 64.
	set FormationSettings_rectHorizSpacing[this_54] = 64.
	return this_54
endfunction

function new_HashSet takes nothing returns integer
	local integer this_54
	if HashList_firstFree == 0 then
		if HashList_maxIndex < 32768 then
			set HashList_maxIndex = HashList_maxIndex + 1
			set this_54 = HashList_maxIndex
			set HashList_typeId[this_54] = 825
		else
			call error("Out of memory: Could not create HashSet.")
			set this_54 = 0
		endif
	else
		set HashList_firstFree = HashList_firstFree - 1
		set this_54 = HashList_nextFree[HashList_firstFree]
		set HashList_typeId[this_54] = 825
	endif
	set HashList_size[this_54] = 0
	return this_54
endfunction

function init_FormationMovement takes nothing returns boolean
	local integer i_3
	local integer temp
	local playerunitevent temp_2
	local integer this_54
	local integer id
	local integer this_55
	set FormationMovement_frameProcessedUnits = new_HashSet()
	set i_3 = 0
	set temp = bj_MAX_PLAYERS - 1
	loop
		exitwhen i_3 > temp
		set FormationMovement_playerFormationModes[i_3] = new_FormationSettings()
		set i_3 = i_3 + 1
	endloop
	set temp_2 = EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_54 = EventListener_maxIndex
			set EventListener_typeId[this_54] = 766
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_54 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_54] = 766
	endif
	set EventListener_eventId[this_54] = 0
	set EventListener_next[this_54] = 0
	set EventListener_prev[this_54] = 0
	set id = ClosureEvents_eventidToIndex[GetHandleId(temp_2)]
	if id == 0 then
		set id = registerEventId(temp_2)
	endif
	set EventListener_eventId[this_54] = id
	if EventListener_generalListenersFirsts[EventListener_eventId[this_54]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[this_54]]] = this_54
		set EventListener_next[this_54] = EventListener_generalListenersFirsts[EventListener_eventId[this_54]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[this_54]] = this_54
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set this_55 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[this_55] = 658
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set this_55 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[this_55] = 658
	endif
	call CallbackPeriodic_start(this_55, 0.089999996)
	set temp_2 = null
	return true
endfunction

function init_GameTimer takes nothing returns boolean
	set GameTimer_gameTimer = CreateTimer()
	call TimerStart(GameTimer_gameTimer, 100000., false, null)
	call TimerStart(CreateTimer(), 0.030, true, ref_function_GameTimer_closure_impl)
	return true
endfunction

function init_GamecacheKeys takes nothing returns boolean
	local integer i_3 = 1
	local integer temp = 2
	local integer this_54
	loop
		exitwhen i_3 > temp
		if ForForceCallback_firstFree == 0 then
			if ForForceCallback_maxIndex < 32768 then
				set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
				set this_54 = ForForceCallback_maxIndex
				set ForForceCallback_typeId[this_54] = 793
			else
				call error("Out of memory: Could not create Closure.")
				set this_54 = 0
			endif
		else
			set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
			set this_54 = ForForceCallback_nextFree[ForForceCallback_firstFree]
			set ForForceCallback_typeId[this_54] = 793
		endif
		set i[this_54] = i_3
		if  not try(this_54) then
			call error("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
		endif
		set i_3 = i_3 + 1
	endloop
	return true
endfunction

function init_Group takes nothing returns boolean
	set Group_ENUM_GROUP = CreateGroup()
	return true
endfunction

function init_HashList takes nothing returns boolean
	set HashList_ht = InitHashtable()
	set HashList_occurences = InitHashtable()
	return true
endfunction

function init_HashSet takes nothing returns boolean
	set HashSet_position = InitHashtable()
	return true
endfunction

function HeightField_scan takes nothing returns nothing
	local integer iter_11 = new_RectTileIterator(MapBounds_boundRect)
	local integer this_54
	local integer this_55
	if LimitedExecuteCondition_firstFree == 0 then
		if LimitedExecuteCondition_maxIndex < 32768 then
			set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
			set this_54 = LimitedExecuteCondition_maxIndex
			set LimitedExecuteCondition_typeId[this_54] = 874
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
		set this_54 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
		set LimitedExecuteCondition_typeId[this_54] = 874
	endif
	set iter_5[this_54] = iter_11
	if LimitedExecuteAction_firstFree == 0 then
		if LimitedExecuteAction_maxIndex < 32768 then
			set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
			set this_55 = LimitedExecuteAction_maxIndex
			set LimitedExecuteAction_typeId[this_55] = 850
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
		set this_55 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
		set LimitedExecuteAction_typeId[this_55] = 850
	endif
	set iter_6[this_55] = iter_11
	call executeWhile(1024, this_54, this_55)
	if RectTileIterator_typeId[iter_11] == 0 then
		call error("Double free: object of type RectTileIterator")
	else
		set RectTileIterator_nextFree[RectTileIterator_firstFree] = iter_11
		set RectTileIterator_firstFree = RectTileIterator_firstFree + 1
		set RectTileIterator_typeId[iter_11] = 0
	endif
endfunction

function init_HeightField takes nothing returns boolean
	set HeightField_heightFieldOriginal = InitHashtable()
	set HeightField_heightFieldModified = InitHashtable()
	call HeightField_scan()
	return true
endfunction

function init_HeightTools takes nothing returns boolean
	return true
endfunction

function init_Icons takes nothing returns boolean
	return true
endfunction

function init_InstantBuild takes nothing returns boolean
	local playerunitevent temp
	local playerunitevent temp_2
	local integer this_54
	local integer id
	local integer this_55
	local integer id_2
	set InstantBuild_builders = new_LinkedList()
	set temp = EVENT_PLAYER_UNIT_CONSTRUCT_START
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_54 = EventListener_maxIndex
			set EventListener_typeId[this_54] = 767
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_54 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_54] = 767
	endif
	set EventListener_eventId[this_54] = 0
	set EventListener_next[this_54] = 0
	set EventListener_prev[this_54] = 0
	set id = ClosureEvents_eventidToIndex[GetHandleId(temp)]
	if id == 0 then
		set id = registerEventId(temp)
	endif
	set EventListener_eventId[this_54] = id
	if EventListener_generalListenersFirsts[EventListener_eventId[this_54]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[this_54]]] = this_54
		set EventListener_next[this_54] = EventListener_generalListenersFirsts[EventListener_eventId[this_54]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[this_54]] = this_54
	set temp_2 = EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_55 = EventListener_maxIndex
			set EventListener_typeId[this_55] = 768
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_55 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_55] = 768
	endif
	set EventListener_eventId[this_55] = 0
	set EventListener_next[this_55] = 0
	set EventListener_prev[this_55] = 0
	set id_2 = ClosureEvents_eventidToIndex[GetHandleId(temp_2)]
	if id_2 == 0 then
		set id_2 = registerEventId(temp_2)
	endif
	set EventListener_eventId[this_55] = id_2
	if EventListener_generalListenersFirsts[EventListener_eventId[this_55]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[this_55]]] = this_55
		set EventListener_next[this_55] = EventListener_generalListenersFirsts[EventListener_eventId[this_55]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[this_55]] = this_55
	set temp = null
	set temp_2 = null
	return true
endfunction

function init_Integer takes nothing returns boolean
	set Integer_hexs[0] = "0"
	set Integer_hexs[1] = "1"
	set Integer_hexs[2] = "2"
	set Integer_hexs[3] = "3"
	set Integer_hexs[4] = "4"
	set Integer_hexs[5] = "5"
	set Integer_hexs[6] = "6"
	set Integer_hexs[7] = "7"
	set Integer_hexs[8] = "8"
	set Integer_hexs[9] = "9"
	set Integer_hexs[10] = "A"
	set Integer_hexs[11] = "B"
	set Integer_hexs[12] = "C"
	set Integer_hexs[13] = "D"
	set Integer_hexs[14] = "E"
	set Integer_hexs[15] = "F"
	return true
endfunction

function init_Lightning takes nothing returns boolean
	return true
endfunction

function init_LinkedList takes nothing returns boolean
	if Comparator_firstFree == 0 then
		if Comparator_maxIndex < 32768 then
			set Comparator_maxIndex = Comparator_maxIndex + 1
		else
			call error("Out of memory: Could not create Closure.")
		endif
	else
		set Comparator_firstFree = Comparator_firstFree - 1
	endif
	if Comparator_firstFree == 0 then
		if Comparator_maxIndex < 32768 then
			set Comparator_maxIndex = Comparator_maxIndex + 1
		else
			call error("Out of memory: Could not create Closure.")
		endif
	else
		set Comparator_firstFree = Comparator_firstFree - 1
	endif
	return true
endfunction

function init_MagicFunctions takes nothing returns boolean
	return true
endfunction

function initMapBounds takes nothing returns nothing
	local rect cond_result
	local region receiver
	local real temp
	local real temp_2
	local real temp_3
	local real temp_4
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	local real tuple_temp_4
	local real tuple_temp_5
	set MapBounds_playableMapRect = bj_mapInitialPlayableArea
	call RegionAddRect(CreateRegion(), MapBounds_playableMapRect)
	set cond_result = GetWorldBounds()
	set MapBounds_boundRect = cond_result
	set receiver = CreateRegion()
	call RegionAddRect(receiver, MapBounds_boundRect)
	set MapBounds_boundRegion = receiver
	set temp = GetRectMinX(MapBounds_playableMapRect)
	set tuple_temp = GetRectMinY(MapBounds_playableMapRect)
	set MapBounds_playableMin_x = temp
	set MapBounds_playableMin_y = tuple_temp
	set temp_2 = GetRectMaxX(MapBounds_playableMapRect)
	set tuple_temp_2 = GetRectMaxY(MapBounds_playableMapRect)
	set MapBounds_playableMax_x = temp_2
	set MapBounds_playableMax_y = tuple_temp_2
	set temp_3 = GetRectMinX(MapBounds_boundRect)
	set tuple_temp_3 = GetRectMinY(MapBounds_boundRect)
	set MapBounds_boundMin_x = temp_3
	set MapBounds_boundMin_y = tuple_temp_3
	set temp_4 = GetRectMaxX(MapBounds_boundRect)
	set tuple_temp_4 = GetRectMaxY(MapBounds_boundRect)
	set MapBounds_boundMax_x = temp_4
	set MapBounds_boundMax_y = tuple_temp_4
	set tuple_temp_5 = MapBounds_playableMin_y + MapBounds_playableMax_y
	set MapBounds_playableCenter_x = (MapBounds_playableMin_x + MapBounds_playableMax_x) * .5
	set MapBounds_playableCenter_y = tuple_temp_5 * .5
endfunction

function init_MapBounds takes nothing returns boolean
	call initMapBounds()
	return true
endfunction

function init_Maths takes nothing returns boolean
	return true
endfunction

function init_Matrices takes nothing returns boolean
	return true
endfunction

function init_Metadata takes nothing returns boolean
	set MetadataStore_META_CACHE = InitGameCache("m.w3v")
	if 0 >= GamecacheKeys_count then
		call error("Network: trying to get invalid GC key")
	endif
	set MetadataStore_META_INTEGER_KEY = GamecacheKeys_keys[0]
	if 1 >= GamecacheKeys_count then
		call error("Network: trying to get invalid GC key")
	endif
	set MetadataStore_META_REAL_KEY = GamecacheKeys_keys[1]
	if 2 >= GamecacheKeys_count then
		call error("Network: trying to get invalid GC key")
	endif
	set MetadataStore_META_BOOLEAN_KEY = GamecacheKeys_keys[2]
	if 3 >= GamecacheKeys_count then
		call error("Network: trying to get invalid GC key")
	endif
	set MetadataStore_META_STRING_KEY = GamecacheKeys_keys[3]
	if 4 >= GamecacheKeys_count then
		call error("Network: trying to get invalid GC key")
	endif
	set MetadataStore_META_SYNC_ROUNDS_KEY = GamecacheKeys_keys[4]
	return true
endfunction

function init_MiscCommands takes nothing returns boolean
	local integer this_54
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_54 = Command_maxIndex
			set Command_typeId[this_54] = 677
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_54 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_54] = 677
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("form"), this_54)
	return true
endfunction

function initChat takes nothing returns nothing
	local playerevent temp = ClosureEvents_EVENT_PLAYER_CHAT_FILTER
	local integer this_54
	local integer id
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_54 = EventListener_maxIndex
			set EventListener_typeId[this_54] = 769
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_54 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_54] = 769
	endif
	set EventListener_eventId[this_54] = 0
	set EventListener_next[this_54] = 0
	set EventListener_prev[this_54] = 0
	set id = ClosureEvents_eventidToIndex[GetHandleId(temp)]
	if id == 0 then
		set id = registerEventId(temp)
	endif
	set EventListener_eventId[this_54] = id
	if EventListener_generalListenersFirsts[EventListener_eventId[this_54]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[this_54]]] = this_54
		set EventListener_next[this_54] = EventListener_generalListenersFirsts[EventListener_eventId[this_54]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[this_54]] = this_54
	set temp = null
endfunction

function initSell takes nothing returns nothing
	local playerunitevent temp = EVENT_PLAYER_UNIT_SELL
	local integer this_54
	local integer id
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_54 = EventListener_maxIndex
			set EventListener_typeId[this_54] = 770
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_54 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_54] = 770
	endif
	set EventListener_eventId[this_54] = 0
	set EventListener_next[this_54] = 0
	set EventListener_prev[this_54] = 0
	set id = ClosureEvents_eventidToIndex[GetHandleId(temp)]
	if id == 0 then
		set id = registerEventId(temp)
	endif
	set EventListener_eventId[this_54] = id
	if EventListener_generalListenersFirsts[EventListener_eventId[this_54]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[this_54]]] = this_54
		set EventListener_next[this_54] = EventListener_generalListenersFirsts[EventListener_eventId[this_54]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[this_54]] = this_54
	set temp = null
endfunction

function placeShop takes player owner_4, integer id, real x, real y returns nothing
	call CreateUnit(owner_4, id, x, y, 0)
endfunction

function registerPlayerEvent takes playerevent p, code condition_2, code action_2 returns nothing
	local integer hid = GetHandleId(p)
	local integer k
	if RegisterEvents_t[hid] == null then
		set RegisterEvents_t[hid] = CreateTrigger()
		set k = bj_MAX_PLAYER_SLOTS - 1
		loop
			exitwhen k < 0
			call TriggerRegisterPlayerEvent(RegisterEvents_t[hid], Player_players[k], p)
			set k = k - 1
		endloop
	endif
	if condition_2 != null then
		call TriggerAddCondition(RegisterEvents_t[hid], Filter(condition_2))
	endif
	if action_2 != null then
		call TriggerAddAction(RegisterEvents_t[hid], action_2)
	endif
endfunction

function init_MiscInit takes nothing returns boolean
	local player neutral = Player_players[bj_PLAYER_NEUTRAL_EXTRA]
	local integer i_3 = 0
	local integer temp = bj_MAX_PLAYERS - 1
	local player who_2
	local integer i_4
	local integer temp_2
	local integer j
	local integer temp_3
	local player source
	local player target
	local integer i_5
	local integer temp_4
	local player owner_4
	loop
		exitwhen i_3 > temp
		set who_2 = Player_players[i_3]
		call SetPlayerAllianceStateBJ(who_2, neutral, bj_ALLIANCE_ALLIED_ADVUNITS)
		call SetPlayerAllianceStateBJ(neutral, who_2, bj_ALLIANCE_ALLIED_ADVUNITS)
		set i_3 = i_3 + 1
	endloop
	call initChat()
	call registerPlayerEvent(EVENT_PLAYER_LEAVE, null, ref_function_MiscInit_closure_impl)
	set i_4 = 0
	set temp_2 = bj_MAX_PLAYERS
	loop
		exitwhen i_4 > temp_2
		set j = 0
		set temp_3 = bj_MAX_PLAYERS
		loop
			exitwhen j > temp_3
			if i_4 != j then
				set source = Player_players[i_4]
				set target = Player_players[j]
				call SetPlayerAlliance(source, target, ALLIANCE_PASSIVE, true)
				call SetPlayerAlliance(source, target, ALLIANCE_SHARED_VISION, true)
				call SetPlayerAlliance(source, target, ALLIANCE_SHARED_SPELLS, true)
				call SetPlayerAlliance(source, target, ALLIANCE_HELP_REQUEST, false)
				call SetPlayerAlliance(source, target, ALLIANCE_HELP_RESPONSE, false)
				call SetPlayerAlliance(source, target, ALLIANCE_SHARED_XP, false)
				call SetPlayerAlliance(source, target, ALLIANCE_SHARED_CONTROL, false)
				call SetPlayerAlliance(source, target, ALLIANCE_SHARED_ADVANCED_CONTROL, false)
				call SetPlayerAlliance(source, target, ALLIANCE_RESCUABLE, false)
				call SetPlayerAlliance(source, target, ALLIANCE_SHARED_VISION_FORCED, false)
			endif
			set j = j + 1
		endloop
		set i_4 = i_4 + 1
	endloop
	call initSell()
	set i_5 = 0
	set temp_4 = bj_MAX_PLAYERS
	loop
		exitwhen i_5 > temp_4
		call FogModifierStart(CreateFogModifierRect(Player_players[i_5], FOG_OF_WAR_VISIBLE, MapBounds_playableMapRect, false, false))
		set i_5 = i_5 + 1
	endloop
	set owner_4 = Player_players[bj_PLAYER_NEUTRAL_EXTRA]
	call placeShop(owner_4, 2016425014, 0, 0)
	call placeShop(owner_4, 2016425015, 128, 0)
	call placeShop(owner_4, 2016425016, 256, 0)
	call placeShop(owner_4, 2016425017, 384, 0)
	call placeShop(owner_4, 2016425057, 512, 0)
	call placeShop(owner_4, 2016425058, 640, 0)
	call placeShop(owner_4, 2016425059, 768, 0)
	call placeShop(owner_4, 2016425060, 896, 0)
	call placeShop(owner_4, 2016425061, 0, -128)
	call placeShop(owner_4, 2016425062, 128, -128)
	call placeShop(owner_4, 2016425063, 256, -128)
	call placeShop(owner_4, 2016425064, 384, -128)
	call placeShop(owner_4, 2016425065, 512, -128)
	call placeShop(owner_4, 2016425066, 640, -128)
	call placeShop(owner_4, 2016425067, 768, -128)
	call placeShop(owner_4, 2016425068, 896, -128)
	call placeShop(owner_4, 2016425069, 0, -256)
	call placeShop(owner_4, 2016425070, 128, -256)
	call placeShop(owner_4, 2016425071, 256, -256)
	call placeShop(owner_4, 2016425072, 384, -256)
	call placeShop(owner_4, 2016425073, 512, -256)
	call placeShop(owner_4, 2016425074, 640, -256)
	call placeShop(owner_4, 2016425075, 768, -256)
	call placeShop(owner_4, 2016425076, 896, -256)
	call placeShop(owner_4, 2016425077, 0, -384)
	call placeShop(owner_4, 2016425078, 128, -384)
	call placeShop(owner_4, 2016425079, 256, -384)
	call placeShop(owner_4, 2016425080, 384, -384)
	call placeShop(owner_4, 2016425081, 512, -384)
	call placeShop(owner_4, 2016425082, 640, -384)
	call placeShop(owner_4, 2016425083, 768, -384)
	call placeShop(owner_4, 2016425084, 896, -384)
	call placeShop(owner_4, 2016425085, 0, -512)
	call placeShop(owner_4, 2016425086, 128, -512)
	call placeShop(owner_4, 2016425249, 256, -512)
	call placeShop(owner_4, 2016425264, 384, -512)
	call placeShop(owner_4, 2016425265, 512, -512)
	call placeShop(owner_4, 2016425266, 640, -512)
	call placeShop(owner_4, 2016425267, 768, -512)
	call placeShop(owner_4, 2016425268, 896, -512)
	call placeShop(owner_4, 2016425269, 0, -640)
	call placeShop(owner_4, 2016425270, 128, -640)
	call placeShop(owner_4, 2016425271, 256, -640)
	call placeShop(owner_4, 2016425272, 384, -640)
	call placeShop(owner_4, 2016425273, 512, -640)
	call placeShop(owner_4, 2016425313, 640, -640)
	call placeShop(owner_4, 2016425314, 768, -640)
	call placeShop(owner_4, 2016425315, 896, -640)
	call placeShop(owner_4, 2016425316, 0, -768)
	call placeShop(owner_4, 2016425317, 128, -768)
	call placeShop(owner_4, 2016425318, 256, -768)
	call placeShop(owner_4, 2016425319, 384, -768)
	call placeShop(owner_4, 2016425320, 512, -768)
	call placeShop(owner_4, 2016425321, 640, -768)
	call placeShop(owner_4, 2016425322, 0, -896)
	call placeShop(owner_4, 2016425323, 128, -896)
	call placeShop(owner_4, 2016425324, 256, -896)
	call placeShop(owner_4, 2016425325, 384, -896)
	call placeShop(owner_4, 2016425326, 0, -1024)
	call placeShop(owner_4, 2016425327, 128, -1024)
	call placeShop(owner_4, 2016425328, 256, -1024)
	call placeShop(owner_4, 2016425329, 384, -1024)
	call placeShop(owner_4, 2016425330, 512, -1024)
	call placeShop(owner_4, 2016425331, 0, -1152)
	call placeShop(owner_4, 2016425332, 128, -1152)
	call placeShop(owner_4, 2016425333, 256, -1152)
	call placeShop(owner_4, 2016425334, 384, -1152)
	call placeShop(owner_4, 2016425335, 512, -1152)
	call placeShop(owner_4, 2016425336, 0, -1408)
	call placeShop(owner_4, 2016425337, 128, -1408)
	call placeShop(owner_4, 2016425338, 256, -1408)
	call placeShop(owner_4, 2016425339, 384, -1408)
	call placeShop(owner_4, 2016425340, 512, -1408)
	call placeShop(owner_4, 2016425341, 640, -1408)
	call placeShop(owner_4, 2016425342, 768, -1408)
	call placeShop(owner_4, 2016425505, 896, -1408)
	call placeShop(owner_4, 2016425520, 0, -1536)
	call placeShop(owner_4, 2016425521, 128, -1536)
	call placeShop(owner_4, 2016425522, 256, -1536)
	call placeShop(owner_4, 2016425523, 384, -1536)
	call placeShop(owner_4, 2016425524, 512, -1536)
	call placeShop(owner_4, 2016425525, 640, -1536)
	call placeShop(owner_4, 2016425526, 768, -1536)
	call placeShop(owner_4, 2016425527, 896, -1536)
	call placeShop(owner_4, 2016425528, 0, -1664)
	call placeShop(owner_4, 2016425529, 128, -1664)
	call placeShop(owner_4, 2016425569, 256, -1664)
	call placeShop(owner_4, 2016425570, 384, -1664)
	call placeShop(owner_4, 2016425571, 512, -1664)
	call placeShop(owner_4, 2016425572, 640, -1664)
	call placeShop(owner_4, 2016425573, 768, -1664)
	call placeShop(owner_4, 2016425574, 896, -1664)
	call placeShop(owner_4, 2016425575, 0, -1792)
	call placeShop(owner_4, 2016425576, 128, -1792)
	call placeShop(owner_4, 2016425577, 256, -1792)
	call placeShop(owner_4, 2016425578, 384, -1792)
	call placeShop(owner_4, 2016425579, 512, -1792)
	call placeShop(owner_4, 2016425580, 640, -1792)
	call placeShop(owner_4, 2016425581, 768, -1792)
	call placeShop(owner_4, 2016425582, 896, -1792)
	call placeShop(owner_4, 2016425583, 0, -1920)
	call placeShop(owner_4, 2016425584, 128, -1920)
	call placeShop(owner_4, 2016425585, 256, -1920)
	call placeShop(owner_4, 2016425586, 384, -1920)
	call placeShop(owner_4, 2016425587, 512, -1920)
	call placeShop(owner_4, 2016425588, 640, -1920)
	call placeShop(owner_4, 2016425589, 768, -1920)
	call placeShop(owner_4, 2016425590, 896, -1920)
	call placeShop(owner_4, 2016425591, 0, -2048)
	call placeShop(owner_4, 2016425592, 128, -2048)
	call placeShop(owner_4, 2016425593, 256, -2048)
	call placeShop(owner_4, 2016425594, 384, -2048)
	call placeShop(owner_4, 2016425595, 512, -2048)
	call placeShop(owner_4, 2016425596, 640, -2048)
	call placeShop(owner_4, 2016425597, 768, -2048)
	call placeShop(owner_4, 2016425598, 896, -2048)
	call placeShop(owner_4, 2016425761, 0, -2176)
	call placeShop(owner_4, 2016425776, 128, -2176)
	call placeShop(owner_4, 2016425777, 256, -2176)
	call placeShop(owner_4, 2016425778, 384, -2176)
	call placeShop(owner_4, 2016425779, 512, -2176)
	call placeShop(owner_4, 2016425780, 640, -2176)
	call placeShop(owner_4, 2016425781, 768, -2176)
	call placeShop(owner_4, 2016425782, 896, -2176)
	call placeShop(owner_4, 2016425783, 0, -2304)
	call placeShop(owner_4, 2016425784, 128, -2304)
	call placeShop(owner_4, 2016425785, 256, -2304)
	call placeShop(owner_4, 2016425825, 384, -2304)
	call placeShop(owner_4, 2016425826, 512, -2304)
	call placeShop(owner_4, 2016425827, 640, -2304)
	call placeShop(owner_4, 2016425828, 768, -2304)
	call placeShop(owner_4, 2016425829, 896, -2304)
	call placeShop(owner_4, 2016425830, 0, -2432)
	call placeShop(owner_4, 2016425831, 128, -2432)
	set neutral = null
	set who_2 = null
	set source = null
	set target = null
	set owner_4 = null
	return true
endfunction

function init_Network takes nothing returns boolean
	set Network_DATA_CACHE = InitGameCache("1")
	set Network_STRING_CACHE = InitGameCache("2")
	return true
endfunction

function init_NetworkConfig takes nothing returns boolean
	return true
endfunction

function init_ObjectIdGenerator takes nothing returns boolean
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
		else
			call error("Out of memory: Could not create IdGenerator.")
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
	endif
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
		else
			call error("Out of memory: Could not create IdGenerator.")
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
	endif
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
		else
			call error("Out of memory: Could not create IdGenerator.")
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
	endif
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
		else
			call error("Out of memory: Could not create IdGenerator.")
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
	endif
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
		else
			call error("Out of memory: Could not create IdGenerator.")
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
	endif
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
		else
			call error("Out of memory: Could not create IdGenerator.")
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
	endif
	return true
endfunction

function init_ObjectIds takes nothing returns boolean
	return true
endfunction

function init_Objects takes nothing returns boolean
	return true
endfunction

function init_OnUnitEnterLeave takes nothing returns boolean
	local integer i_3
	local integer temp
	local integer this_54
	set OnUnitEnterLeave_eventTrigger = CreateTrigger()
	set OnUnitEnterLeave_preplacedUnits = CreateGroup()
	set i_3 = 0
	set temp = bj_MAX_PLAYER_SLOTS - 1
	loop
		exitwhen i_3 > temp
		call SetPlayerAbilityAvailable(Player_players[i_3], 1095577649, false)
		set i_3 = i_3 + 1
	endloop
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_54 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_54] = 668
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_54 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_54] = 668
	endif
	call CallbackSingle_start(this_54, 0.)
	return true
endfunction

function init_OrderFactory takes nothing returns boolean
	call new_OrderStringFactory()
	return true
endfunction

function init_Orders takes nothing returns boolean
	return true
endfunction

function init_PacketIO takes nothing returns boolean
	set PacketWriter_currentPacket = 1
	set PacketReader_currentPacket = 1
	return true
endfunction

function init_Permissions takes nothing returns boolean
	local integer i_3 = 1
	local integer temp = bj_MAX_PLAYERS - 1
	loop
		exitwhen i_3 > temp
		set i_3 = i_3 + 1
	endloop
	return true
endfunction

function init_Player takes nothing returns boolean
	local integer i_3
	local integer temp
	set Player_localPlayer = GetLocalPlayer()
	set i_3 = 0
	set temp = bj_MAX_PLAYER_SLOTS - 1
	loop
		exitwhen i_3 > temp
		set Player_players[i_3] = Player(i_3)
		set i_3 = i_3 + 1
	endloop
	return true
endfunction

function init_PlayerSettings takes nothing returns boolean
	local integer this_54
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_54 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_54] = 669
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_54 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_54] = 669
	endif
	call CallbackSingle_start(this_54, 1.)
	return true
endfunction

function init_PlayerSettingsCommands takes nothing returns boolean
	local integer this_54
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_54 = Command_maxIndex
			set Command_typeId[this_54] = 678
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_54 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_54] = 678
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("setting"), this_54)
	return true
endfunction

function init_Playercolor takes nothing returns boolean
	set Playercolor_PLAYER_COLOR_BLACK_AGGRESSIVE = ConvertPlayerColor(24)
	set Playercolor_PLAYER_COLOR_UNKNOWN1 = ConvertPlayerColor(25)
	set Playercolor_PLAYER_COLOR_UNKNOWN2 = ConvertPlayerColor(26)
	set Playercolor_PLAYER_COLOR_BLACK_PASSIVE = ConvertPlayerColor(27)
	set Playercolor_LOOKUP[0] = PLAYER_COLOR_RED
	set Playercolor_LOOKUP[1] = PLAYER_COLOR_BLUE
	set Playercolor_LOOKUP[2] = PLAYER_COLOR_CYAN
	set Playercolor_LOOKUP[3] = PLAYER_COLOR_PURPLE
	set Playercolor_LOOKUP[4] = PLAYER_COLOR_YELLOW
	set Playercolor_LOOKUP[5] = PLAYER_COLOR_ORANGE
	set Playercolor_LOOKUP[6] = PLAYER_COLOR_GREEN
	set Playercolor_LOOKUP[7] = PLAYER_COLOR_PINK
	set Playercolor_LOOKUP[8] = PLAYER_COLOR_LIGHT_GRAY
	set Playercolor_LOOKUP[9] = PLAYER_COLOR_LIGHT_BLUE
	set Playercolor_LOOKUP[10] = PLAYER_COLOR_AQUA
	set Playercolor_LOOKUP[11] = PLAYER_COLOR_BROWN
	set Playercolor_LOOKUP[12] = PLAYER_COLOR_MAROON
	set Playercolor_LOOKUP[13] = PLAYER_COLOR_NAVY
	set Playercolor_LOOKUP[14] = PLAYER_COLOR_TURQUOISE
	set Playercolor_LOOKUP[15] = PLAYER_COLOR_VIOLET
	set Playercolor_LOOKUP[16] = PLAYER_COLOR_WHEAT
	set Playercolor_LOOKUP[17] = PLAYER_COLOR_PEACH
	set Playercolor_LOOKUP[18] = PLAYER_COLOR_MINT
	set Playercolor_LOOKUP[19] = PLAYER_COLOR_LAVENDER
	set Playercolor_LOOKUP[20] = PLAYER_COLOR_COAL
	set Playercolor_LOOKUP[21] = PLAYER_COLOR_SNOW
	set Playercolor_LOOKUP[22] = PLAYER_COLOR_EMERALD
	set Playercolor_LOOKUP[23] = PLAYER_COLOR_PEANUT
	set Playercolor_LOOKUP[24] = Playercolor_PLAYER_COLOR_BLACK_AGGRESSIVE
	set Playercolor_LOOKUP[25] = Playercolor_PLAYER_COLOR_UNKNOWN1
	set Playercolor_LOOKUP[26] = Playercolor_PLAYER_COLOR_UNKNOWN2
	set Playercolor_LOOKUP[27] = Playercolor_PLAYER_COLOR_BLACK_PASSIVE
	return true
endfunction

function init_Preloader takes nothing returns boolean
	local string result_2
	local integer remainingValue
	local integer byteno
	local integer charValue
	local integer this_54
	set Preloader_dumg = CreateGroup()
	set Preloader_dum = CreateUnit(Basics_DUMMY_PLAYER, 2019849581, 0., 0., 0)
	if Preloader_dum == null then
		set result_2 = ""
		set remainingValue = 2019849581
		set byteno = 0
		loop
			exitwhen byteno > 3
			set charValue = ModuloInteger(remainingValue, 256)
			set remainingValue = remainingValue / 256
			set result_2 = SubString(".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~.................................................................................................................................", charValue, charValue + 1) + result_2
			set byteno = byteno + 1
		endloop
		call error("DUMMY_UNITID (" + result_2 + ") not added correctly to the map.")
	endif
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_54 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_54] = 670
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_54 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_54] = 670
	endif
	call CallbackSingle_start(this_54, 0.)
	return true
endfunction

function init_Printing takes nothing returns boolean
	return true
endfunction

function init_Quaternion takes nothing returns boolean
	return true
endfunction

function init_Real takes nothing returns boolean
	set Real_REAL_MIN =  - 340282366920938000000000000000000000000.
	return true
endfunction

function init_RegionCommands takes nothing returns boolean
	local integer this_54
	if Command_firstFree == 0 then
		if Command_maxIndex < 32768 then
			set Command_maxIndex = Command_maxIndex + 1
			set this_54 = Command_maxIndex
			set Command_typeId[this_54] = 679
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set Command_firstFree = Command_firstFree - 1
		set this_54 = Command_nextFree[Command_firstFree]
		set Command_typeId[this_54] = 679
	endif
	call dispatch_HashMap_HashMap_HashMap_put(CommandRegistry_registry, StringHash("region"), this_54)
	return true
endfunction

function init_RegionSpecifier takes nothing returns boolean
	local playerunitevent temp
	local playerunitevent temp_2
	local playerunitevent temp_3
	local playerunitevent temp_4
	local integer this_54
	local integer this_55
	local integer id
	local integer this_56
	local integer id_2
	local integer this_57
	local integer id_3
	local integer this_58
	local integer id_4
	if Iterator_firstFree_3 == 0 then
		if Iterator_maxIndex_3 < 32768 then
			set Iterator_maxIndex_3 = Iterator_maxIndex_3 + 1
			set this_54 = Iterator_maxIndex_3
		else
			call error("Out of memory: Could not create Iterator.")
			set this_54 = 0
		endif
	else
		set Iterator_firstFree_3 = Iterator_firstFree_3 - 1
		set this_54 = Iterator_nextFree_2[Iterator_firstFree_3]
	endif
	set Iterator_current_2[this_54] = RegionSpecifier_LinkedListModule_first
	set RegionSpecifier_LinkedListModule_staticItr = this_54
	if BackIterator_firstFree_3 == 0 then
		if BackIterator_maxIndex_3 < 32768 then
			set BackIterator_maxIndex_3 = BackIterator_maxIndex_3 + 1
		else
			call error("Out of memory: Could not create BackIterator.")
		endif
	else
		set BackIterator_firstFree_3 = BackIterator_firstFree_3 - 1
	endif
	set temp = EVENT_PLAYER_UNIT_SELECTED
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_55 = EventListener_maxIndex
			set EventListener_typeId[this_55] = 771
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_55 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_55] = 771
	endif
	set EventListener_eventId[this_55] = 0
	set EventListener_next[this_55] = 0
	set EventListener_prev[this_55] = 0
	set id = ClosureEvents_eventidToIndex[GetHandleId(temp)]
	if id == 0 then
		set id = registerEventId(temp)
	endif
	set EventListener_eventId[this_55] = id
	if EventListener_generalListenersFirsts[EventListener_eventId[this_55]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[this_55]]] = this_55
		set EventListener_next[this_55] = EventListener_generalListenersFirsts[EventListener_eventId[this_55]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[this_55]] = this_55
	set temp_2 = EVENT_PLAYER_UNIT_DESELECTED
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_56 = EventListener_maxIndex
			set EventListener_typeId[this_56] = 772
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_56 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_56] = 772
	endif
	set EventListener_eventId[this_56] = 0
	set EventListener_next[this_56] = 0
	set EventListener_prev[this_56] = 0
	set id_2 = ClosureEvents_eventidToIndex[GetHandleId(temp_2)]
	if id_2 == 0 then
		set id_2 = registerEventId(temp_2)
	endif
	set EventListener_eventId[this_56] = id_2
	if EventListener_generalListenersFirsts[EventListener_eventId[this_56]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[this_56]]] = this_56
		set EventListener_next[this_56] = EventListener_generalListenersFirsts[EventListener_eventId[this_56]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[this_56]] = this_56
	set temp_3 = EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_57 = EventListener_maxIndex
			set EventListener_typeId[this_57] = 773
		else
			call error("Out of memory: Could not create Closure.")
			set this_57 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_57 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_57] = 773
	endif
	set EventListener_eventId[this_57] = 0
	set EventListener_next[this_57] = 0
	set EventListener_prev[this_57] = 0
	set id_3 = ClosureEvents_eventidToIndex[GetHandleId(temp_3)]
	if id_3 == 0 then
		set id_3 = registerEventId(temp_3)
	endif
	set EventListener_eventId[this_57] = id_3
	if EventListener_generalListenersFirsts[EventListener_eventId[this_57]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[this_57]]] = this_57
		set EventListener_next[this_57] = EventListener_generalListenersFirsts[EventListener_eventId[this_57]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[this_57]] = this_57
	set temp_4 = EVENT_PLAYER_UNIT_SPELL_CAST
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_58 = EventListener_maxIndex
			set EventListener_typeId[this_58] = 774
		else
			call error("Out of memory: Could not create Closure.")
			set this_58 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_58 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_58] = 774
	endif
	set EventListener_eventId[this_58] = 0
	set EventListener_next[this_58] = 0
	set EventListener_prev[this_58] = 0
	set id_4 = ClosureEvents_eventidToIndex[GetHandleId(temp_4)]
	if id_4 == 0 then
		set id_4 = registerEventId(temp_4)
	endif
	set EventListener_eventId[this_58] = id_4
	if EventListener_generalListenersFirsts[EventListener_eventId[this_58]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[this_58]]] = this_58
		set EventListener_next[this_58] = EventListener_generalListenersFirsts[EventListener_eventId[this_58]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[this_58]] = this_58
	set temp = null
	set temp_2 = null
	set temp_3 = null
	set temp_4 = null
	return true
endfunction

function init_RegisterEvents takes nothing returns boolean
	set RegisterEvents_onCastMap = new_HashMap()
	call registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT, null, ref_function_RegisterEvents_closure_impl, null)
	return true
endfunction

function HashSet_add2 takes integer this_54, integer obj returns nothing
	call HashSet_add_1(this_54, obj)
endfunction

function makeShopRegistry takes nothing returns integer
	local integer registry = new_HashSet()
	call HashSet_add2(registry, 2016425014)
	call HashSet_add2(registry, 2016425015)
	call HashSet_add2(registry, 2016425016)
	call HashSet_add2(registry, 2016425017)
	call HashSet_add2(registry, 2016425057)
	call HashSet_add2(registry, 2016425058)
	call HashSet_add2(registry, 2016425059)
	call HashSet_add2(registry, 2016425060)
	call HashSet_add2(registry, 2016425061)
	call HashSet_add2(registry, 2016425062)
	call HashSet_add2(registry, 2016425063)
	call HashSet_add2(registry, 2016425064)
	call HashSet_add2(registry, 2016425065)
	call HashSet_add2(registry, 2016425066)
	call HashSet_add2(registry, 2016425067)
	call HashSet_add2(registry, 2016425068)
	call HashSet_add2(registry, 2016425069)
	call HashSet_add2(registry, 2016425070)
	call HashSet_add2(registry, 2016425071)
	call HashSet_add2(registry, 2016425072)
	call HashSet_add2(registry, 2016425073)
	call HashSet_add2(registry, 2016425074)
	call HashSet_add2(registry, 2016425075)
	call HashSet_add2(registry, 2016425076)
	call HashSet_add2(registry, 2016425077)
	call HashSet_add2(registry, 2016425078)
	call HashSet_add2(registry, 2016425079)
	call HashSet_add2(registry, 2016425080)
	call HashSet_add2(registry, 2016425081)
	call HashSet_add2(registry, 2016425082)
	call HashSet_add2(registry, 2016425083)
	call HashSet_add2(registry, 2016425084)
	call HashSet_add2(registry, 2016425085)
	call HashSet_add2(registry, 2016425086)
	call HashSet_add2(registry, 2016425249)
	call HashSet_add2(registry, 2016425264)
	call HashSet_add2(registry, 2016425265)
	call HashSet_add2(registry, 2016425266)
	call HashSet_add2(registry, 2016425267)
	call HashSet_add2(registry, 2016425268)
	call HashSet_add2(registry, 2016425269)
	call HashSet_add2(registry, 2016425270)
	call HashSet_add2(registry, 2016425271)
	call HashSet_add2(registry, 2016425272)
	call HashSet_add2(registry, 2016425273)
	call HashSet_add2(registry, 2016425313)
	call HashSet_add2(registry, 2016425314)
	call HashSet_add2(registry, 2016425315)
	call HashSet_add2(registry, 2016425316)
	call HashSet_add2(registry, 2016425317)
	call HashSet_add2(registry, 2016425318)
	call HashSet_add2(registry, 2016425319)
	call HashSet_add2(registry, 2016425320)
	call HashSet_add2(registry, 2016425321)
	call HashSet_add2(registry, 2016425322)
	call HashSet_add2(registry, 2016425323)
	call HashSet_add2(registry, 2016425324)
	call HashSet_add2(registry, 2016425325)
	call HashSet_add2(registry, 2016425326)
	call HashSet_add2(registry, 2016425327)
	call HashSet_add2(registry, 2016425328)
	call HashSet_add2(registry, 2016425329)
	call HashSet_add2(registry, 2016425330)
	call HashSet_add2(registry, 2016425331)
	call HashSet_add2(registry, 2016425332)
	call HashSet_add2(registry, 2016425333)
	call HashSet_add2(registry, 2016425334)
	call HashSet_add2(registry, 2016425335)
	call HashSet_add2(registry, 2016425336)
	call HashSet_add2(registry, 2016425337)
	call HashSet_add2(registry, 2016425338)
	call HashSet_add2(registry, 2016425339)
	call HashSet_add2(registry, 2016425340)
	call HashSet_add2(registry, 2016425341)
	call HashSet_add2(registry, 2016425342)
	call HashSet_add2(registry, 2016425505)
	call HashSet_add2(registry, 2016425520)
	call HashSet_add2(registry, 2016425521)
	call HashSet_add2(registry, 2016425522)
	call HashSet_add2(registry, 2016425523)
	call HashSet_add2(registry, 2016425524)
	call HashSet_add2(registry, 2016425525)
	call HashSet_add2(registry, 2016425526)
	call HashSet_add2(registry, 2016425527)
	call HashSet_add2(registry, 2016425528)
	call HashSet_add2(registry, 2016425529)
	call HashSet_add2(registry, 2016425569)
	call HashSet_add2(registry, 2016425570)
	call HashSet_add2(registry, 2016425571)
	call HashSet_add2(registry, 2016425572)
	call HashSet_add2(registry, 2016425573)
	call HashSet_add2(registry, 2016425574)
	call HashSet_add2(registry, 2016425575)
	call HashSet_add2(registry, 2016425576)
	call HashSet_add2(registry, 2016425577)
	call HashSet_add2(registry, 2016425578)
	call HashSet_add2(registry, 2016425579)
	call HashSet_add2(registry, 2016425580)
	call HashSet_add2(registry, 2016425581)
	call HashSet_add2(registry, 2016425582)
	call HashSet_add2(registry, 2016425583)
	call HashSet_add2(registry, 2016425584)
	call HashSet_add2(registry, 2016425585)
	call HashSet_add2(registry, 2016425586)
	call HashSet_add2(registry, 2016425587)
	call HashSet_add2(registry, 2016425588)
	call HashSet_add2(registry, 2016425589)
	call HashSet_add2(registry, 2016425590)
	call HashSet_add2(registry, 2016425591)
	call HashSet_add2(registry, 2016425592)
	call HashSet_add2(registry, 2016425593)
	call HashSet_add2(registry, 2016425594)
	call HashSet_add2(registry, 2016425595)
	call HashSet_add2(registry, 2016425596)
	call HashSet_add2(registry, 2016425597)
	call HashSet_add2(registry, 2016425598)
	call HashSet_add2(registry, 2016425761)
	call HashSet_add2(registry, 2016425776)
	call HashSet_add2(registry, 2016425777)
	call HashSet_add2(registry, 2016425778)
	call HashSet_add2(registry, 2016425779)
	call HashSet_add2(registry, 2016425780)
	call HashSet_add2(registry, 2016425781)
	call HashSet_add2(registry, 2016425782)
	call HashSet_add2(registry, 2016425783)
	call HashSet_add2(registry, 2016425784)
	call HashSet_add2(registry, 2016425785)
	call HashSet_add2(registry, 2016425825)
	call HashSet_add2(registry, 2016425826)
	call HashSet_add2(registry, 2016425827)
	call HashSet_add2(registry, 2016425828)
	call HashSet_add2(registry, 2016425829)
	call HashSet_add2(registry, 2016425830)
	call HashSet_add2(registry, 2016425831)
	return registry
endfunction

function populateModelRegistry0 takes nothing returns nothing
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443186, "Doodads\\Outland\\Props\\Altar\\Altar.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016423988, "YARP\\Units\\Animal\\Lynx\\EversongLynx.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016423986, "YARP\\Units\\Animal\\BluePanther\\NelfDruidCat.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016423985, "YARP\\Units\\Animal\\BlackPanther\\Panther.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016423989, "YARP\\Units\\Animal\\Raven\\Raven.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016423987, "YARP\\Units\\Animal\\HornedLion\\TaurenDruidCat.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016423990, "YARP\\Units\\Animal\\Tiger\\Tiger.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425837, "YARP\\Buildings\\Arabian\\ArabianArchery.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425838, "YARP\\Buildings\\Arabian\\ArabianBarrack.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426017, "YARP\\Buildings\\Arabian\\ArabianCannonTowers.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425839, "YARP\\Buildings\\Arabian\\ArabianDocks.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425840, "YARP\\Buildings\\Arabian\\ArabianFarm.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425853, "YARP\\Buildings\\Arabian\\ArabianGate.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425854, "YARP\\Buildings\\Arabian\\ArabianGateHorizontal.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425841, "YARP\\Buildings\\Arabian\\ArabianGranary.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425842, "YARP\\Buildings\\Arabian\\ArabianHouse.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425832, "YARP\\Buildings\\Arabian\\Arabian Inn.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425843, "YARP\\Buildings\\Arabian\\ArabianMarket.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425848, "YARP\\Buildings\\Arabian\\ArabianWaterMill.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425850, "YARP\\Buildings\\Arabian\\Mosque.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425835, "YARP\\Buildings\\Arabian\\Arabian palace.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425844, "YARP\\Buildings\\Arabian\\ArabianSmith.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425845, "YARP\\Buildings\\Arabian\\ArabianStables.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425846, "YARP\\Buildings\\Arabian\\ArabianStonemace.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425847, "YARP\\Buildings\\Arabian\\ArabianStorage.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426032, "YARP\\Buildings\\Arabian\\ArabianTowers.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425836, "YARP\\Buildings\\Arabian\\Arabian town hall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425833, "YARP\\Buildings\\Arabian\\Arabian University.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425852, "YARP\\Buildings\\Arabian\\ArabianWalls.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425851, "YARP\\Buildings\\Arabian\\ArabianWalls V.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425849, "YARP\\Buildings\\Arabian\\ArabianWoodencamp.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425834, "YARP\\Buildings\\Arabian\\Arabian Workshop.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441953, "buildings\\Other\\ArcaneObservatory\\ArcaneObservatory.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443187, "Doodads\\LordaeronSummer\\Props\\ArcheryRange\\ArcheryRange.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443251, "Doodads\\LordaeronSummer\\Props\\ArmorRack\\ArmorRack.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437297, "Doodads\\Cityscape\\Structures\\Archway1\\Archway1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437298, "Doodads\\Cityscape\\Structures\\Archway1_Ruined\\Archway1_Ruined.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437299, "Doodads\\Cityscape\\Structures\\Archway2_Ruined\\Archway2_Ruined.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437300, "Doodads\\Dungeon\\Structures\\DungeonArchway1\\DungeonArchway1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437302, "Doodads\\Ruins\\Structures\\RuinsArchway0_\\RuinsArchway0_0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437303, "Doodads\\Ruins\\Structures\\RuinsArchway0_\\RuinsArchway0_1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437304, "Doodads\\Ruins\\Structures\\RuinsArchway0_\\RuinsArchway0_2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437305, "Doodads\\Ruins\\Structures\\RuinsArchwayBroken00\\RuinsArchwayBroken00.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437301, "Doodads\\Underground\\Structures\\UndergroundArchway1\\UndergroundArchway1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441144, "Doodads\\Dungeon\\Props\\AzsharaStatue\\AzsharaStatue.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438644, "Doodads\\Ashenvale\\Structures\\AshenRuinsBlocks\\AshenRuinsBlocks.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441723, "Doodads\\Ashenvale\\Structures\\AshenBrokenColumn\\AshenBrokenColumn0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441724, "Doodads\\Ashenvale\\Structures\\AshenBrokenColumn\\AshenBrokenColumn1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440942, "Doodads\\Ashenvale\\Props\\AshenBrokenObilisk\\AshenBrokenObilisk0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440943, "Doodads\\Ashenvale\\Props\\AshenBrokenObilisk\\AshenBrokenObilisk1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438631, "Doodads\\Ashenvale\\Plants\\AshenBush0\\AshenBush0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438377, "Doodads\\Ashenvale\\Plants\\AshenCatTail\\AshenCatTail.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438325, "Doodads\\Ashenvale\\Water\\AshenLillyPad\\AshenLillyPad.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438326, "Doodads\\Ashenvale\\Water\\AshenvaleLilyPad\\AshenvaleLilyPad0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438327, "Doodads\\Ashenvale\\Water\\AshenvaleLilyPad\\AshenvaleLilyPad1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438328, "Doodads\\Ashenvale\\Water\\AshenvaleLilyPad\\AshenvaleLilyPad2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438140, "Doodads\\Ashenvale\\Props\\AshenLogStraight\\AshenLogStraight.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440944, "Doodads\\Ashenvale\\Props\\AshenObilisk\\AshenObilisk.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438645, "Doodads\\Ashenvale\\Rocks\\AshenRock\\AshenRock0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438654, "Doodads\\Ashenvale\\Rocks\\AshenRock\\AshenRock9.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438646, "Doodads\\Ashenvale\\Rocks\\AshenRock\\AshenRock1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438647, "Doodads\\Ashenvale\\Rocks\\AshenRock\\AshenRock2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438648, "Doodads\\Ashenvale\\Rocks\\AshenRock\\AshenRock3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438649, "Doodads\\Ashenvale\\Rocks\\AshenRock\\AshenRock4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438650, "Doodads\\Ashenvale\\Rocks\\AshenRock\\AshenRock5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438651, "Doodads\\Ashenvale\\Rocks\\AshenRock\\AshenRock6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438652, "Doodads\\Ashenvale\\Rocks\\AshenRock\\AshenRock7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438653, "Doodads\\Ashenvale\\Rocks\\AshenRock\\AshenRock8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438817, "Doodads\\Ashenvale\\Structures\\AshenRubble\\AshenRubble0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438832, "Doodads\\Ashenvale\\Structures\\AshenRubble\\AshenRubble1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438833, "Doodads\\Ashenvale\\Structures\\AshenRubble\\AshenRubble2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438072, "Doodads\\Ashenvale\\Plants\\AshenShrooms\\AshenShrooms0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438073, "Doodads\\Ashenvale\\Plants\\AshenShrooms\\AshenShrooms1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438113, "Doodads\\Ashenvale\\Plants\\AshenShrooms\\AshenShrooms2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438114, "Doodads\\Ashenvale\\Plants\\AshenShrooms\\AshenShrooms3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438139, "Doodads\\Ashenvale\\Props\\AshenHollowStump\\AshenHollowStump.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443507, "Doodads\\LordaeronSummer\\Props\\BannerHuman\\BannerHuman0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443508, "Doodads\\LordaeronSummer\\Props\\BannerHuman\\BannerHuman1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443505, "Doodads\\Cityscape\\Props\\Banner_Long\\Banner_Long.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443506, "Doodads\\Cityscape\\Props\\Banner_Long2\\Banner_Long2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443509, "Doodads\\LordaeronSummer\\Props\\BannerOrc\\BannerOrc0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443510, "Doodads\\LordaeronSummer\\Props\\BannerOrc\\BannerOrc1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441190, "Doodads\\LordaeronSummer\\Structures\\Barn\\Barn.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437351, "Doodads\\LordaeronSummer\\Structures\\BarnScorched\\BarnScorched.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440936, "Doodads\\Dungeon\\Structures\\PorticulisWall0_\\PorticulisWall0_0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440937, "Doodads\\Dungeon\\Structures\\PorticulisWall0_\\PorticulisWall0_1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440938, "Doodads\\Dungeon\\Structures\\PorticulisWall0_\\PorticulisWall0_2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440939, "Doodads\\Underground\\Structures\\GPorticulisWall0_\\GPorticulisWall0_0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440940, "Doodads\\Underground\\Structures\\GPorticulisWall0_\\GPorticulisWall0_1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440941, "Doodads\\Underground\\Structures\\GPorticulisWall0_\\GPorticulisWall0_2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443001, "buildings\\Other\\BarrelsUnit0\\BarrelsUnit0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443002, "buildings\\Other\\BarrelsUnit1\\BarrelsUnit1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438834, "Doodads\\Barrens\\Structures\\RuinedArch\\RuinedArch0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438835, "Doodads\\Barrens\\Structures\\RuinedArch\\RuinedArch1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438836, "Doodads\\Barrens\\Structures\\RuinedArch\\RuinedArch2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437608, "Doodads\\Barrens\\Props\\Barrens_Bones\\Barrens_Bones0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437617, "Doodads\\Barrens\\Props\\Barrens_Bones\\Barrens_Bones9.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437609, "Doodads\\Barrens\\Props\\Barrens_Bones\\Barrens_Bones1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437610, "Doodads\\Barrens\\Props\\Barrens_Bones\\Barrens_Bones2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437611, "Doodads\\Barrens\\Props\\Barrens_Bones\\Barrens_Bones3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437612, "Doodads\\Barrens\\Props\\Barrens_Bones\\Barrens_Bones4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437613, "Doodads\\Barrens\\Props\\Barrens_Bones\\Barrens_Bones5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437614, "Doodads\\Barrens\\Props\\Barrens_Bones\\Barrens_Bones6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437615, "Doodads\\Barrens\\Props\\Barrens_Bones\\Barrens_Bones7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437616, "Doodads\\Barrens\\Props\\Barrens_Bones\\Barrens_Bones8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438886, "Doodads\\Barrens\\Structures\\RuinedChunk\\RuinedChunk0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438887, "Doodads\\Barrens\\Structures\\RuinedChunk\\RuinedChunk1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438839, "Doodads\\Barrens\\Rocks\\crator\\Crator0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438840, "Doodads\\Barrens\\Rocks\\crator\\Crator1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438837, "Doodads\\Barrens\\Rocks\\BarrensFissure\\BarrensFissure0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438838, "Doodads\\Barrens\\Rocks\\BarrensFissure\\BarrensFissure1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438841, "Doodads\\Barrens\\Rocks\\Geyser\\Geyser0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438881, "Doodads\\Barrens\\Rocks\\Geyser\\Geyser1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438882, "Doodads\\Barrens\\Rocks\\Geyser\\Geyser2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438883, "Doodads\\Barrens\\Rocks\\RockPillar\\RockPillar0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438884, "Doodads\\Barrens\\Rocks\\RockPillar\\RockPillar1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438885, "Doodads\\Barrens\\Rocks\\RockPillar\\RockPillar2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438888, "Doodads\\Barrens\\Rocks\\Barrens_Rocks\\Barrens_Rocks0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438897, "Doodads\\Barrens\\Rocks\\Barrens_Rocks\\Barrens_Rocks9.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438889, "Doodads\\Barrens\\Rocks\\Barrens_Rocks\\Barrens_Rocks1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438890, "Doodads\\Barrens\\Rocks\\Barrens_Rocks\\Barrens_Rocks2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438891, "Doodads\\Barrens\\Rocks\\Barrens_Rocks\\Barrens_Rocks3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438892, "Doodads\\Barrens\\Rocks\\Barrens_Rocks\\Barrens_Rocks4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438893, "Doodads\\Barrens\\Rocks\\Barrens_Rocks\\Barrens_Rocks5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438894, "Doodads\\Barrens\\Rocks\\Barrens_Rocks\\Barrens_Rocks6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438895, "Doodads\\Barrens\\Rocks\\Barrens_Rocks\\Barrens_Rocks7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438896, "Doodads\\Barrens\\Rocks\\Barrens_Rocks\\Barrens_Rocks8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438898, "Doodads\\Barrens\\Rocks\\Barrens_Spires\\Barrens_Spires0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438899, "Doodads\\Barrens\\Rocks\\Barrens_Spires\\Barrens_Spires1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438900, "Doodads\\Barrens\\Rocks\\Barrens_Spires\\Barrens_Spires2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438901, "Doodads\\Barrens\\Rocks\\Barrens_Spires\\Barrens_Spires3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438902, "Doodads\\Barrens\\Rocks\\Barrens_Spires\\Barrens_Spires4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438903, "Doodads\\Barrens\\Rocks\\Barrens_Spires\\Barrens_Spires5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438904, "Doodads\\Barrens\\Rocks\\Barrens_Spires\\Barrens_Spires6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438905, "Doodads\\Barrens\\Rocks\\Barrens_Spires\\Barrens_Spires7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443247, "Doodads\\LordaeronSummer\\Terrain\\Barricade\\Barricade0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443248, "Doodads\\LordaeronSummer\\Terrain\\Barricade\\Barricade1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443249, "Doodads\\LordaeronSummer\\Terrain\\Barricade\\Barricade2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441954, "buildings\\Other\\BarrowDens\\BarrowDens.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438138, "Doodads\\Northrend\\Props\\Bats\\Bats.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442238, "Doodads\\Northrend\\Water\\Battleship\\Battleship.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442401, "Doodads\\Northrend\\Water\\BattleshipDestroyed\\BattleshipDestroyed.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442986, "Doodads\\Dungeon\\Props\\Bench\\Bench.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016423991, "YARP\\Units\\Bloodelf\\Agent\\FarstriderAssasin.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016423992, "YARP\\Units\\Bloodelf\\Apprentice\\BEApprentice.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016423993, "YARP\\Units\\Bloodelf\\ArcaneHuntress\\HeroBEArcaneHuntress.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424033, "YARP\\Units\\Bloodelf\\Bladehound\\HeroBloodelfRogue.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424035, "YARP\\Units\\Bloodelf\\Champion\\BloodelfChampion.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424036, "YARP\\Units\\Bloodelf\\Conjurer\\BloodelfMage.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424037, "YARP\\Units\\Bloodelf\\FemaleLieutenant\\FemaleBELieutenant.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424038, "YARP\\Units\\Bloodelf\\General\\BloodMage.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424039, "YARP\\Units\\Bloodelf\\Juggernaut\\BloodelvenWarrior.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424034, "YARP\\Units\\Bloodelf\\BloodMistress\\BloodMistressS.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424040, "YARP\\Units\\Bloodelf\\Mystic\\BloodelfWizard.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424041, "YARP\\Units\\Bloodelf\\Paladin\\HeroBloodelvenPaladin.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424042, "YARP\\Units\\Bloodelf\\PhoenixArcher\\BloodelfPhoenixArcher.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424043, "YARP\\Units\\Bloodelf\\PhoenixCrusader\\BloodelfPhoenixCrusader.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424044, "YARP\\Units\\Bloodelf\\PhoenixGuard\\BloodelfPhoenixGuard.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424045, "YARP\\Units\\Bloodelf\\Priestess\\BloodElfPriestess.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424046, "YARP\\Units\\Bloodelf\\Prince\\Hero_BloodPrince.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424047, "YARP\\Units\\Bloodelf\\RoyalHuntress\\HeroBloodelfRanger.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442999, "Doodads\\Dungeon\\Props\\BigBookshelf\\BigBookshelf.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443000, "Doodads\\Dungeon\\Props\\BookshelfWall\\BookshelfWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438136, "Doodads\\Ashenvale\\Props\\Bird\\Bird.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438065, "Doodads\\BlackCitadel\\Props\\RuneArt\\RuneArt0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438066, "Doodads\\BlackCitadel\\Props\\RuneArt\\RuneArt1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438067, "Doodads\\BlackCitadel\\Props\\RuneArt\\RuneArt2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438068, "Doodads\\BlackCitadel\\Props\\RuneArt\\RuneArt3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438069, "Doodads\\BlackCitadel\\Props\\RuneArt\\RuneArt4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438070, "Doodads\\BlackCitadel\\Props\\RuneArt\\RuneArt5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438071, "Doodads\\BlackCitadel\\Props\\RuneArt\\RuneArt6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441140, "Doodads\\BlackCitadel\\Props\\BlackCitadelStatue\\BlackCitadelStatue.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442490, "Doodads\\Underground\\Props\\GCracks\\GCracks0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442491, "Doodads\\Underground\\Props\\GCracks\\GCracks1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442492, "Doodads\\Underground\\Props\\GCracks\\GCracks2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442493, "Doodads\\Underground\\Props\\GCracks\\GCracks3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442724, "Doodads\\Cinematic\\TownBurningFireEmitterBlue\\TownBurningFireEmitterBlue.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438125, "Doodads\\Underground\\Plants\\ShroomsBlue\\ShroomsBlue.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442474, "Doodads\\Cityscape\\Props\\TavernSignBobsGuns\\TavernSignBobsGuns.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441955, "buildings\\Other\\BookOfSummoning\\BookOfSummoning.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442998, "Doodads\\Dungeon\\Props\\Bookshelf\\Bookshelf.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443260, "Doodads\\Ashenvale\\Props\\Brazier\\Brazier.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443262, "Doodads\\LordaeronSummer\\Props\\brazier\\brazier.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443425, "Doodads\\LordaeronSummer\\Props\\brazierOmni\\brazierOmni.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440881, "Doodads\\Terrain\\CityBridgeLarge0\\CityBridgeLarge0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440702, "Doodads\\LordaeronSummer\\Structures\\CityBridgeSmall\\CityBridgeSmall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440882, "Doodads\\Terrain\\CityBridgeSmall0\\CityBridgeSmall0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440880, "Doodads\\Terrain\\CityBridgeExtraLarge0\\CityBridgeExtraLarge0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440701, "Doodads\\Cityscape\\Structures\\CityBridgeLarge45Destroyed\\CityBridgeLarge45Destroyed.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440883, "Doodads\\Terrain\\ForceBridgeLarge0\\ForceBridgeLarge0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440884, "Doodads\\Terrain\\IceBridge\\IceBridge.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438305, "Doodads\\LordaeronSummer\\Structures\\BridgeLog\\BridgeLog.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440865, "Doodads\\LordaeronSummer\\Structures\\LordaeronBridge\\LordaeronBridge.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441956, "buildings\\Other\\BridgeObelisk\\BridgeObelisk.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440886, "Doodads\\Terrain\\RockBridgeLarge0\\RockBridgeLarge0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440887, "Doodads\\Terrain\\RockBridgeSmall0\\RockBridgeSmall0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440885, "Doodads\\Terrain\\RockBridgeExtraLarge0\\RockBridgeExtraLarge0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440888, "Doodads\\Terrain\\TreeBridge0\\TreeBridge0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440929, "Doodads\\Terrain\\WoodBridgeLarge0\\WoodBridgeLarge0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440889, "Doodads\\Terrain\\WoodBridgeExtraLarge0\\WoodBridgeExtraLarge0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442424, "Doodads\\Ruins\\Water\\BubbleGeyser\\BubbleGeyser.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442423, "Doodads\\Icecrown\\Water\\BubbleGeyserSteam\\BubbleGeyserSteam.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438126, "Doodads\\Barrens\\Plants\\Cactus\\Cactus0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438135, "Doodads\\Barrens\\Plants\\Cactus\\Cactus9.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438127, "Doodads\\Barrens\\Plants\\Cactus\\Cactus1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438128, "Doodads\\Barrens\\Plants\\Cactus\\Cactus2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438129, "Doodads\\Barrens\\Plants\\Cactus\\Cactus3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438130, "Doodads\\Barrens\\Plants\\Cactus\\Cactus4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438131, "Doodads\\Barrens\\Plants\\Cactus\\Cactus5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438132, "Doodads\\Barrens\\Plants\\Cactus\\Cactus6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438133, "Doodads\\Barrens\\Plants\\Cactus\\Cactus7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438134, "Doodads\\Barrens\\Plants\\Cactus\\Cactus8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442749, "Doodads\\LordaeronSummer\\Props\\CageEmpty\\CageEmpty.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441198, "Doodads\\Cityscape\\Structures\\Cathedral\\Cathedral.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437352, "Doodads\\Cityscape\\Structures\\CathedralRuined\\CathedralRuined.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437607, "Doodads\\LordaeronSummer\\Props\\CauldronWithHeads\\CauldronWithHeads.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426033, "YARP\\Buildings\\Celtic\\CelticBarracks.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426034, "YARP\\Buildings\\Celtic\\CelticDockyard.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426035, "YARP\\Buildings\\Celtic\\CelticHouse.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426036, "YARP\\Buildings\\Celtic\\CelticStables.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426037, "YARP\\Buildings\\Celtic\\CelticStorehouse.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426038, "YARP\\Buildings\\Celtic\\CelticTownCenter.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441447, "buildings\\Other\\CentaurTent\\CentaurTent.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441448, "buildings\\Other\\CentaurTent2\\CentaurTent2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442744, "Doodads\\Dungeon\\Props\\Chain\\Chain0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442745, "Doodads\\Dungeon\\Props\\Chain\\Chain1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442746, "Doodads\\Dungeon\\Props\\Chain\\Chain2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442747, "Doodads\\Dungeon\\Props\\ChainPost\\ChainPost.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442987, "Doodads\\Dungeon\\Props\\Chair\\Chair.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441957, "buildings\\Other\\CircleOfPower\\CircleOfPower.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441651, "buildings\\Other\\CityBuildingLarge_0\\CityBuildingLarge_0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441652, "buildings\\Other\\CityBuildingLarge_45\\CityBuildingLarge_45.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441653, "buildings\\Other\\CityBuildingLarge_90\\CityBuildingLarge_90.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441654, "buildings\\Other\\CityBuildingSmall0_0\\CityBuildingSmall0_0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441655, "buildings\\Other\\CityBuildingSmall0_1\\CityBuildingSmall0_1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441656, "buildings\\Other\\CityBuildingSmall0_2\\CityBuildingSmall0_2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438632, "Doodads\\Cityscape\\Plants\\CityBush\\CityBush.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441718, "Doodads\\Cityscape\\Structures\\City_ColumnSemiCircle\\City_ColumnSemiCircle.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441720, "Doodads\\Cityscape\\Structures\\City_ColumnSemiCircle_Ruined\\City_ColumnSemiCircle_Ruined.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441717, "Doodads\\Cityscape\\Structures\\City_ColumnDouble\\City_ColumnDouble.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441719, "Doodads\\Cityscape\\Structures\\City_ColumnSingle\\City_ColumnSingle.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441721, "Doodads\\Cityscape\\Structures\\City_ColumnSingle1_Ruined\\City_ColumnSingle1_Ruined.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441722, "Doodads\\Cityscape\\Structures\\City_ColumnSingle2_Ruined\\City_ColumnSingle2_Ruined.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441201, "Doodads\\Cityscape\\Props\\City_Fountain\\City_Fountain.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437859, "Doodads\\Cityscape\\Props\\CityGrave\\CityGrave0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437860, "Doodads\\Cityscape\\Props\\CityGrave\\CityGrave1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437861, "Doodads\\Cityscape\\Props\\CityGrave\\CityGrave2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437862, "Doodads\\Cityscape\\Props\\CityGrave\\CityGrave3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440956, "Doodads\\Cityscape\\Props\\City_Oblisk\\City_Oblisk.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437552, "Doodads\\Cityscape\\Structures\\CityBuildingLarge_0_Ruined\\CityBuildingLarge_0_Ruined.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437553, "Doodads\\Cityscape\\Structures\\CityBuildingLarge_135_Ruined\\CityBuildingLarge_135_Ruined.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437554, "Doodads\\Cityscape\\Structures\\CityBuildingLarge_45_Ruined\\CityBuildingLarge_45_Ruined.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437555, "Doodads\\Cityscape\\Structures\\CityBuildingLarge_90_Ruined\\CityBuildingLarge_90_Ruined.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437556, "Doodads\\Cityscape\\Structures\\CityBuildingSmall0_0_Ruined\\CityBuildingSmall0_0_Ruined.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437557, "Doodads\\Cityscape\\Structures\\CityBuildingSmall0_1_Ruined\\CityBuildingSmall0_1_Ruined.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437558, "Doodads\\Cityscape\\Structures\\CityBuildingSmall0_2_Ruined\\CityBuildingSmall0_2_Ruined.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437374, "Doodads\\Cityscape\\Structures\\CityBuildingLarge_0_BaseRuin\\CityBuildingLarge_0_BaseRuin.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437537, "Doodads\\Cityscape\\Structures\\CityBuildingSmall135_0_BaseRuin\\CityBuildingSmall135_0_BaseRuin.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441141, "Doodads\\Cityscape\\Props\\City_Statue\\City_Statue.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442984, "Doodads\\Cityscape\\Props\\CityStoneBench\\CityStoneBench.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441199, "Doodads\\Cityscape\\Structures\\Tavern\\Tavern.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441203, "Doodads\\Cityscape\\Structures\\CityLowWall0\\CityLowWall0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441204, "Doodads\\Cityscape\\Structures\\CityLowWall135\\CityLowWall135.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441205, "Doodads\\Cityscape\\Structures\\CityLowWall45\\CityLowWall45.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441206, "Doodads\\Cityscape\\Structures\\CityLowWall90\\CityLowWall90.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441207, "Doodads\\Cityscape\\Structures\\City_LowWall\\City_LowWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441210, "Doodads\\Cityscape\\Structures\\City_LowWall_TallEndCapWithLantern\\City_LowWall_TallEndCapWithLantern.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441208, "Doodads\\Cityscape\\Structures\\City_LowWall_ShortEndCap\\City_LowWall_ShortEndCap.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441209, "Doodads\\Cityscape\\Structures\\City_LowWall_TallEndCap\\City_LowWall_TallEndCap.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441211, "Doodads\\Cityscape\\Structures\\City_LowWall_TallEndCapWithoutLantern\\City_LowWall_TallEndCapWithoutLantern.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442985, "Doodads\\Cityscape\\Props\\CityWoodBench\\CityWoodBench.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443448, "Doodads\\Icecrown\\Terrain\\ClearIceRock\\ClearIceRock0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443449, "Doodads\\Icecrown\\Terrain\\ClearIceRock\\ClearIceRock1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443489, "Doodads\\Icecrown\\Terrain\\ClearIceRock\\ClearIceRock2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443490, "Doodads\\Icecrown\\Terrain\\ClearIceRock\\ClearIceRock3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443491, "Doodads\\Icecrown\\Terrain\\ClearIceRock\\ClearIceRock4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443492, "Doodads\\Icecrown\\Terrain\\ClearIceRock\\ClearIceRock5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442215, "Doodads\\Ruins\\Water\\Coral\\Coral0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442224, "Doodads\\Ruins\\Water\\Coral\\Coral9.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442216, "Doodads\\Ruins\\Water\\Coral\\Coral1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442217, "Doodads\\Ruins\\Water\\Coral\\Coral2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442218, "Doodads\\Ruins\\Water\\Coral\\Coral3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442219, "Doodads\\Ruins\\Water\\Coral\\Coral4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442220, "Doodads\\Ruins\\Water\\Coral\\Coral5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442221, "Doodads\\Ruins\\Water\\Coral\\Coral6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442222, "Doodads\\Ruins\\Water\\Coral\\Coral7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442223, "Doodads\\Ruins\\Water\\Coral\\Coral8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442487, "Doodads\\LordaeronSummer\\Plants\\Corn\\Corn.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443243, "Doodads\\LordaeronSummer\\Terrain\\Crates\\crates0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443244, "Doodads\\LordaeronSummer\\Terrain\\Crates\\crates1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441197, "Doodads\\Northrend\\Structures\\NorthrendCrypt\\NorthrendCrypt.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443252, "Doodads\\Cityscape\\Props\\CrystalLamp\\CrystalLamp.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443233, "Doodads\\Cityscape\\Props\\CrystalShield\\CrystalShield.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426039, "YARP\\Buildings\\ExtraWalls\\AltarWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426087, "YARP\\Buildings\\ExtraWalls\\NorthrendWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426088, "YARP\\Buildings\\ExtraWalls\\OutlandWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426089, "YARP\\Buildings\\ExtraWalls\\RockWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426090, "YARP\\Buildings\\ExtraWalls\\SteelWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426091, "YARP\\Buildings\\ExtraWalls\\SunkenWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426092, "YARP\\Buildings\\ExtraWalls\\WoodWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426040, "YARP\\Buildings\\ExtraWalls\\CityWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426041, "YARP\\Buildings\\ExtraWalls\\DalaranWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426081, "YARP\\Buildings\\ExtraWalls\\FelwoodWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426082, "YARP\\Buildings\\ExtraWalls\\FortWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426083, "YARP\\Buildings\\ExtraWalls\\FortifiedSteelWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426084, "YARP\\Buildings\\ExtraWalls\\IronWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426085, "YARP\\Buildings\\ExtraWalls\\MithrilWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426086, "YARP\\Buildings\\ExtraWalls\\MithrilWall2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443188, "Doodads\\Dalaran\\Terrain\\DalaranBuilding\\DalaranBuilding0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443189, "Doodads\\Dalaran\\Terrain\\DalaranBuilding\\DalaranBuilding1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443190, "Doodads\\Dalaran\\Terrain\\DalaranVioletCitadel\\DalaranVioletCitadel.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437366, "Doodads\\Ruins\\Props\\DalaranRuinCrystals\\DalaranRuinCrystals.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437367, "Doodads\\Ruins\\Props\\DalaranRuinTower\\DalaranRuinTower.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437368, "Doodads\\Ruins\\Props\\DalaranRuinTower2\\DalaranRuinTower2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437369, "Doodads\\Ruins\\Props\\DalaranRuinTowerBase\\DalaranRuinTowerBase.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437370, "Doodads\\Ruins\\Props\\DalaranRuinTwoBases\\DalaranRuinTwoBases0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437371, "Doodads\\Ruins\\Props\\DalaranRuinTwoBases\\DalaranRuinTwoBases1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437372, "Doodads\\Ruins\\Props\\DalaranRuinTwoBases2\\DalaranRuinTwoBases2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437373, "Doodads\\Ruins\\Props\\DalaranVioletCitadelRuin\\DalaranVioletCitadelRuin.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441958, "buildings\\Other\\DarkPortal\\DarkPortal.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442679, "Doodads\\Cinematic\\DemonFootPrint\\DemonFootPrint0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442680, "Doodads\\Cinematic\\DemonFootPrint\\DemonFootPrint1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426096, "YARP\\Buildings\\Dungeon\\Bookshelf and Secret Entrance.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426097, "YARP\\Buildings\\Dungeon\\Bookshelf and Secret Entrance2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426093, "YARP\\Buildings\\Dungeon\\DungeonWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426098, "YARP\\Buildings\\Dungeon\\DungeonWall_ColumnEntrance.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426094, "YARP\\Buildings\\Dungeon\\DungeonWall_Corner.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426095, "YARP\\Buildings\\Dungeon\\DungeonWall_CornerOuter.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426099, "YARP\\Buildings\\Dungeon\\DungeonWall_Destructible.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426292, "YARP\\Buildings\\Dungeon\\DungeonWall_DoorWay Hell.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426100, "YARP\\Buildings\\Dungeon\\DungeonWall_DoorWay.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426101, "YARP\\Buildings\\Dungeon\\DungeonWall_DoorWayWDoor.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426297, "YARP\\Buildings\\Dungeon\\DungeonWall_DoorWay_W_Porticulus Hell.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426102, "YARP\\Buildings\\Dungeon\\DungeonWall_DorwayPortStone.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426290, "YARP\\Buildings\\Dungeon\\DungeonWall_Empty.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426103, "YARP\\Buildings\\Dungeon\\DungeonWall_Half.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426293, "YARP\\Buildings\\Dungeon\\DungeonWall_Hell.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426294, "YARP\\Buildings\\Dungeon\\DungeonWall_Hell_Half.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426295, "YARP\\Buildings\\Dungeon\\DungeonWall_Hell_InnerCorner.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426296, "YARP\\Buildings\\Dungeon\\DungeonWall_Hell_OuterCorner.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426104, "YARP\\Buildings\\Dungeon\\DungeonWall_Stone.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426105, "YARP\\Buildings\\Dungeon\\DungeonWall_StoneHalf.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426106, "YARP\\Buildings\\Dungeon\\DungeonWall_StoneInnerCorner.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426107, "YARP\\Buildings\\Dungeon\\DungeonWall_StoneOuterCorner.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426108, "YARP\\Buildings\\Dungeon\\DungeonWall_Stone_Catacomb.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426109, "YARP\\Buildings\\Dungeon\\DungeonWall_Stone_Catacomb2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426110, "YARP\\Buildings\\Dungeon\\DungeonWall_Stone_DoorWay.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426273, "YARP\\Buildings\\Dungeon\\DungeonWall_Stone_DoorWay2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426288, "YARP\\Buildings\\Dungeon\\DungeonWall_Stone_DoorWayWDoor.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426291, "YARP\\Buildings\\Dungeon\\Dwall_DemonPillar.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426289, "YARP\\Buildings\\Dungeon\\Dwall_StonePillar.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441449, "buildings\\Other\\ChieftainHut\\ChieftainHut.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441450, "buildings\\Other\\DraneiHut0\\DraneiHut0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441451, "buildings\\Other\\DraneiHut1\\DraneiHut1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441959, "buildings\\Other\\DragonBuilding\\DragonBuilding.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441960, "buildings\\Other\\DragonBuildingBlack\\DragonBuildingBlack.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441961, "buildings\\Other\\DragonBuildingBlue\\DragonBuildingBlue.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441962, "buildings\\Other\\DragonBuildingGreen\\DragonBuildingGreen.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441963, "buildings\\Other\\DragonRoost\\DragonRoost.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439096, "Doodads\\Dungeon\\Rocks\\Cave_FieryCrator\\Cave_FieryCrator.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442466, "Doodads\\Cinematic\\DungeonLever\\DungeonLever.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440946, "Doodads\\Dungeon\\Props\\DungeonObilisk\\DungeonObilisk.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438906, "Doodads\\Dungeon\\Rocks\\DungeonRock\\DungeonRock0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439091, "Doodads\\Dungeon\\Rocks\\DungeonRock\\DungeonRock9.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438907, "Doodads\\Dungeon\\Rocks\\DungeonRock\\DungeonRock1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438908, "Doodads\\Dungeon\\Rocks\\DungeonRock\\DungeonRock2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438909, "Doodads\\Dungeon\\Rocks\\DungeonRock\\DungeonRock3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438910, "Doodads\\Dungeon\\Rocks\\DungeonRock\\DungeonRock4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439073, "Doodads\\Dungeon\\Rocks\\DungeonRock\\DungeonRock5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439088, "Doodads\\Dungeon\\Rocks\\DungeonRock\\DungeonRock6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439089, "Doodads\\Dungeon\\Rocks\\DungeonRock\\DungeonRock7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439090, "Doodads\\Dungeon\\Rocks\\DungeonRock\\DungeonRock8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439092, "Doodads\\Dungeon\\Rocks\\DungeonStalagmite\\DungeonStalagmite0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439093, "Doodads\\Dungeon\\Rocks\\DungeonStalagmite\\DungeonStalagmite1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439094, "Doodads\\Dungeon\\Rocks\\DungeonStalagmite\\DungeonStalagmite2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439095, "Doodads\\Dungeon\\Rocks\\DungeonStalagmite\\DungeonStalagmite3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424048, "YARP\\Units\\Dwarf\\Adventurer\\DwarvenAdventurer.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424049, "YARP\\Units\\Dwarf\\Archbishop\\Hero_ArchBishop.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424050, "YARP\\Units\\Dwarf\\Architect\\Architect.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424051, "YARP\\Units\\Dwarf\\Bandit\\Dire_Bandit.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424052, "YARP\\Units\\Dwarf\\Baron\\Black_Baron.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424053, "YARP\\Units\\Dwarf\\Baron\\Dire_Baron.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424054, "YARP\\Units\\Dwarf\\Baron\\Hero_Baron.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424055, "YARP\\Units\\Dwarf\\Baron\\White_Baron.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424056, "YARP\\Units\\Dwarf\\Battlepriest\\Battle Priest .mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424057, "YARP\\Units\\Dwarf\\Courtmage\\Hero_DwarfGrandMage.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424058, "YARP\\Units\\Dwarf\\Footman\\Dire_Footman.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424059, "YARP\\Units\\Dwarf\\Geomancer\\Hero Sage.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424060, "YARP\\Units\\Dwarf\\Knight\\DwarfKnight.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424061, "YARP\\Units\\Dwarf\\Militia\\DwarvenMilitia.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424062, "YARP\\Units\\Dwarf\\Peasant\\DwarfNoviceMale.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424225, "YARP\\Units\\Dwarf\\Peasant\\DwarfNoviceMale2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424240, "YARP\\Units\\Dwarf\\Peasant\\DwarfNoviceMale3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424241, "YARP\\Units\\Dwarf\\Peasant\\DwarfNoviceMale4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424242, "YARP\\Units\\Dwarf\\Phalanx\\Dwarven Phalanx.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424244, "YARP\\Units\\Dwarf\\Sniper\\Dire_Rifleman.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424243, "YARP\\Units\\Dwarf\\Runebreaker\\DwarfRunebreaker.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424247, "YARP\\Units\\Dwarf\\Worker\\DwarfStonemason.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424245, "YARP\\Units\\Dwarf\\Thane\\Hero_Thane.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424246, "YARP\\Units\\Dwarf\\Warrior\\DwarvenWarrior.mdx")
endfunction

function populateModelRegistry1 takes nothing returns nothing
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424248, "YARP\\Units\\Edgy\\Bonelord\\Hero_Bonelord.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424249, "YARP\\Units\\Edgy\\DarkArchon\\Dark Elven Archon.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424289, "YARP\\Units\\Edgy\\DarkSorceress\\Dark Elven Sorceress.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424290, "YARP\\Units\\Edgy\\FlamingRaven\\FlamingRaven.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424291, "YARP\\Units\\Edgy\\Hatelord\\Hero_Hatelord.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442934, "Doodads\\Dungeon\\Terrain\\EggSack\\EggSack0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442935, "Doodads\\Dungeon\\Terrain\\EggSack\\EggSack1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442467, "Doodads\\Cinematic\\ElevatorPuzzle\\ElevatorPuzzle.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441707, "buildings\\Other\\ElvenFarm\\ElvenFarm.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441709, "buildings\\Other\\ElvenFishVillageBuilding0\\ElvenFishVillageBuilding0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441710, "buildings\\Other\\ElvenFishVillageBuilding1\\ElvenFishVillageBuilding1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441711, "buildings\\Other\\ElvenFishVillageBuilding2\\ElvenFishVillageBuilding2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441712, "buildings\\Other\\ElvenFishVillageBuilding3\\ElvenFishVillageBuilding3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441713, "buildings\\Other\\ElvenFishVillageBuilding4\\ElvenFishVillageBuilding4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441714, "buildings\\Other\\ElvenFishVillageBuildingRuined0\\ElvenFishVillageBuildingRuined0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441715, "buildings\\Other\\ElvenFishVillageBuildingRuined1\\ElvenFishVillageBuildingRuined1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441716, "buildings\\Other\\ElvenFishVillageBuildingRuined2\\ElvenFishVillageBuildingRuined2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441699, "buildings\\Other\\ElvenVillageBuilding0\\ElvenVillageBuilding0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441700, "buildings\\Other\\ElvenVillageBuilding1\\ElvenVillageBuilding1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441701, "buildings\\Other\\ElvenVillageBuilding2\\ElvenVillageBuilding2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441702, "buildings\\Other\\ElvenVillageBuilding3\\ElvenVillageBuilding3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441703, "buildings\\Other\\ElvenVillageBuilding4\\ElvenVillageBuilding4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441704, "buildings\\Other\\ElvenVillageBuilding5\\ElvenVillageBuilding5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441705, "buildings\\Other\\ElvenVillageBuilding6\\ElvenVillageBuilding6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441706, "buildings\\Other\\ElvenVillageBuilding7\\ElvenVillageBuilding7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443235, "Doodads\\Cityscape\\Props\\EmptyCrates\\EmptyCrates0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443236, "Doodads\\Cityscape\\Props\\EmptyCrates\\EmptyCrates1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443237, "Doodads\\Cityscape\\Props\\EmptyCrates\\EmptyCrates2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442726, "Doodads\\Cinematic\\EnergyField\\EnergyField.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440933, "Doodads\\Cinematic\\EnergyFieldWall\\EnergyFieldWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442468, "Doodads\\Cinematic\\EyeOfSargeras\\EyeOfSargeras.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437350, "Doodads\\LordaeronSummer\\Structures\\FarmScorched\\FarmScorched.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439157, "Doodads\\Felwood\\Structures\\FelwoodRuinsBlocks\\FelwoodRuinsBlocks.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441889, "Doodads\\Felwood\\Structures\\FelwoodBrokenColumn\\FelwoodBrokenColumn0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441904, "Doodads\\Felwood\\Structures\\FelwoodBrokenColumn\\FelwoodBrokenColumn1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438633, "Doodads\\Felwood\\Plants\\FelwoodBush\\FelwoodBush0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438634, "Doodads\\Felwood\\Plants\\FelwoodBush\\FelwoodBush1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438376, "Doodads\\Felwood\\Plants\\FelwoodCatTail\\FelwoodCatTail.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439158, "Doodads\\Felwood\\Rocks\\FelwoodFissure\\FelwoodFissure0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439159, "Doodads\\Felwood\\Rocks\\FelwoodFissure\\FelwoodFissure1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438324, "Doodads\\Felwood\\Plants\\FelwoodLillyPad\\FelwoodLillyPad.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438142, "Doodads\\Felwood\\Props\\FelwoodLogStraight\\FelwoodLogStraight.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439163, "Doodads\\Felwood\\Rocks\\FelwoodRock\\FelwoodRock0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439348, "Doodads\\Felwood\\Rocks\\FelwoodRock\\FelwoodRock9.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439164, "Doodads\\Felwood\\Rocks\\FelwoodRock\\FelwoodRock1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439165, "Doodads\\Felwood\\Rocks\\FelwoodRock\\FelwoodRock2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439166, "Doodads\\Felwood\\Rocks\\FelwoodRock\\FelwoodRock3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439329, "Doodads\\Felwood\\Rocks\\FelwoodRock\\FelwoodRock4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439344, "Doodads\\Felwood\\Rocks\\FelwoodRock\\FelwoodRock5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439345, "Doodads\\Felwood\\Rocks\\FelwoodRock\\FelwoodRock6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439346, "Doodads\\Felwood\\Rocks\\FelwoodRock\\FelwoodRock7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439347, "Doodads\\Felwood\\Rocks\\FelwoodRock\\FelwoodRock8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439160, "Doodads\\Felwood\\Structures\\FelwoodRubble\\FelwoodRubble0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439161, "Doodads\\Felwood\\Structures\\FelwoodRubble\\FelwoodRubble1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439162, "Doodads\\Felwood\\Structures\\FelwoodRubble\\FelwoodRubble2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438115, "Doodads\\Felwood\\Plants\\FelwoodShrooms\\FelwoodShrooms0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438116, "Doodads\\Felwood\\Plants\\FelwoodShrooms\\FelwoodShrooms1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438117, "Doodads\\Felwood\\Plants\\FelwoodShrooms\\FelwoodShrooms2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438118, "Doodads\\Felwood\\Plants\\FelwoodShrooms\\FelwoodShrooms3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439349, "Doodads\\Felwood\\Rocks\\Felwood_Spires\\Felwood_Spires0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439350, "Doodads\\Felwood\\Rocks\\Felwood_Spires\\Felwood_Spires1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439351, "Doodads\\Felwood\\Rocks\\Felwood_Spires\\Felwood_Spires2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439352, "Doodads\\Felwood\\Rocks\\Felwood_Spires\\Felwood_Spires3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439353, "Doodads\\Felwood\\Rocks\\Felwood_Spires\\Felwood_Spires4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439393, "Doodads\\Felwood\\Rocks\\Felwood_Spires\\Felwood_Spires5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439394, "Doodads\\Felwood\\Rocks\\Felwood_Spires\\Felwood_Spires6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439395, "Doodads\\Felwood\\Rocks\\Felwood_Spires\\Felwood_Spires7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438141, "Doodads\\Felwood\\Props\\FelwoodHollowStump\\FelwoodHollowStump.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438387, "Doodads\\Felwood\\Plants\\Felwood_Thorns\\Felwood_Thorns0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438388, "Doodads\\Felwood\\Plants\\Felwood_Thorns\\Felwood_Thorns1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438389, "Doodads\\Felwood\\Plants\\Felwood_Thorns\\Felwood_Thorns2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438390, "Doodads\\Felwood\\Plants\\Felwood_Thorns\\Felwood_Thorns3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438391, "Doodads\\Felwood\\Plants\\Felwood_Thorns\\Felwood_Thorns4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438392, "Doodads\\Felwood\\Plants\\Felwood_Thorns\\Felwood_Thorns5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438393, "Doodads\\Felwood\\Plants\\Felwood_Thorns\\Felwood_Thorns6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440948, "Doodads\\Felwood\\Props\\FelwoodBrokenObilisk\\FelwoodBrokenObilisk0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440947, "Doodads\\Felwood\\Props\\FelwoodBrokenObilisk\\FelwoodBrokenObilisk1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440949, "Doodads\\Felwood\\Props\\FelwoodObilisk\\FelwoodObilisk.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442494, "Doodads\\Cinematic\\FirePillarMedium\\FirePillarMedium.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443441, "Doodads\\Northrend\\Props\\FirePit\\FirePit.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443442, "Doodads\\Northrend\\Props\\FirePitPig\\FirePitPig.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443443, "Doodads\\Northrend\\Props\\FirePitTrashed\\FirePitTrashed.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442657, "Doodads\\Cinematic\\FireTrapSide\\FireTrapSide.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442672, "Doodads\\Cinematic\\FireTrapUp\\FireTrapUp.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442226, "Doodads\\Ashenvale\\Water\\Fish\\Fish.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442225, "Doodads\\Felwood\\Props\\Fish_Dead\\Fish_Dead.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442227, "Doodads\\Ruins\\Water\\FishSchool\\FishSchool.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442228, "Doodads\\Ruins\\Water\\FishTropical\\FishTropical.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438137, "Doodads\\LordaeronSummer\\Props\\Flies\\Flies.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442418, "Doodads\\Northrend\\Water\\FloatingBox\\FloatingBox.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442419, "Doodads\\Northrend\\Water\\FloatingPanel\\FloatingPanel.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442420, "Doodads\\Northrend\\Water\\FloatingPlank\\FloatingPlank.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443184, "Doodads\\Cityscape\\Plants\\FlowerBedStraight\\FlowerBedStraight.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443185, "Doodads\\Cityscape\\Plants\\PottedPlant\\PottedPlant.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438639, "Doodads\\Ruins\\Plants\\Ruins_Flower\\Ruins_Flower0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438640, "Doodads\\Ruins\\Plants\\Ruins_Flower\\Ruins_Flower1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438641, "Doodads\\Ruins\\Plants\\Ruins_Flower\\Ruins_Flower2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438642, "Doodads\\Ruins\\Plants\\Ruins_Flower\\Ruins_Flower3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438643, "Doodads\\Ruins\\Plants\\Ruins_Flower\\Ruins_Flower4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424292, "YARP\\Units\\Faceless\\Cultist\\FacelessOneCultist.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424296, "YARP\\Units\\Faceless\\Youngling\\FacelessOneKid.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424293, "YARP\\Units\\Faceless\\Scorpion\\FacelessOneScorpion.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424294, "YARP\\Units\\Faceless\\Widow\\FacelessOneWidow.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424295, "YARP\\Units\\Faceless\\Worker\\FacelessOneWorker.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440934, "Doodads\\Dungeon\\Props\\Forcewall\\Forcewall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440935, "Doodads\\Dungeon\\Props\\Forcewall45\\Forcewall45.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441452, "buildings\\Other\\ForestTrollHut0\\ForestTrollHut0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441453, "buildings\\Other\\ForestTrollHut1\\ForestTrollHut1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426337, "YARP\\Buildings\\Fortification\\FortificationBigTower.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426338, "YARP\\Buildings\\Fortification\\FortificationDrumTower.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426339, "YARP\\Buildings\\Fortification\\FortificationGate.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426340, "YARP\\Buildings\\Fortification\\FortificationGateBig.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426348, "YARP\\Buildings\\Fortification\\FortificationPalisade.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426349, "YARP\\Buildings\\Fortification\\FortificationPalisadeGate.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426350, "YARP\\Buildings\\Fortification\\FortificationPalisadeInnerEdge.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426351, "YARP\\Buildings\\Fortification\\FortificationPalisadeOuterEdge.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426341, "YARP\\Buildings\\Fortification\\FortificationStairs.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426342, "YARP\\Buildings\\Fortification\\FortificationTower.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426343, "YARP\\Buildings\\Fortification\\FortificationWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426344, "YARP\\Buildings\\Fortification\\FortificationWallInnerEdge.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426345, "YARP\\Buildings\\Fortification\\FortificationWallOuterEdge.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426346, "YARP\\Buildings\\Fortification\\FortificationWallSquare.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426347, "YARP\\Buildings\\Fortification\\SiegeLadder.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441968, "buildings\\Other\\FountainOfLife\\FountainOfHealth.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441969, "buildings\\Other\\FountainOfLifeBlood\\FountainOfLifeBlood.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441970, "buildings\\Other\\FountainOfLifeDefiled\\FountainOfLifeDefiled.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441971, "buildings\\Other\\FountainOfMana\\FountainOfMana.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437353, "Doodads\\Cityscape\\Props\\FountainRuined\\FountainRuined.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441972, "buildings\\Other\\Frostmourne\\Frostmourne.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442677, "Doodads\\Cinematic\\FrostTrapSide\\FrostTrapSide.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442678, "Doodads\\Cinematic\\FrostTrapUp\\FrostTrapUp.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441973, "buildings\\Other\\FruitStand\\FruitStand.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441454, "buildings\\Other\\FurbolgHut\\FurbolgHut.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441455, "buildings\\Other\\FurbolgHut2\\FurbolgHut2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441214, "Doodads\\Dungeon\\Terrain\\CaveGate\\CaveGate.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441213, "Doodads\\Cityscape\\Terrain\\CityEnteranceGate\\CityEnteranceGate.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441398, "Doodads\\LordaeronSummer\\Terrain\\BigElfGate\\BigElfGate.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441399, "Doodads\\LordaeronSummer\\Terrain\\BigElfGate45\\BigElfGate45.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441377, "Doodads\\Dungeon\\Terrain\\DungeonPorticulisGate\\DungeonPorticulisGate.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441392, "Doodads\\Dungeon\\Terrain\\DungeonPorticulisGate45\\DungeonPorticulisGate45.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441400, "Doodads\\LordaeronSummer\\Terrain\\ElfGate\\ElfGate.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441401, "Doodads\\LordaeronSummer\\Terrain\\ElfGate45\\ElfGate45.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441396, "Doodads\\Icecrown\\Terrain\\IceGate\\IceGate.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441393, "Doodads\\Icecrown\\Terrain\\IceCrownGate\\IceCrownGate.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441394, "Doodads\\Icecrown\\Terrain\\IceCrownGate45\\IceCrownGate45.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441395, "Doodads\\Icecrown\\Terrain\\IceCrownThroneGate\\IceCrownThroneGate.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441397, "Doodads\\Icecrown\\Terrain\\IceGate45\\IceGate45.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441443, "Doodads\\LordaeronSummer\\Terrain\\IronGate\\IronGate.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441444, "Doodads\\LordaeronSummer\\Terrain\\IronGate45\\IronGate45.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441441, "Doodads\\LordaeronSummer\\Terrain\\Gate\\Gate.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441442, "Doodads\\LordaeronSummer\\Terrain\\Gate45\\Gate45.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441212, "Doodads\\Cinematic\\SargerasGate\\SargerasGate.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441445, "Doodads\\Ruins\\Terrain\\RuinsGate\\RuinsGate.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441446, "Doodads\\Ruins\\Terrain\\RuinsGate45\\RuinsGate45.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424297, "YARP\\Units\\Goblin\\Alchemist\\Hero_Goblin_Alchemist.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424298, "YARP\\Units\\Goblin\\Engineer\\GoblinEngineer.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424299, "YARP\\Units\\Goblin\\Female\\GoblinFemale.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424300, "YARP\\Units\\Goblin\\Gunslinger\\HeroGoblinGunslinger.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424301, "YARP\\Units\\Goblin\\Merchant\\GoblinMerchant.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424302, "YARP\\Units\\Goblin\\Miner\\GoblinMiner.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424303, "YARP\\Units\\Goblin\\Sorceror\\GoblinMage01.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424304, "YARP\\Units\\Goblin\\Sorceror\\GoblinMage02.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437871, "Doodads\\Cinematic\\GlowingRunes\\GlowingRunes0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437872, "Doodads\\Cinematic\\GlowingRunes\\GlowingRunes1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437873, "Doodads\\Cinematic\\GlowingRunes\\GlowingRunes2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437874, "Doodads\\Cinematic\\GlowingRunes\\GlowingRunes3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437875, "Doodads\\Cinematic\\GlowingRunes\\GlowingRunes4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437876, "Doodads\\Cinematic\\GlowingRunes\\GlowingRunes5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437877, "Doodads\\Cinematic\\GlowingRunes\\GlowingRunes6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437878, "Doodads\\Cinematic\\GlowingRunes\\GlowingRunes7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437879, "Doodads\\Cinematic\\GlowingRunes\\GlowingRunes8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441456, "buildings\\Other\\GnollHut\\GnollHut.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441457, "buildings\\Other\\GnollHut2\\GnollHut2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426352, "YARP\\Buildings\\Goblin\\GoblinBarracks.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426353, "YARP\\Buildings\\Goblin\\GoblinFactory.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426354, "YARP\\Buildings\\Goblin\\GoblinFuelPump.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426355, "YARP\\Buildings\\Goblin\\GoblinOutpost.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426356, "YARP\\Buildings\\Goblin\\GoblinTower.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441913, "buildings\\Other\\AmmoDump\\AmmoDump.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441974, "buildings\\Other\\GoblinShipyard\\GoblinShipyard.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442160, "buildings\\Other\\Merchant\\Merchant.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437349, "Doodads\\LordaeronSummer\\Structures\\GoblinShipyardRuined\\GoblinShipyardRuined.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441975, "buildings\\Other\\GoldMine\\Goldmine.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426357, "YARP\\Buildings\\Gondolian\\Gondolian_Roof.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426358, "YARP\\Buildings\\Gondolian\\Gondolian_Tower2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426360, "YARP\\Buildings\\Gondolian\\Gondolian_Wall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426359, "YARP\\Buildings\\Gondolian\\Gondolin_Tower.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426362, "YARP\\Buildings\\Gondolian\\MinasHouse01.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426361, "YARP\\Buildings\\Gondolian\\MinasWall2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441976, "buildings\\Other\\GrainWarehouse\\GrainWarehouse.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441191, "Doodads\\LordaeronSummer\\Structures\\Granary\\Granary.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437346, "Doodads\\LordaeronSummer\\Structures\\GranaryBurned\\GranaryBurned.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441977, "buildings\\Other\\GranaryInfected\\GranaryInfected.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438635, "Doodads\\LordaeronSummer\\Plants\\GrassTuft\\GrassTuft0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438636, "Doodads\\LordaeronSummer\\Plants\\GrassTuft\\GrassTuft1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438637, "Doodads\\LordaeronSummer\\Plants\\GrassTuft\\GrassTuft2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438638, "Doodads\\LordaeronSummer\\Plants\\GrassTuft\\GrassTuft3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442930, "Doodads\\Outland\\Props\\Grate\\Grate0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442931, "Doodads\\Outland\\Props\\Grate\\Grate1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437863, "Doodads\\LordaeronSummer\\Props\\Grave\\Grave.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426363, "YARP\\Buildings\\Greek\\GreekArcheryRange.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426364, "YARP\\Buildings\\Greek\\GreekBarracks.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426365, "YARP\\Buildings\\Greek\\GreekBlacksmith.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016426366, "YARP\\Buildings\\Greek\\GreekHouse.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436513, "YARP\\Buildings\\Greek\\GreekMarketplace.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436528, "YARP\\Buildings\\Greek\\GreekStable.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436529, "YARP\\Buildings\\Greek\\GreekStockpile.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436530, "YARP\\Buildings\\Greek\\GreekTemple.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436531, "YARP\\Buildings\\Greek\\GreekTownCenter.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436532, "YARP\\Buildings\\Greek\\GreekWatchtower.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442469, "Doodads\\Cinematic\\FootSwitch\\FootSwitch.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441466, "buildings\\Other\\HarpyNest\\HarpyNest.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442480, "Doodads\\LordaeronSummer\\Props\\Hay\\Hay0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442481, "Doodads\\LordaeronSummer\\Props\\Hay\\Hay1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442482, "Doodads\\LordaeronSummer\\Props\\Hay\\Hay2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442483, "Doodads\\LordaeronSummer\\Props\\Hay\\Hay3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442484, "Doodads\\LordaeronSummer\\Props\\Hay\\Hay4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442485, "Doodads\\LordaeronSummer\\Props\\HayCart\\HayCart.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437358, "Doodads\\LordaeronSummer\\Props\\HayCartbroken\\HayCartbroken.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437356, "Doodads\\LordaeronSummer\\Props\\RottenHayCart\\RottenHayCart.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437357, "Doodads\\LordaeronSummer\\Props\\RottenHayCartbroken\\RottenHayCartbroken.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442486, "Doodads\\LordaeronSummer\\Props\\HayClump\\HayClump.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437359, "Doodads\\LordaeronSummer\\Props\\RottenHay\\RottenHay0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437360, "Doodads\\LordaeronSummer\\Props\\RottenHay\\RottenHay1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437361, "Doodads\\LordaeronSummer\\Props\\RottenHay\\RottenHay2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437362, "Doodads\\LordaeronSummer\\Props\\RottenHay\\RottenHay3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437363, "Doodads\\LordaeronSummer\\Props\\RottenHay\\RottenHay4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437601, "Doodads\\LordaeronSummer\\Props\\HeadOnSpear\\HeadOnSpear0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437602, "Doodads\\LordaeronSummer\\Props\\HeadOnSpear\\HeadOnSpear1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437603, "Doodads\\LordaeronSummer\\Props\\HeadOnSpear\\HeadOnSpear2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424305, "YARP\\Units\\Highelf\\Agent\\BlackSunAssasin.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424306, "YARP\\Units\\Highelf\\Arcanist\\HeroArcanist.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424307, "YARP\\Units\\Highelf\\Archer\\HighElvenArcher.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424308, "YARP\\Units\\Highelf\\Conjurer\\HighElfPriestess.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424309, "YARP\\Units\\Highelf\\Elementalist\\BlackSunElementalist.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424310, "YARP\\Units\\Highelf\\Enforcer\\HighElfSpellThief.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424311, "YARP\\Units\\Highelf\\FemaleLieutenant\\FemaleCaptain.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424312, "YARP\\Units\\Highelf\\General\\HighMage.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424313, "YARP\\Units\\Highelf\\MageHuntress\\HeroMageHuntressV_2.1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424314, "YARP\\Units\\Highelf\\Priestess\\HighElfPriest.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424315, "YARP\\Units\\Highelf\\Rogue\\Hero Rogue.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424316, "YARP\\Units\\Highelf\\Spellbreaker\\BlackSunSpellbreaker.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441980, "buildings\\Other\\MageTower\\MageTower.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442476, "Doodads\\LordaeronSummer\\Props\\HitchingPost\\HitchingPost.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441978, "buildings\\Other\\HornOfCenarius\\HornOfCenarius.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424317, "YARP\\Units\\Human\\Archer\\AllianceArcher.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424318, "YARP\\Units\\Human\\Archmage\\HeroArchMageOnFoot.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424481, "YARP\\Units\\Human\\Assassin\\HumanAssassine.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424496, "YARP\\Units\\Human\\BanditCrossbowman\\BanditCrossbowmanII.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424500, "YARP\\Units\\Human\\Bishop\\Human Bishop.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424501, "YARP\\Units\\Human\\Delegate\\Hero_Warrior.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424499, "YARP\\Units\\Human\\BanditWoman\\BanditFemale.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424502, "YARP\\Units\\Human\\FemaleFootman\\FemaleFootman.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424497, "YARP\\Units\\Human\\BanditMistress\\BanditLordFemale.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424503, "YARP\\Units\\Human\\FemalePeasant\\PeasantFemale.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424498, "YARP\\Units\\Human\\BanditWomanSpearthrower\\BanditSpearThrowerFemale.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424504, "YARP\\Units\\Human\\Grandmage\\Hero Wizard.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424505, "YARP\\Units\\Human\\Grandmage\\Human Wizard.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424545, "YARP\\Units\\Human\\Halberdier\\Halberdier.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424546, "YARP\\Units\\Human\\King\\King.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424547, "YARP\\Units\\Human\\LightMistress\\FemalePaladin.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424548, "YARP\\Units\\Human\\Magus\\Hero_Antonidas.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424549, "YARP\\Units\\Human\\Magus\\Hero_BanditWizard.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424550, "YARP\\Units\\Human\\Magus\\Hero_GreyWizard.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424551, "YARP\\Units\\Human\\Magus\\Hero_WhiteWizard.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424553, "YARP\\Units\\Human\\MountedRoyalCaptain\\Mounted Captain.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424552, "YARP\\Units\\Human\\Monk\\Monk.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424554, "YARP\\Units\\Human\\Pikeman\\Human Pikeman.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424555, "YARP\\Units\\Human\\PriestLady\\FemaleMage.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424556, "YARP\\Units\\Human\\Protector\\Royal Knight.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424557, "YARP\\Units\\Human\\Queen\\RoyalQueen.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424558, "YARP\\Units\\Human\\RoyalCaptain\\Captain.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424559, "YARP\\Units\\Human\\Spearman\\Pikeman.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424560, "YARP\\Units\\Human\\TemplarExemplar\\TemplarExemplar.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424561, "YARP\\Units\\Human\\TemplarGatherer\\Commoner.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424562, "YARP\\Units\\Human\\TemplarJusticar\\TemplarJusticar.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424564, "YARP\\Units\\Human\\TemplarPlagueDoctor\\TemplarSurgeon.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424565, "YARP\\Units\\Human\\TemplarRanger\\TemplarArcher.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424563, "YARP\\Units\\Human\\TemplarKnight\\TemplarWarrior.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424566, "YARP\\Units\\Human\\Wizard\\WC2Mage.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443497, "Doodads\\Northrend\\Water\\North_Iceberg\\North_Iceberg.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443498, "Doodads\\Northrend\\Water\\North_Iceberg2\\North_Iceberg2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443499, "Doodads\\Northrend\\Water\\North_Iceberg3\\North_Iceberg3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443500, "Doodads\\Northrend\\Water\\North_Iceberg4\\North_Iceberg4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439406, "Doodads\\Icecrown\\Rocks\\IceBlock\\IceBlock0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439407, "Doodads\\Icecrown\\Rocks\\IceBlock\\IceBlock1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439408, "Doodads\\Icecrown\\Rocks\\IceBlock\\IceBlock2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439409, "Doodads\\Icecrown\\Rocks\\IceBlock\\IceBlock3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442988, "Doodads\\Icecrown\\Props\\IcecrownChair\\IcecrownChair.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439413, "Doodads\\Icecrown\\Rocks\\Icecrown_Crystal\\Icecrown_Crystal0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439414, "Doodads\\Icecrown\\Rocks\\Icecrown_Crystal\\Icecrown_Crystal1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439415, "Doodads\\Icecrown\\Rocks\\Icecrown_Crystal\\Icecrown_Crystal2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439416, "Doodads\\Icecrown\\Rocks\\Icecrown_Crystal\\Icecrown_Crystal3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439417, "Doodads\\Icecrown\\Rocks\\Icecrown_Crystal\\Icecrown_Crystal4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439418, "Doodads\\Icecrown\\Rocks\\Icecrown_Crystal\\Icecrown_Crystal5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439419, "Doodads\\Icecrown\\Rocks\\Icecrown_Crystal\\Icecrown_Crystal6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439420, "Doodads\\Icecrown\\Rocks\\Icecrown_Crystal\\Icecrown_Crystal7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439421, "Doodads\\Icecrown\\Rocks\\Icecrown_Crystal\\Icecrown_Crystal8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439396, "Doodads\\Icecrown\\Rocks\\Glacier\\Glacier0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439405, "Doodads\\Icecrown\\Rocks\\Glacier\\Glacier9.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439397, "Doodads\\Icecrown\\Rocks\\Glacier\\Glacier1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439398, "Doodads\\Icecrown\\Rocks\\Glacier\\Glacier2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439399, "Doodads\\Icecrown\\Rocks\\Glacier\\Glacier3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439400, "Doodads\\Icecrown\\Rocks\\Glacier\\Glacier4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439401, "Doodads\\Icecrown\\Rocks\\Glacier\\Glacier5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439402, "Doodads\\Icecrown\\Rocks\\Glacier\\Glacier6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439403, "Doodads\\Icecrown\\Rocks\\Glacier\\Glacier7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439404, "Doodads\\Icecrown\\Rocks\\Glacier\\Glacier8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442989, "Doodads\\Icecrown\\Props\\Icecrown_IceChair\\Icecrown_IceChair.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440945, "Doodads\\Cinematic\\IcecrownObelisk\\IcecrownObelisk.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440950, "Doodads\\Icecrown\\Props\\IceCrownObelisk\\IceCrownObelisk0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440951, "Doodads\\Icecrown\\Props\\IceCrownObelisk\\IceCrownObelisk1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440952, "Doodads\\Icecrown\\Props\\IceCrownObelisk\\IceCrownObelisk2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441910, "Doodads\\Icecrown\\Props\\IceCrownPillar\\IceCrownPillar0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441911, "Doodads\\Icecrown\\Props\\IceCrownPillar\\IceCrownPillar1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441912, "Doodads\\Icecrown\\Props\\IceCrownPillar\\IceCrownPillar2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439422, "Doodads\\Icecrown\\Rocks\\Ice_Rock\\Ice_Rock0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439585, "Doodads\\Icecrown\\Rocks\\Ice_Rock\\Ice_Rock1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439600, "Doodads\\Icecrown\\Rocks\\Ice_Rock\\Ice_Rock2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439601, "Doodads\\Icecrown\\Rocks\\Ice_Rock\\Ice_Rock3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439602, "Doodads\\Icecrown\\Rocks\\Ice_Rock\\Ice_Rock4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439603, "Doodads\\Icecrown\\Rocks\\Ice_Rock\\Ice_Rock5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439604, "Doodads\\Icecrown\\Rocks\\Ice_Rock\\Ice_Rock6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439605, "Doodads\\Icecrown\\Rocks\\Ice_Rock\\Ice_Rock7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439410, "Doodads\\Icecrown\\Structures\\Icecrown_Rubble\\Icecrown_Rubble0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439411, "Doodads\\Icecrown\\Structures\\Icecrown_Rubble\\Icecrown_Rubble1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439412, "Doodads\\Icecrown\\Structures\\Icecrown_Rubble\\Icecrown_Rubble2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439606, "Doodads\\Icecrown\\Rocks\\Ice_SnowRock\\Ice_SnowRock0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439654, "Doodads\\Icecrown\\Rocks\\Ice_SnowRock\\Ice_SnowRock9.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439607, "Doodads\\Icecrown\\Rocks\\Ice_SnowRock\\Ice_SnowRock1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439608, "Doodads\\Icecrown\\Rocks\\Ice_SnowRock\\Ice_SnowRock2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439609, "Doodads\\Icecrown\\Rocks\\Ice_SnowRock\\Ice_SnowRock3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439649, "Doodads\\Icecrown\\Rocks\\Ice_SnowRock\\Ice_SnowRock4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439650, "Doodads\\Icecrown\\Rocks\\Ice_SnowRock\\Ice_SnowRock5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439651, "Doodads\\Icecrown\\Rocks\\Ice_SnowRock\\Ice_SnowRock6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439652, "Doodads\\Icecrown\\Rocks\\Ice_SnowRock\\Ice_SnowRock7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439653, "Doodads\\Icecrown\\Rocks\\Ice_SnowRock\\Ice_SnowRock8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442994, "Doodads\\Icecrown\\Terrain\\IceCrownThrone\\IceCrownThrone.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441979, "buildings\\Other\\IceCrownTreasureBox\\IceCrownTreasureBox.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440425, "Doodads\\Icecrown\\Terrain\\IceCrownWall135\\IceCrownWall1350.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440430, "Doodads\\Icecrown\\Terrain\\IceCrownWall135\\IceCrownWall1351.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440437, "Doodads\\Icecrown\\Terrain\\IceCrownWall135\\IceCrownWall1352.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440426, "Doodads\\Icecrown\\Terrain\\IceCrownWall135\\IceCrownWall1353.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440438, "Doodads\\Icecrown\\Terrain\\IceCrownWall135\\IceCrownWall1354.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440427, "Doodads\\Icecrown\\Terrain\\IceCrownWall45\\IceCrownWall450.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440431, "Doodads\\Icecrown\\Terrain\\IceCrownWall45\\IceCrownWall451.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440439, "Doodads\\Icecrown\\Terrain\\IceCrownWall45\\IceCrownWall452.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440428, "Doodads\\Icecrown\\Terrain\\IceCrownWall45\\IceCrownWall453.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440440, "Doodads\\Icecrown\\Terrain\\IceCrownWall45\\IceCrownWall454.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440421, "Doodads\\Icecrown\\Terrain\\IceCrownWall0\\IceCrownWall00.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440429, "Doodads\\Icecrown\\Terrain\\IceCrownWall0\\IceCrownWall01.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440433, "Doodads\\Icecrown\\Terrain\\IceCrownWall0\\IceCrownWall02.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440422, "Doodads\\Icecrown\\Terrain\\IceCrownWall0\\IceCrownWall03.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440434, "Doodads\\Icecrown\\Terrain\\IceCrownWall0\\IceCrownWall04.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440423, "Doodads\\Icecrown\\Terrain\\IceCrownWall90\\IceCrownWall900.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440432, "Doodads\\Icecrown\\Terrain\\IceCrownWall90\\IceCrownWall901.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440435, "Doodads\\Icecrown\\Terrain\\IceCrownWall90\\IceCrownWall902.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440424, "Doodads\\Icecrown\\Terrain\\IceCrownWall90\\IceCrownWall903.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440436, "Doodads\\Icecrown\\Terrain\\IceCrownWall90\\IceCrownWall904.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442425, "Doodads\\Terrain\\CliffDoodad\\IceCrownWaterfall\\IceCrownWaterfall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443493, "Doodads\\Icecrown\\Water\\IceEdge\\IceEdge0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443494, "Doodads\\Icecrown\\Water\\IceEdge\\IceEdge1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443495, "Doodads\\Icecrown\\Water\\IceEdge\\IceEdge2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443496, "Doodads\\Icecrown\\Water\\IceEdge\\IceEdge3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443501, "Doodads\\Northrend\\Water\\North_IceFloe\\North_IceFloe.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443502, "Doodads\\Northrend\\Water\\North_IceFloe2\\North_IceFloe2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443503, "Doodads\\Northrend\\Water\\North_IceFloe3\\North_IceFloe3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443504, "Doodads\\Northrend\\Water\\North_IceFloe4\\North_IceFloe4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443261, "Doodads\\Icecrown\\Props\\IceTorch\\IceTorch.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441458, "buildings\\Other\\IceTrollHut0\\IceTrollHut0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441459, "buildings\\Other\\IceTrollHut1\\IceTrollHut1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443447, "Doodads\\Icecrown\\Structures\\Igloo\\Igloo.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437604, "Doodads\\LordaeronSummer\\Props\\ImpaledBody\\ImpaledBody0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437605, "Doodads\\LordaeronSummer\\Props\\ImpaledBody\\ImpaledBody1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441192, "Doodads\\LordaeronSummer\\Structures\\Inn\\Inn.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437348, "Doodads\\LordaeronSummer\\Structures\\InnScorched\\InnScorched.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442748, "Doodads\\Dungeon\\Props\\IronMaiden\\IronMaiden.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443238, "Doodads\\Dungeon\\Props\\JunkPile\\JunkPile0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443239, "Doodads\\Dungeon\\Props\\JunkPile\\JunkPile1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441138, "Doodads\\Ashenvale\\Props\\KeeperStatue\\KeeperStatue.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442995, "Doodads\\Dalaran\\Props\\KingThrone\\KingThrone.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441142, "Doodads\\Cityscape\\Props\\KnightStatueA\\KnightStatueA.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443253, "Doodads\\LordaeronSummer\\Props\\LanternPost\\LanternPost0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443254, "Doodads\\LordaeronSummer\\Props\\LanternPost\\LanternPost1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443259, "Doodads\\Cityscape\\Props\\LanternPost\\LanternPost.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442725, "Doodads\\Cinematic\\Lightningbolt\\Lightningbolt.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438320, "Doodads\\LordaeronSummer\\Plants\\LillyPad\\LillyPad.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438321, "Doodads\\LordaeronSummer\\Plants\\LilyPad\\LilyPad0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438322, "Doodads\\LordaeronSummer\\Plants\\LilyPad\\LilyPad1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438323, "Doodads\\LordaeronSummer\\Plants\\LilyPad\\LilyPad2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440695, "Doodads\\Village\\Props\\Village_Fencelong\\Village_Fencelong.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440696, "Doodads\\Village\\Props\\Village_FencelongAngled\\Village_FencelongAngled.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439655, "Doodads\\LordaeronSummer\\Rocks\\Lords_Rock\\Lords_Rock0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439664, "Doodads\\LordaeronSummer\\Rocks\\Lords_Rock\\Lords_Rock9.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439656, "Doodads\\LordaeronSummer\\Rocks\\Lords_Rock\\Lords_Rock1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439657, "Doodads\\LordaeronSummer\\Rocks\\Lords_Rock\\Lords_Rock2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439658, "Doodads\\LordaeronSummer\\Rocks\\Lords_Rock\\Lords_Rock3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439659, "Doodads\\LordaeronSummer\\Rocks\\Lords_Rock\\Lords_Rock4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439660, "Doodads\\LordaeronSummer\\Rocks\\Lords_Rock\\Lords_Rock5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439661, "Doodads\\LordaeronSummer\\Rocks\\Lords_Rock\\Lords_Rock6.mdx")
endfunction

function populateModelRegistry2 takes nothing returns nothing
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439662, "Doodads\\LordaeronSummer\\Rocks\\Lords_Rock\\Lords_Rock7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439663, "Doodads\\LordaeronSummer\\Rocks\\Lords_Rock\\Lords_Rock8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439665, "Doodads\\LordaeronSummer\\Terrain\\LoardaeronRockChunks\\LoardaeronRockChunks0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439666, "Doodads\\LordaeronSummer\\Terrain\\LoardaeronRockChunks\\LoardaeronRockChunks1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439667, "Doodads\\LordaeronSummer\\Terrain\\LoardaeronRockChunks\\LoardaeronRockChunks2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439668, "Doodads\\LordaeronSummer\\Terrain\\LoardaeronRockChunks\\LoardaeronRockChunks3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439669, "Doodads\\LordaeronSummer\\Terrain\\LoardaeronRockChunks\\LoardaeronRockChunks4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439670, "Doodads\\LordaeronSummer\\Terrain\\LoardaeronRockChunks\\LoardaeronRockChunks5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440633, "Doodads\\LordaeronSummer\\Props\\RubbleStoneWall\\RubbleStoneWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440445, "Doodads\\LordaeronSummer\\Terrain\\StoneWall135\\StoneWall1350.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440629, "Doodads\\LordaeronSummer\\Terrain\\StoneWall135\\StoneWall1352.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440446, "Doodads\\LordaeronSummer\\Terrain\\StoneWall135\\StoneWall1353.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440630, "Doodads\\LordaeronSummer\\Terrain\\StoneWall135\\StoneWall1354.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440609, "Doodads\\LordaeronSummer\\Terrain\\StoneWall45\\StoneWall450.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440631, "Doodads\\LordaeronSummer\\Terrain\\StoneWall45\\StoneWall452.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440624, "Doodads\\LordaeronSummer\\Terrain\\StoneWall45\\StoneWall453.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440632, "Doodads\\LordaeronSummer\\Terrain\\StoneWall45\\StoneWall454.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440673, "Doodads\\LordaeronSummer\\Props\\WallFountainCliff\\WallFountainCliff0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440674, "Doodads\\LordaeronSummer\\Props\\WallFountainCliff\\WallFountainCliff1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440441, "Doodads\\LordaeronSummer\\Terrain\\StoneWall0\\StoneWall00.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440625, "Doodads\\LordaeronSummer\\Terrain\\StoneWall0\\StoneWall02.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440442, "Doodads\\LordaeronSummer\\Terrain\\StoneWall0\\StoneWall03.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440626, "Doodads\\LordaeronSummer\\Terrain\\StoneWall0\\StoneWall04.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440443, "Doodads\\LordaeronSummer\\Terrain\\StoneWall90\\StoneWall900.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440627, "Doodads\\LordaeronSummer\\Terrain\\StoneWall90\\StoneWall902.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440444, "Doodads\\LordaeronSummer\\Terrain\\StoneWall90\\StoneWall903.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440628, "Doodads\\LordaeronSummer\\Terrain\\StoneWall90\\StoneWall904.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443192, "Doodads\\Terrain\\DalaranMagicalPen\\DalaranMagicalPen.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443193, "Doodads\\Terrain\\DalaranMagicalPenWall\\DalaranMagicalPenWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437886, "Doodads\\Cityscape\\Props\\MagicRunes\\MagicRunes0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438049, "Doodads\\Cityscape\\Props\\MagicRunes\\MagicRunes1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438064, "Doodads\\Cityscape\\Props\\MagicRunes\\MagicRunes2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443191, "Doodads\\Dalaran\\Terrain\\MagicVault\\MagicVault.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441981, "buildings\\Other\\MagicVault\\MagicVault.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441982, "buildings\\Other\\MarketPlace\\MarketPlace.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442145, "buildings\\Other\\Mercenary\\Mercenary.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436580, "YARP\\Buildings\\MikeBuildings\\Archery.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436581, "YARP\\Buildings\\MikeBuildings\\Barracks.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436582, "YARP\\Buildings\\MikeBuildings\\Blacksmith.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436583, "YARP\\Buildings\\MikeBuildings\\Cathedral.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436584, "YARP\\Buildings\\MikeBuildings\\Docks.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436585, "YARP\\Buildings\\MikeBuildings\\Encampment.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436586, "YARP\\Buildings\\MikeBuildings\\Farms.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436785, "YARP\\Buildings\\MikeBuildings\\Gate.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436587, "YARP\\Buildings\\MikeBuildings\\Granary.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436588, "YARP\\Buildings\\MikeBuildings\\Houses.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436589, "YARP\\Buildings\\MikeBuildings\\Lumbermills.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436590, "YARP\\Buildings\\MikeBuildings\\Market.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436591, "YARP\\Buildings\\MikeBuildings\\MarketStand.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436592, "YARP\\Buildings\\MikeBuildings\\MarketStand2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436593, "YARP\\Buildings\\MikeBuildings\\Marquee.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436594, "YARP\\Buildings\\MikeBuildings\\Mine.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436595, "YARP\\Buildings\\MikeBuildings\\Mines.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436596, "YARP\\Buildings\\MikeBuildings\\Siege workshop.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436597, "YARP\\Buildings\\MikeBuildings\\Smith.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436598, "YARP\\Buildings\\MikeBuildings\\Stables.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436599, "YARP\\Buildings\\MikeBuildings\\Stonemason.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436600, "YARP\\Buildings\\MikeBuildings\\Storage.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436601, "YARP\\Buildings\\MikeBuildings\\Tavern.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436784, "YARP\\Buildings\\MikeBuildings\\TowersRound.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436787, "YARP\\Buildings\\MikeBuildings\\TowersSquare.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436786, "YARP\\Buildings\\MikeBuildings\\TowersSquareBig.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436602, "YARP\\Buildings\\MikeBuildings\\Town hall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436603, "YARP\\Buildings\\MikeBuildings\\UniversalFarm.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436604, "YARP\\Buildings\\MikeBuildings\\University.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436606, "YARP\\Buildings\\MikeBuildings\\Walls.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436769, "YARP\\Buildings\\MikeBuildings\\WallsVertical.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436605, "YARP\\Buildings\\MikeBuildings\\WaterMill.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442932, "Doodads\\Dungeon\\Props\\MineCart\\MineCart.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442933, "Doodads\\Dungeon\\Props\\MineCartEmpty\\MineCartEmpty.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436838, "YARP\\Buildings\\Misc\\BluePillow.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436789, "YARP\\Buildings\\Misc\\BumBed0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436790, "YARP\\Buildings\\Misc\\BumBed1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436791, "YARP\\Buildings\\Misc\\CathedralCrypt.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436792, "YARP\\Buildings\\Misc\\FelucianFlora_Fungus.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436793, "YARP\\Buildings\\Misc\\FelucianFlora_GiantBellflower0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436833, "YARP\\Buildings\\Misc\\FelucianFlora_GiantBellflower1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436834, "YARP\\Buildings\\Misc\\FelucianFlora_GobletFlowers.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436835, "YARP\\Buildings\\Misc\\FelucianFlora_PixieWings0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436836, "YARP\\Buildings\\Misc\\FelucianFlora_PixieWings1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436837, "YARP\\Buildings\\Misc\\FelucianFlora_Spires.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436788, "YARP\\Buildings\\Misc\\Fountain.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436839, "YARP\\Buildings\\Misc\\PurplePillow.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436840, "YARP\\Buildings\\Misc\\carpet3a.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436841, "YARP\\Buildings\\Misc\\carpet3c.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436842, "YARP\\Buildings\\Misc\\carpet3e.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424567, "YARP\\Units\\Misc\\Wagon\\Wagon.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436533, "YARP\\Buildings\\MassiveMasterBuildings\\Castle.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436534, "YARP\\Buildings\\MassiveMasterBuildings\\CitizenHouse.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436536, "YARP\\Buildings\\MassiveMasterBuildings\\MultiHut.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436535, "YARP\\Buildings\\MassiveMasterBuildings\\PeasantHouse.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436537, "YARP\\Buildings\\MassiveMasterBuildings\\Stable.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436577, "YARP\\Buildings\\MassiveMasterBuildings\\ThatchedCottages.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436578, "YARP\\Buildings\\MassiveMasterBuildings\\VillageHouse.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436579, "YARP\\Buildings\\MassiveMasterBuildings\\VillageSquare.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441460, "buildings\\Other\\MurlocHut0\\MurlocHut0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441461, "buildings\\Other\\MurlocHut1\\MurlocHut1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437108, "Doodads\\Ashenvale\\Structures\\ARockArch\\ARockArch.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437109, "Doodads\\Barrens\\Structures\\BRockArch\\BRockArch.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437118, "Doodads\\Ruins\\Water\\CoralArch\\CoralArch0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437281, "Doodads\\Ruins\\Water\\CoralArch\\CoralArch1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437110, "Doodads\\Dungeon\\Structures\\DRockArch\\DRockArch.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437111, "Doodads\\Felwood\\Structures\\CRockArch\\CRockArch.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437113, "Doodads\\Icecrown\\Structures\\IC_IceArch\\IC_IceArch.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437112, "Doodads\\Icecrown\\Structures\\Icecrown_StoneArch\\Icecrown_StoneArch.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437114, "Doodads\\LordaeronSummer\\Structures\\LRockArch\\LRockArch.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437115, "Doodads\\Northrend\\Structures\\NRockArch\\NRockArch.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437116, "Doodads\\Outland\\Structures\\Outland_RockArch\\Outland_RockArch.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437117, "Doodads\\Ruins\\Structures\\SRuinArch\\SRuinArch.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437296, "Doodads\\Underground\\Structures\\GRockArch\\GRockArch.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442161, "buildings\\Other\\NerubianZiggurat\\NerubianZiggurat.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424568, "YARP\\Units\\Nightelf\\Archer\\NightElvenArcher.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424569, "YARP\\Units\\Nightelf\\BattleMaiden\\GlaiveMaiden.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424570, "YARP\\Units\\Nightelf\\Captain\\NECaptain.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424571, "YARP\\Units\\Nightelf\\Nymph\\Nymph.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437354, "Doodads\\Cinematic\\NightElfTransportShipRuined\\NightElfTransportShipRuined.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437628, "Doodads\\Northrend\\Props\\North_Bones\\North_Bones0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437813, "Doodads\\Northrend\\Props\\North_Bones\\North_Bones9.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437629, "Doodads\\Northrend\\Props\\North_Bones\\North_Bones1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437630, "Doodads\\Northrend\\Props\\North_Bones\\North_Bones2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437793, "Doodads\\Northrend\\Props\\North_Bones\\North_Bones3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437808, "Doodads\\Northrend\\Props\\North_Bones\\North_Bones4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437809, "Doodads\\Northrend\\Props\\North_Bones\\North_Bones5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437810, "Doodads\\Northrend\\Props\\North_Bones\\North_Bones6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437811, "Doodads\\Northrend\\Props\\North_Bones\\North_Bones7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437812, "Doodads\\Northrend\\Props\\North_Bones\\North_Bones8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441725, "Doodads\\Northrend\\Props\\NorthrendBrokenColumn\\NorthrendBrokenColumn0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441726, "Doodads\\Northrend\\Props\\NorthrendBrokenColumn\\NorthrendBrokenColumn1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439676, "Doodads\\Northrend\\Rocks\\North_IceClaw\\North_IceClaw0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439861, "Doodads\\Northrend\\Rocks\\North_IceClaw\\North_IceClaw9.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439677, "Doodads\\Northrend\\Rocks\\North_IceClaw\\North_IceClaw1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439678, "Doodads\\Northrend\\Rocks\\North_IceClaw\\North_IceClaw2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439841, "Doodads\\Northrend\\Rocks\\North_IceClaw\\North_IceClaw3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439856, "Doodads\\Northrend\\Rocks\\North_IceClaw\\North_IceClaw4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439857, "Doodads\\Northrend\\Rocks\\North_IceClaw\\North_IceClaw5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439858, "Doodads\\Northrend\\Rocks\\North_IceClaw\\North_IceClaw6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439859, "Doodads\\Northrend\\Rocks\\North_IceClaw\\North_IceClaw7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439860, "Doodads\\Northrend\\Rocks\\North_IceClaw\\North_IceClaw8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440699, "Doodads\\Northrend\\Props\\NorthrendFenceStraight\\NorthrendFenceStraight.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440700, "Doodads\\Northrend\\Props\\NorthrendFenceAngled\\NorthrendFenceAngled.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439671, "Doodads\\Northrend\\Rocks\\NorthrendFissure\\NorthrendFissure0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439672, "Doodads\\Northrend\\Rocks\\NorthrendFissure\\NorthrendFissure1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440957, "Doodads\\Northrend\\Props\\NorthrendBrokenObilisk\\NorthrendBrokenObilisk.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437867, "Doodads\\Northrend\\Props\\NorthrendGrave\\NorthrendGrave.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440958, "Doodads\\Northrend\\Props\\NorthrendObilisk\\NorthrendObilisk.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437868, "Doodads\\Northrend\\Props\\NorthrendTombStone\\NorthrendTombStone0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437869, "Doodads\\Northrend\\Props\\NorthrendTombStone\\NorthrendTombStone1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437870, "Doodads\\Northrend\\Props\\NorthrendTombStone\\NorthrendTombStone2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439862, "Doodads\\Northrend\\Rocks\\North_Rocks\\North_Rocks0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439910, "Doodads\\Northrend\\Rocks\\North_Rocks\\North_Rocks9.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439863, "Doodads\\Northrend\\Rocks\\North_Rocks\\North_Rocks1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439864, "Doodads\\Northrend\\Rocks\\North_Rocks\\North_Rocks2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439865, "Doodads\\Northrend\\Rocks\\North_Rocks\\North_Rocks3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439905, "Doodads\\Northrend\\Rocks\\North_Rocks\\North_Rocks4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439906, "Doodads\\Northrend\\Rocks\\North_Rocks\\North_Rocks5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439907, "Doodads\\Northrend\\Rocks\\North_Rocks\\North_Rocks6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439908, "Doodads\\Northrend\\Rocks\\North_Rocks\\North_Rocks7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439909, "Doodads\\Northrend\\Rocks\\North_Rocks\\North_Rocks8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439673, "Doodads\\Northrend\\Structures\\NorthrendRubble\\NorthrendRubble0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439674, "Doodads\\Northrend\\Structures\\NorthrendRubble\\NorthrendRubble1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439675, "Doodads\\Northrend\\Structures\\NorthrendRubble\\NorthrendRubble2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438396, "Doodads\\Northrend\\Plants\\North_Thorns\\North_Thorns0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438397, "Doodads\\Northrend\\Plants\\North_Thorns\\North_Thorns1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438398, "Doodads\\Northrend\\Plants\\North_Thorns\\North_Thorns2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438561, "Doodads\\Northrend\\Plants\\North_Thorns\\North_Thorns3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438576, "Doodads\\Northrend\\Plants\\North_Thorns\\North_Thorns4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438577, "Doodads\\Northrend\\Plants\\North_Thorns\\North_Thorns5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438578, "Doodads\\Northrend\\Plants\\North_Thorns\\North_Thorns6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439911, "Doodads\\Northrend\\Rocks\\North_WebRocks\\North_WebRocks0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439912, "Doodads\\Northrend\\Rocks\\North_WebRocks\\North_WebRocks1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439913, "Doodads\\Northrend\\Rocks\\North_WebRocks\\North_WebRocks2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439914, "Doodads\\Northrend\\Rocks\\North_WebRocks\\North_WebRocks3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439915, "Doodads\\Northrend\\Rocks\\North_WebRocks\\North_WebRocks4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439916, "Doodads\\Northrend\\Rocks\\North_WebRocks\\North_WebRocks5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439917, "Doodads\\Northrend\\Rocks\\North_WebRocks\\North_WebRocks6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439918, "Doodads\\Northrend\\Rocks\\North_WebRocks\\North_WebRocks7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440953, "Doodads\\Ashenvale\\Props\\Obelisk\\obelisk0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440954, "Doodads\\Ashenvale\\Props\\Obelisk\\obelisk1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440955, "Doodads\\Ashenvale\\Props\\Obelisk\\obelisk2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442936, "Doodads\\Outland\\Props\\Obstacle\\Obstacle0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442937, "Doodads\\Outland\\Props\\Obstacle\\Obstacle1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442977, "Doodads\\Outland\\Props\\Obstacle\\Obstacle2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442978, "Doodads\\Outland\\Props\\Obstacle\\Obstacle3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442979, "Doodads\\Outland\\Props\\Obstacle\\Obstacle4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442993, "Doodads\\Barrens\\Props\\HellScreamThrone\\HellScreamThrone.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424572, "YARP\\Units\\Orc\\BeastMistress\\BeastMasterFemale.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424573, "YARP\\Units\\Orc\\Blademonk\\Chaos_Blademaster.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424574, "YARP\\Units\\Orc\\Blademonk\\Dire_Blademaster.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424752, "YARP\\Units\\Orc\\Elder\\ElderDrekThar.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424753, "YARP\\Units\\Orc\\FemaleGrunt\\GruntFemale.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424754, "YARP\\Units\\Orc\\FemaleShaman\\ShamanFemale.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424737, "YARP\\Units\\Orc\\ElderShaman\\DrekThar_Shaman.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424755, "YARP\\Units\\Orc\\Spearthrower\\OrcSpearThrower.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424756, "YARP\\Units\\Orc\\Torntusk\\Primal Torntusk.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424757, "YARP\\Units\\Orc\\Warfiend\\Hero_Bloodfiend.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424758, "YARP\\Units\\Orc\\Warfiend\\Hero_Warfiend.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439919, "Doodads\\Cinematic\\Outland_FloatingChunks\\Outland_FloatingChunks0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439920, "Doodads\\Cinematic\\Outland_FloatingChunks\\Outland_FloatingChunks1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439921, "Doodads\\Cinematic\\Outland_FloatingChunks\\Outland_FloatingChunks2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439922, "Doodads\\Cinematic\\Outland_FloatingChunks\\Outland_FloatingChunks3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439923, "Doodads\\Cinematic\\Outland_FloatingChunksCluster\\Outland_FloatingChunksCluster.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439924, "Doodads\\Outland\\Rocks\\Outland_MagmaRock\\Outland_MagmaRock0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439925, "Doodads\\Outland\\Rocks\\Outland_MagmaRock\\Outland_MagmaRock1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439926, "Doodads\\Outland\\Rocks\\Outland_MagmaRock\\Outland_MagmaRock2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439927, "Doodads\\Outland\\Rocks\\Outland_MagmaRock\\Outland_MagmaRock3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439928, "Doodads\\Outland\\Rocks\\Outland_MagmaRock\\Outland_MagmaRock4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438583, "Doodads\\Outland\\Plants\\Outland_Plant\\Outland_Plant0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438584, "Doodads\\Outland\\Plants\\Outland_Plant\\Outland_Plant1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438585, "Doodads\\Outland\\Plants\\Outland_Plant\\Outland_Plant2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438625, "Doodads\\Outland\\Plants\\Outland_Plant\\Outland_Plant3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438626, "Doodads\\Outland\\Plants\\Outland_Plant\\Outland_Plant4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438627, "Doodads\\Outland\\Plants\\Outland_Plant\\Outland_Plant5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438628, "Doodads\\Outland\\Plants\\Outland_Plant\\Outland_Plant6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438629, "Doodads\\Outland\\Plants\\Outland_Plant\\Outland_Plant7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439929, "Doodads\\Outland\\Rocks\\Outland_Rock\\Outland_Rock0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440114, "Doodads\\Outland\\Rocks\\Outland_Rock\\Outland_Rock9.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439930, "Doodads\\Outland\\Rocks\\Outland_Rock\\Outland_Rock1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439931, "Doodads\\Outland\\Rocks\\Outland_Rock\\Outland_Rock2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439932, "Doodads\\Outland\\Rocks\\Outland_Rock\\Outland_Rock3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439933, "Doodads\\Outland\\Rocks\\Outland_Rock\\Outland_Rock4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439934, "Doodads\\Outland\\Rocks\\Outland_Rock\\Outland_Rock5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440097, "Doodads\\Outland\\Rocks\\Outland_Rock\\Outland_Rock6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440112, "Doodads\\Outland\\Rocks\\Outland_Rock\\Outland_Rock7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440113, "Doodads\\Outland\\Rocks\\Outland_Rock\\Outland_Rock8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440164, "Doodads\\Outland\\Rocks\\RubbleRock\\RubbleRock0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440165, "Doodads\\Outland\\Rocks\\RubbleRock\\RubbleRock1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440166, "Doodads\\Outland\\Rocks\\RubbleRock\\RubbleRock2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440167, "Doodads\\Outland\\Rocks\\RubbleRock\\RubbleRock3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440168, "Doodads\\Outland\\Rocks\\RubbleRock\\RubbleRock4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440169, "Doodads\\Outland\\Rocks\\RubbleRock\\RubbleRock5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440115, "Doodads\\Outland\\Rocks\\Outland_Spires\\Outland_Spires0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440163, "Doodads\\Outland\\Rocks\\Outland_Spires\\Outland_Spires9.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440116, "Doodads\\Outland\\Rocks\\Outland_Spires\\Outland_Spires1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440117, "Doodads\\Outland\\Rocks\\Outland_Spires\\Outland_Spires2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440118, "Doodads\\Outland\\Rocks\\Outland_Spires\\Outland_Spires3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440119, "Doodads\\Outland\\Rocks\\Outland_Spires\\Outland_Spires4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440120, "Doodads\\Outland\\Rocks\\Outland_Spires\\Outland_Spires5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440121, "Doodads\\Outland\\Rocks\\Outland_Spires\\Outland_Spires6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440161, "Doodads\\Outland\\Rocks\\Outland_Spires\\Outland_Spires7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440162, "Doodads\\Outland\\Rocks\\Outland_Spires\\Outland_Spires8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442727, "Doodads\\Cinematic\\CavernDust\\CavernDust.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437864, "Doodads\\LordaeronSummer\\Props\\PeasantGrave\\PeasantGrave0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437865, "Doodads\\LordaeronSummer\\Props\\PeasantGrave\\PeasantGrave1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437866, "Doodads\\LordaeronSummer\\Props\\PeasantGrave\\PeasantGrave2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442237, "Doodads\\Ashenvale\\Structures\\Pier\\Pier.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442236, "Doodads\\Ashenvale\\Structures\\PierTrashed\\PierTrashed.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441708, "buildings\\Other\\PigFarm\\PigFarm.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442162, "buildings\\Other\\PowerGenerator\\PowerGenerator.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440930, "Doodads\\LordaeronSummer\\Terrain\\BridgeRampSmall45\\BridgeRampSmall45.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424759, "YARP\\Units\\Ratman\\Monk\\Monk.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424760, "YARP\\Units\\Ratman\\Ranger\\Ranger.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424761, "YARP\\Units\\Ratman\\Runner\\Runner.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437107, "YARP\\Water\\WaterPlane.MDX")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442673, "Doodads\\Dungeon\\Props\\LavaCracks\\LavaCracks0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442674, "Doodads\\Dungeon\\Props\\LavaCracks\\LavaCracks1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442675, "Doodads\\Dungeon\\Props\\LavaCracks\\LavaCracks2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442676, "Doodads\\Dungeon\\Props\\LavaCracks\\LavaCracks3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442723, "Doodads\\Cinematic\\TownBurningFireEmitter\\TownBurningFireEmitter.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442470, "Doodads\\Cinematic\\RessurectionStoneSE\\RessurectionStoneSE.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437618, "Doodads\\LordaeronSummer\\Props\\RibBones\\RibBones0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437619, "Doodads\\LordaeronSummer\\Props\\RibBones\\RibBones1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437620, "Doodads\\LordaeronSummer\\Props\\RibBones\\RibBones2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437621, "Doodads\\LordaeronSummer\\Props\\RibBones\\RibBones3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442421, "Doodads\\Cinematic\\RisingWaterDoodad\\RisingWaterDoodad.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442422, "Doodads\\Cinematic\\RisingWaterWIDEDoodad\\RisingWaterWIDEDoodad.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440170, "Doodads\\Terrain\\RockChunks\\RockChunks0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440171, "Doodads\\Terrain\\RockChunks\\RockChunks1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440172, "Doodads\\Terrain\\RockChunks\\RockChunks2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440173, "Doodads\\Terrain\\RockChunks\\RockChunks3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440174, "Doodads\\Terrain\\RockChunks\\RockChunks4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440175, "Doodads\\Terrain\\RockChunks\\RockChunks5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439151, "Doodads\\Terrain\\G_RockChunks\\G_RockChunks0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439152, "Doodads\\Terrain\\G_RockChunks\\G_RockChunks1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439153, "Doodads\\Terrain\\G_RockChunks\\G_RockChunks2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439154, "Doodads\\Terrain\\G_RockChunks\\G_RockChunks3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439155, "Doodads\\Terrain\\G_RockChunks\\G_RockChunks4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439156, "Doodads\\Terrain\\G_RockChunks\\G_RockChunks5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442416, "Doodads\\Northrend\\Water\\Rowboat\\Rowboat.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442417, "Doodads\\Northrend\\Water\\RowboatDestroyed\\RowboatDestroyed.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440931, "Doodads\\Barrens\\Structures\\RuinedCurvedWall\\RuinedCurvedWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440932, "Doodads\\Barrens\\Structures\\RuinedWall\\RuinedWall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441121, "Doodads\\Ruins\\Props\\RuinsObelisk\\RuinsObelisk0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441136, "Doodads\\Ruins\\Props\\RuinsObelisk\\RuinsObelisk1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437880, "Doodads\\Cinematic\\RunesOfGuldan\\RunesOfGuldan0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437881, "Doodads\\Cinematic\\RunesOfGuldan\\RunesOfGuldan1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437882, "Doodads\\Cinematic\\RunesOfGuldan\\RunesOfGuldan2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437883, "Doodads\\Cinematic\\RunesOfGuldan\\RunesOfGuldan3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437884, "Doodads\\Cinematic\\RunesOfGuldan\\RunesOfGuldan4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437885, "Doodads\\Cinematic\\RunesOfGuldan\\RunesOfGuldan5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438378, "Doodads\\LordaeronSummer\\Plants\\RiverRushes\\RiverRushes0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438379, "Doodads\\LordaeronSummer\\Plants\\RiverRushes\\RiverRushes1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438380, "Doodads\\LordaeronSummer\\Plants\\RiverRushes\\RiverRushes2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438381, "Doodads\\LordaeronSummer\\Plants\\RiverRushes\\RiverRushes3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438382, "Doodads\\Ruins\\Plants\\Ruins_Rush\\Ruins_Rush0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438383, "Doodads\\Ruins\\Plants\\Ruins_Rush\\Ruins_Rush1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436843, "YARP\\Buildings\\Quilboar\\QuilboarBarracks.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436844, "YARP\\Buildings\\Quilboar\\QuilboarBeastiary.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436845, "YARP\\Buildings\\Quilboar\\QuilboarBunker.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436846, "YARP\\Buildings\\Quilboar\\RazormaneWatchTower.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442163, "buildings\\Other\\SacrificialAltar\\SacrificialAltar.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437559, "Doodads\\Ashenvale\\Props\\ScorchedRemains\\ScorchedRemains0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437560, "Doodads\\Ashenvale\\Props\\ScorchedRemains\\ScorchedRemains1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437561, "Doodads\\Ashenvale\\Props\\ScorchedRemains\\ScorchedRemains2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442230, "Doodads\\Ruins\\Water\\Seaweed0\\Seaweed00.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442231, "Doodads\\Ruins\\Water\\Seaweed0\\Seaweed01.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442232, "Doodads\\Ruins\\Water\\Seaweed0\\Seaweed02.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442233, "Doodads\\Ruins\\Water\\Seaweed0\\Seaweed03.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442234, "Doodads\\Ruins\\Water\\Seaweed0\\Seaweed04.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441139, "Doodads\\Ashenvale\\Props\\SentinelStatue\\SentinelStatue.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442741, "Doodads\\Dungeon\\Props\\SewerWallpipes\\SewerWallpipes0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442742, "Doodads\\Dungeon\\Props\\SewerWallpipes\\SewerWallpipes1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442743, "Doodads\\Dungeon\\Props\\SewerWallpipes\\SewerWallpipes2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442737, "Doodads\\Dungeon\\Props\\SewerVent\\SewerVent0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442738, "Doodads\\Dungeon\\Props\\SewerVent\\SewerVent1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442739, "Doodads\\Dungeon\\Props\\SewerVent\\SewerVent2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442740, "Doodads\\Dungeon\\Props\\SewerVent\\SewerVent3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442166, "Doodads\\Ruins\\Props\\Ruins_Shells\\Ruins_Shells0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442214, "Doodads\\Ruins\\Props\\Ruins_Shells\\Ruins_Shells9.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442167, "Doodads\\Ruins\\Props\\Ruins_Shells\\Ruins_Shells1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442168, "Doodads\\Ruins\\Props\\Ruins_Shells\\Ruins_Shells2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442169, "Doodads\\Ruins\\Props\\Ruins_Shells\\Ruins_Shells3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442209, "Doodads\\Ruins\\Props\\Ruins_Shells\\Ruins_Shells4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442210, "Doodads\\Ruins\\Props\\Ruins_Shells\\Ruins_Shells5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442211, "Doodads\\Ruins\\Props\\Ruins_Shells\\Ruins_Shells6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442212, "Doodads\\Ruins\\Props\\Ruins_Shells\\Ruins_Shells7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442213, "Doodads\\Ruins\\Props\\Ruins_Shells\\Ruins_Shells8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443234, "Doodads\\Cinematic\\ShimmeringPortal\\ShimmeringPortal.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440697, "Doodads\\Village\\Props\\Village_Fenceshort\\Village_Fenceshort.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440698, "Doodads\\Village\\Props\\Village_FenceshortAngled\\Village_FenceshortAngled.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438384, "Doodads\\Ruins\\Plants\\Ruins_Shrub\\Ruins_Shrub0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438385, "Doodads\\Ruins\\Plants\\Ruins_Shrub\\Ruins_Shrub1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438386, "Doodads\\Ruins\\Plants\\Ruins_Shrub\\Ruins_Shrub2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442471, "Doodads\\LordaeronSummer\\Props\\SignPost\\SignPost.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442472, "Doodads\\LordaeronSummer\\Props\\SignPost\\SignPost0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437606, "Doodads\\LordaeronSummer\\Props\\SittingCorpse\\SittingCorpse.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437857, "Doodads\\Outland\\Props\\Skull\\Skull0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437858, "Doodads\\Outland\\Props\\Skull\\Skull1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437622, "Doodads\\LordaeronSummer\\Props\\SkullonStick\\SkullonStick0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437623, "Doodads\\LordaeronSummer\\Props\\SkullonStick\\SkullonStick1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437624, "Doodads\\LordaeronSummer\\Props\\SkullonStick\\SkullonStick2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437625, "Doodads\\LordaeronSummer\\Props\\SkullonStick\\SkullonStick3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437626, "Doodads\\LordaeronSummer\\Props\\SkullonStick\\SkullonStick4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437627, "Doodads\\LordaeronSummer\\Props\\SkullonStick\\SkullonStick5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437814, "Doodads\\LordaeronSummer\\Props\\SkullPile\\SkullPile0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437815, "Doodads\\LordaeronSummer\\Props\\SkullPile\\SkullPile1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437816, "Doodads\\LordaeronSummer\\Props\\SkullPile\\SkullPile2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437817, "Doodads\\LordaeronSummer\\Props\\SkullPile\\SkullPile3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442681, "Doodads\\LordaeronSummer\\Props\\SmokeSmudge\\SmokeSmudge0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442721, "Doodads\\LordaeronSummer\\Props\\SmokeSmudge\\SmokeSmudge1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442722, "Doodads\\LordaeronSummer\\Props\\SmokeSmudge\\SmokeSmudge2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443446, "Doodads\\Icecrown\\Props\\SnowMan\\SnowMan.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441145, "Doodads\\Icecrown\\Props\\SpiderStatue0\\SpiderStatue0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441185, "Doodads\\Icecrown\\Props\\SpiderStatue1\\SpiderStatue1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442980, "Doodads\\Outland\\Props\\Stake\\Stake0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442981, "Doodads\\Outland\\Props\\Stake\\Stake1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442982, "Doodads\\Outland\\Props\\Standard\\Standard0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442983, "Doodads\\Outland\\Props\\Standard\\Standard1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441186, "Doodads\\Ruins\\Props\\Statue\\Statue0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441187, "Doodads\\Ruins\\Props\\Statue\\Statue1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441188, "Doodads\\Ruins\\Props\\StatueBroken\\StatueBroken0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441189, "Doodads\\Ruins\\Props\\StatueBroken\\StatueBroken1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436847, "YARP\\Buildings\\SunchipsHouse\\House Door.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436848, "YARP\\Buildings\\SunchipsHouse\\House Wall 1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436849, "YARP\\Buildings\\SunchipsHouse\\House Wall 2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436850, "YARP\\Buildings\\SunchipsHouse\\House Wall Window.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442728, "Doodads\\Ruins\\Props\\RuinsBloodyAltar\\RuinsBloodyAltar.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442734, "Doodads\\Ruins\\Props\\Firepot\\Firepot.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443444, "Doodads\\Ruins\\Props\\Brazier\\Brazier0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443445, "Doodads\\Ruins\\Props\\Brazier\\Brazier1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441648, "Doodads\\Ruins\\Structures\\RuinsBuilding\\RuinsBuilding0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441649, "Doodads\\Ruins\\Structures\\RuinsBuilding\\RuinsBuilding1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441650, "Doodads\\Ruins\\Structures\\RuinsBuilding\\RuinsBuilding2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442729, "Doodads\\Ruins\\Props\\Ruins_NagaCircle\\Ruins_NagaCircle.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442735, "Doodads\\Ruins\\Terrain\\RuinsRoundDoor\\RuinsRoundDoor.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442730, "Doodads\\Ruins\\Props\\RuinFountain\\RuinFountain.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438329, "Doodads\\Ruins\\Plants\\Ruins_Lilypad\\Ruins_Lilypad0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438369, "Doodads\\Ruins\\Plants\\Ruins_Lilypad\\Ruins_Lilypad1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438370, "Doodads\\Ruins\\Plants\\Ruins_Lilypad\\Ruins_Lilypad2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438371, "Doodads\\Ruins\\Plants\\Ruins_Lilypad\\Ruins_Lilypad3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438372, "Doodads\\Ruins\\Plants\\Ruins_Lilypad\\Ruins_Lilypad4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438373, "Doodads\\Ruins\\Plants\\Ruins_Lilypad\\Ruins_Lilypad5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438374, "Doodads\\Ruins\\Plants\\Ruins_Lilypad\\Ruins_Lilypad6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438375, "Doodads\\Ruins\\Plants\\Ruins_Lilypad\\Ruins_Lilypad7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441905, "Doodads\\Ruins\\Props\\RuinsPillar\\RuinsPillar0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441906, "Doodads\\Ruins\\Props\\RuinsPillar\\RuinsPillar1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441907, "Doodads\\Ruins\\Props\\RuinsPillar\\RuinsPillar2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441908, "Doodads\\Ruins\\Props\\RuinsPillar\\RuinsPillar3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441909, "Doodads\\Ruins\\Props\\RuinsPillar\\RuinsPillar4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440188, "Doodads\\Ruins\\Rocks\\Ruins_Rock\\Ruins_Rock0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440373, "Doodads\\Ruins\\Rocks\\Ruins_Rock\\Ruins_Rock9.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440189, "Doodads\\Ruins\\Rocks\\Ruins_Rock\\Ruins_Rock1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440190, "Doodads\\Ruins\\Rocks\\Ruins_Rock\\Ruins_Rock2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440353, "Doodads\\Ruins\\Rocks\\Ruins_Rock\\Ruins_Rock3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440368, "Doodads\\Ruins\\Rocks\\Ruins_Rock\\Ruins_Rock4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440369, "Doodads\\Ruins\\Rocks\\Ruins_Rock\\Ruins_Rock5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440370, "Doodads\\Ruins\\Rocks\\Ruins_Rock\\Ruins_Rock6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440371, "Doodads\\Ruins\\Rocks\\Ruins_Rock\\Ruins_Rock7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440372, "Doodads\\Ruins\\Rocks\\Ruins_Rock\\Ruins_Rock8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440180, "Doodads\\Ruins\\Rocks\\CliffRubble_Double\\CliffRubble_Double0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440181, "Doodads\\Ruins\\Rocks\\CliffRubble_Double\\CliffRubble_Double1.mdx")
endfunction

function populateModelRegistry3 takes nothing returns nothing
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440182, "Doodads\\Ruins\\Rocks\\CliffRubble_Double\\CliffRubble_Double2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440183, "Doodads\\Ruins\\Rocks\\CliffRubble_Double\\CliffRubble_Double3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440184, "Doodads\\Ruins\\Rocks\\CliffRubble_Single\\CliffRubble_Single0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440185, "Doodads\\Ruins\\Rocks\\CliffRubble_Single\\CliffRubble_Single1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440186, "Doodads\\Ruins\\Rocks\\CliffRubble_Single\\CliffRubble_Single2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440187, "Doodads\\Ruins\\Rocks\\CliffRubble_Single\\CliffRubble_Single3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442731, "Doodads\\Ruins\\Props\\LibraryShelf\\LibraryShelf0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442732, "Doodads\\Ruins\\Props\\LibraryShelf\\LibraryShelf1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442733, "Doodads\\Ruins\\Props\\LibraryShelf\\LibraryShelf2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438119, "Doodads\\Ruins\\Plants\\Ruins_Shroom\\Ruins_Shroom0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438120, "Doodads\\Ruins\\Plants\\Ruins_Shroom\\Ruins_Shroom1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438121, "Doodads\\Ruins\\Plants\\Ruins_Shroom\\Ruins_Shroom2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438122, "Doodads\\Ruins\\Plants\\Ruins_Shroom\\Ruins_Shroom3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438123, "Doodads\\Ruins\\Plants\\Ruins_Shroom\\Ruins_Shroom4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438124, "Doodads\\Ruins\\Plants\\Ruins_Shroom\\Ruins_Shroom5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440374, "Doodads\\Ruins\\Rocks\\Ruins_Spires\\Ruins_Spires0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440375, "Doodads\\Ruins\\Rocks\\Ruins_Spires\\Ruins_Spires1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440376, "Doodads\\Ruins\\Rocks\\Ruins_Spires\\Ruins_Spires2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440377, "Doodads\\Ruins\\Rocks\\Ruins_Spires\\Ruins_Spires3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440417, "Doodads\\Ruins\\Rocks\\Ruins_Spires\\Ruins_Spires4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440418, "Doodads\\Ruins\\Rocks\\Ruins_Spires\\Ruins_Spires5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440419, "Doodads\\Ruins\\Rocks\\Ruins_Spires\\Ruins_Spires6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440420, "Doodads\\Ruins\\Rocks\\Ruins_Spires\\Ruins_Spires7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442736, "Doodads\\Terrain\\CliffDoodad\\NagaStairsSmall0\\NagaStairsSmall0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440176, "Doodads\\Ruins\\Props\\Stone\\Stone0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440177, "Doodads\\Ruins\\Props\\Stone\\Stone1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440178, "Doodads\\Ruins\\Props\\Stone\\Stone2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440179, "Doodads\\Ruins\\Props\\Stone\\Stone3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442991, "Doodads\\Ruins\\Props\\RuinsRuinedThrone\\RuinsRuinedThrone0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442992, "Doodads\\Ruins\\Props\\RuinsRuinedThrone\\RuinsRuinedThrone1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443245, "Doodads\\Ruins\\Props\\RuinsTrash\\RuinsTrash0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443246, "Doodads\\Ruins\\Props\\RuinsTrash\\RuinsTrash1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440678, "Doodads\\Ruins\\Terrain\\RuinsWall135\\RuinsWall1350.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440684, "Doodads\\Ruins\\Terrain\\RuinsWall135\\RuinsWall1351.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440691, "Doodads\\Ruins\\Terrain\\RuinsWall135\\RuinsWall1352.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440677, "Doodads\\Ruins\\Terrain\\RuinsWall135\\RuinsWall1353.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440692, "Doodads\\Ruins\\Terrain\\RuinsWall135\\RuinsWall1354.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440679, "Doodads\\Ruins\\Terrain\\RuinsWall45\\RuinsWall450.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440685, "Doodads\\Ruins\\Terrain\\RuinsWall45\\RuinsWall451.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440693, "Doodads\\Ruins\\Terrain\\RuinsWall45\\RuinsWall452.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440680, "Doodads\\Ruins\\Terrain\\RuinsWall45\\RuinsWall453.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440694, "Doodads\\Ruins\\Terrain\\RuinsWall45\\RuinsWall454.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440675, "Doodads\\Ruins\\Terrain\\RuinsWall0\\RuinsWall00.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440683, "Doodads\\Ruins\\Terrain\\RuinsWall0\\RuinsWall01.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440687, "Doodads\\Ruins\\Terrain\\RuinsWall0\\RuinsWall02.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440676, "Doodads\\Ruins\\Terrain\\RuinsWall0\\RuinsWall03.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440688, "Doodads\\Ruins\\Terrain\\RuinsWall0\\RuinsWall04.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440681, "Doodads\\Ruins\\Terrain\\RuinsWall90\\RuinsWall900.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440686, "Doodads\\Ruins\\Terrain\\RuinsWall90\\RuinsWall901.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440689, "Doodads\\Ruins\\Terrain\\RuinsWall90\\RuinsWall902.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440682, "Doodads\\Ruins\\Terrain\\RuinsWall90\\RuinsWall903.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016440690, "Doodads\\Ruins\\Terrain\\RuinsWall90\\RuinsWall904.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438394, "Doodads\\Ruins\\Terrain\\CityCliffVines0\\CityCliffVines0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438395, "Doodads\\Ruins\\Terrain\\CityCliffVines1\\CityCliffVines1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441202, "Doodads\\Cinematic\\SunWell\\SunWell.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442929, "Doodads\\Underground\\Terrain\\SupportBeam\\SupportBeam.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442996, "Doodads\\Dungeon\\Props\\Table\\Table.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442997, "Doodads\\Dungeon\\Props\\TableNChair\\TableNChair.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441462, "buildings\\Other\\TaurenTent\\TaurenTent.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441463, "buildings\\Other\\TaurenTent2\\TaurenTent2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443003, "Doodads\\Barrens\\Props\\CentaurTotem\\CentaurTotem0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443004, "Doodads\\Barrens\\Props\\CentaurTotem\\CentaurTotem1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443005, "Doodads\\Barrens\\Props\\CentaurTotem\\CentaurTotem2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443006, "Doodads\\Barrens\\Props\\TaurenTotem\\TaurenTotem0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443169, "Doodads\\Barrens\\Props\\TaurenTotem\\TaurenTotem1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442164, "buildings\\Other\\Tavern\\Tavern.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442475, "Doodads\\Cityscape\\Props\\TavernSign\\TavernSign.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441464, "buildings\\Other\\Tent\\Tent.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441465, "buildings\\Other\\Tent1\\Tent1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441200, "Doodads\\Cinematic\\ThrallsHut\\ThrallsHut.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442990, "Doodads\\Cityscape\\Props\\Throne\\Throne.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443440, "Doodads\\LordaeronSummer\\Props\\TorchHuman\\TorchHuman.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442750, "Doodads\\Dungeon\\Props\\TortureTable\\TortureTable.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443256, "Doodads\\Ashenvale\\Props\\Totem\\Totem0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443257, "Doodads\\Ashenvale\\Props\\Totem\\Totem1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443258, "Doodads\\Ashenvale\\Props\\Totem\\Totem2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441964, "buildings\\Other\\DalaranGuardTower\\DalaranGuardTower.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441965, "buildings\\Other\\ElvenGuardFireTower\\ElvenGuardFireTower.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441966, "buildings\\Other\\ElvenGuardMagicTower\\ElvenGuardMagicTower.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441967, "buildings\\Other\\ElvenGuardTower\\ElvenGuardTower.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437347, "Doodads\\LordaeronSummer\\Structures\\TowerScorched\\TowerScorched.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441467, "Doodads\\Cityscape\\Structures\\MoreCityBuilding\\MoreCityBuilding0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441468, "Doodads\\Cityscape\\Structures\\MoreCityBuilding\\MoreCityBuilding1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441469, "Doodads\\Cityscape\\Structures\\MoreCityBuilding\\MoreCityBuilding2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441470, "Doodads\\Cityscape\\Structures\\MoreCityBuilding\\MoreCityBuilding3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441633, "Doodads\\Cityscape\\Structures\\MoreCityBuilding\\MoreCityBuilding4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442473, "Doodads\\Cityscape\\Props\\TavernSignTraceysArmory\\TavernSignTraceysArmory.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443242, "Doodads\\LordaeronSummer\\Props\\Trash1\\Trash1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443240, "Doodads\\Dungeon\\Props\\TreasurePile\\TreasurePile0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443241, "Doodads\\Dungeon\\Props\\TreasurePile\\TreasurePile1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436851, "YARP\\Buildings\\TranquilBuildings\\Ceiling Rays.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436852, "YARP\\Buildings\\TranquilBuildings\\Door 1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436854, "YARP\\Buildings\\TranquilBuildings\\Door 4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436855, "YARP\\Buildings\\TranquilBuildings\\Door Big.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436853, "YARP\\Buildings\\TranquilBuildings\\Door Small.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436856, "YARP\\Buildings\\TranquilBuildings\\Drawbridge 3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436857, "YARP\\Buildings\\TranquilBuildings\\Porticulis Gate 1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436858, "YARP\\Buildings\\TranquilBuildings\\Royal Stairs 1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436859, "YARP\\Buildings\\TranquilBuildings\\Royal Stairs 4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436861, "YARP\\Buildings\\TranquilBuildings\\Royal Stairs Less.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436860, "YARP\\Buildings\\TranquilBuildings\\Royal Stairs.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016436862, "YARP\\Buildings\\TranquilBuildings\\Tower Animated.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437025, "YARP\\Buildings\\TranquilBuildings\\Wall Animated.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437040, "YARP\\Buildings\\TranquilBuildings\\Wall Banner Single White.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437041, "YARP\\Buildings\\TranquilBuildings\\Wall Banner.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437042, "YARP\\Buildings\\TranquilBuildings\\Wall Contrafforte.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437043, "YARP\\Buildings\\TranquilBuildings\\Wall Door Big.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437044, "YARP\\Buildings\\TranquilBuildings\\Wall Door Grate.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437045, "YARP\\Buildings\\TranquilBuildings\\Wall Door Small.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437046, "YARP\\Buildings\\TranquilBuildings\\Wall Door Tall Passage.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437047, "YARP\\Buildings\\TranquilBuildings\\Wall Long.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437048, "YARP\\Buildings\\TranquilBuildings\\Wall Niche.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437049, "YARP\\Buildings\\TranquilBuildings\\Wall Pillar.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437089, "YARP\\Buildings\\TranquilBuildings\\Wall Short.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437090, "YARP\\Buildings\\TranquilBuildings\\Wall Torch.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437091, "YARP\\Buildings\\TranquilBuildings\\Wall Window Glass.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437092, "YARP\\Buildings\\TranquilBuildings\\Wall Window Grate.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437093, "YARP\\Buildings\\TranquilBuildings\\Wall Window Royal Glass.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437094, "YARP\\Buildings\\TranquilBuildings\\Window Big 01.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437095, "YARP\\Buildings\\TranquilBuildings\\Window King.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437096, "YARP\\Buildings\\TranquilBuildings\\Window Rays 1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437097, "YARP\\Buildings\\TranquilBuildings\\Window Royal 01.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437098, "YARP\\Buildings\\TranquilBuildings\\Window Royal 02.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437099, "YARP\\Buildings\\TranquilBuildings\\WindowGlass 02.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437100, "YARP\\Buildings\\TranquilBuildings\\WindowGlass 05.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442477, "Doodads\\LordaeronSummer\\Props\\Trough\\Trough0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442478, "Doodads\\LordaeronSummer\\Props\\Trough\\Trough1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424801, "YARP\\Units\\Troll\\Dreg\\ForestTrollDreg.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424806, "YARP\\Units\\Troll\\ShadowPriestFemale\\ForestTrollShadowPriestFemale.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424802, "YARP\\Units\\Troll\\Miner\\ForestTrollLaborerVer2.4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424803, "YARP\\Units\\Troll\\Outrider\\ForestTrollOutrider.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424804, "YARP\\Units\\Troll\\Pillager\\ForestTrollPillager.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424805, "YARP\\Units\\Troll\\Shadeweaver\\Hero_ShadeWeaver.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424807, "YARP\\Units\\Troll\\ShadowPriest\\ForestTrollShadowPriest.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424808, "YARP\\Units\\Troll\\VoodooHunter\\HeroTrollVoodooHunter.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443511, "Doodads\\LordaeronSummer\\Props\\TutorialOrcBanner\\TutorialOrcBanner.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424809, "YARP\\Units\\Undead\\ArchNercromancer\\Hero_KelThuzad.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424810, "YARP\\Units\\Undead\\ArchNercromancer\\Hero_Necromancer.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424812, "YARP\\Units\\Undead\\Dreadbaron\\HeroDreadLordRemake.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424811, "YARP\\Units\\Undead\\DeathLord\\UndeadArthasNoHorse.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424813, "YARP\\Units\\Undead\\DwarfBaron\\Plague_Baron.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424814, "YARP\\Units\\Undead\\DwarfBaron\\Scourge_Baron.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424817, "YARP\\Units\\Undead\\Witch\\FemaleNecromancer.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424818, "YARP\\Units\\Undead\\Horse\\RiderlessUndeadHorseArthas.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424819, "YARP\\Units\\Undead\\Horse\\RiderlessUndeadHorseDK.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424820, "YARP\\Units\\Undead\\Miniabo\\VillagerAbomination.MDX")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424815, "YARP\\Units\\Undead\\Necropriest\\NecromancerBlack.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424816, "YARP\\Units\\Undead\\Necropriest\\NecromancerRed.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424823, "YARP\\Units\\Undead\\Child\\SkeletalChild.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424822, "YARP\\Units\\Undead\\SkeletonKnight\\SkeletalKnight.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424821, "YARP\\Units\\Undead\\Peasant\\SkeletonPeasant.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439150, "Doodads\\Underground\\Rocks\\Underground_FieryCrator\\Underground_FieryCrator.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441137, "Doodads\\Underground\\Props\\UndergroundObilisk\\UndergroundObilisk.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439097, "Doodads\\Underground\\Rocks\\UndergoundRock\\UndergoundRock0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439145, "Doodads\\Underground\\Rocks\\UndergoundRock\\UndergoundRock9.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439137, "Doodads\\Underground\\Rocks\\UndergoundRock\\UndergoundRock1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439138, "Doodads\\Underground\\Rocks\\UndergoundRock\\UndergoundRock2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439139, "Doodads\\Underground\\Rocks\\UndergoundRock\\UndergoundRock3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439140, "Doodads\\Underground\\Rocks\\UndergoundRock\\UndergoundRock4.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439141, "Doodads\\Underground\\Rocks\\UndergoundRock\\UndergoundRock5.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439142, "Doodads\\Underground\\Rocks\\UndergoundRock\\UndergoundRock6.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439143, "Doodads\\Underground\\Rocks\\UndergoundRock\\UndergoundRock7.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439144, "Doodads\\Underground\\Rocks\\UndergoundRock\\UndergoundRock8.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439146, "Doodads\\Underground\\Rocks\\UndergroundStalagmite\\UndergroundStalagmite0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439147, "Doodads\\Underground\\Rocks\\UndergroundStalagmite\\UndergroundStalagmite1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439148, "Doodads\\Underground\\Rocks\\UndergroundStalagmite\\UndergroundStalagmite2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016439149, "Doodads\\Underground\\Rocks\\UndergroundStalagmite\\UndergroundStalagmite3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437101, "YARP\\Buildings\\VillaHouses\\HouseVar01.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437102, "YARP\\Buildings\\VillaHouses\\HouseVar02.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437103, "YARP\\Buildings\\VillaHouses\\HouseVar1Up1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437104, "YARP\\Buildings\\VillaHouses\\HouseVar1Up2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437105, "YARP\\Buildings\\VillaHouses\\HouseVar2Up1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437106, "YARP\\Buildings\\VillaHouses\\HouseVar2Up2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441657, "Doodads\\Village\\Structures\\VillageBuilding\\VillageBuilding0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441697, "Doodads\\Village\\Structures\\VillageBuilding\\VillageBuilding1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441698, "Doodads\\Village\\Structures\\VillageBuilding\\VillageBuilding2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443255, "Doodads\\Village\\Props\\Village_Lightpost\\Village_Lightpost.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438579, "Doodads\\Ruins\\Plants\\VinyPlant\\VinyPlant0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438580, "Doodads\\Ruins\\Plants\\VinyPlant\\VinyPlant1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438581, "Doodads\\Ruins\\Plants\\VinyPlant\\VinyPlant2.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438582, "Doodads\\Ruins\\Plants\\VinyPlant\\VinyPlant3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424824, "YARP\\Units\\Villager\\Barbarian\\BarbarianVillager.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424825, "YARP\\Units\\Villager\\BlondeBloodelf\\Blood Elf Villager.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424827, "YARP\\Units\\Villager\\Bulky\\Bulkyman.Mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424828, "YARP\\Units\\Villager\\Draenei\\VillagerDraenei.MDX")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424829, "YARP\\Units\\Villager\\Druid\\VillagerDruid.MDX")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424830, "YARP\\Units\\Villager\\Dwarf\\VillagerDwarf.MDX")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424993, "YARP\\Units\\Villager\\Nightelf\\Night Elf Villager.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425013, "YARP\\Units\\Villager\\OrcChild\\OrcChild_v3.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425008, "YARP\\Units\\Villager\\Orc\\VillagerPeon.MDX")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016424826, "YARP\\Units\\Villager\\RedheadBloodelf\\Redhead Blood Elf Villager.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425011, "YARP\\Units\\Villager\\TaurenChild\\TaurenChild.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425009, "YARP\\Units\\Villager\\Tauren\\VillagerTauren.MDX")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425012, "YARP\\Units\\Villager\\TrollChild\\TrollChild.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016425010, "YARP\\Units\\Villager\\Troll\\VillagerTroll.MDX")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442465, "Doodads\\Terrain\\CliffDoodad\\Waterfall\\Waterfall.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442165, "buildings\\Other\\Waygate\\Waygate.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016443250, "Doodads\\LordaeronSummer\\Props\\Weapons\\Weapons.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441193, "Doodads\\LordaeronSummer\\Structures\\well\\well.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442229, "Doodads\\Northrend\\Water\\Whale\\Whale.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441143, "Doodads\\Cityscape\\Props\\WhaleStatue\\WhaleStatue.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442235, "Doodads\\Terrain\\Wharf\\Wharf.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442488, "Doodads\\LordaeronSummer\\Plants\\Wheat\\wheat.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442489, "Doodads\\LordaeronSummer\\Plants\\WheatBunch\\wheatbunch.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437364, "Doodads\\LordaeronSummer\\Plants\\CornWheatScorched\\CornWheatScorched0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437365, "Doodads\\LordaeronSummer\\Plants\\CornWheatScorched\\CornWheatScorched1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442479, "Doodads\\LordaeronSummer\\Props\\WheelBarrel\\WheelBarrel.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437355, "Doodads\\LordaeronSummer\\Props\\WheelBarrelBroken\\WheelBarrelBroken.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441194, "Doodads\\LordaeronSummer\\Structures\\WindMill\\WindMill.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016437345, "Doodads\\LordaeronSummer\\Structures\\WindMillBurned\\WindMillBurned.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016438630, "Doodads\\Ashenvale\\Structures\\Worldtree\\Worldtree.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442913, "Doodads\\Barrens\\Terrain\\WyvernCage\\WyvernCage0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016442928, "Doodads\\Barrens\\Terrain\\WyvernCage\\WyvernCage1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441195, "Doodads\\Northrend\\Structures\\AncientZiggurat\\AncientZiggurat0.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2016441196, "Doodads\\Northrend\\Structures\\AncientZiggurat\\AncientZiggurat1.mdx")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1164141934, "units\\nightelf\\HeroKeeperoftheGrove\\HeroKeeperoftheGrove")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1164207469, "units\\nightelf\\HeroDemonHunter\\HeroDemonHunter")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1164209517, "units\\nightelf\\HeroDemonHunter\\HeroDemonHunter")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1164277353, "units\\nightelf\\EvilIllidan\\IllidanEvil")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1164277357, "units\\nightelf\\EvilIllidan\\IllidanEvil")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1164342642, "units\\nightelf\\Furion\\Furion")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1164534893, "units\\nightelf\\HeroDemonHunter\\HeroDemonHunter")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1164536940, "units\\nightelf\\HeroDemonHunter\\HeroDemonHunter")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1164536941, "units\\nightelf\\HeroDemonHunter\\HeroDemonHunter")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1164666213, "units\\nightelf\\HeroKeeperoftheGrove\\HeroKeeperoftheGrove")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1164666727, "units\\nightelf\\HeroKeeperoftheGroveGhost\\HeroKeeperoftheGroveGhost")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1164797554, "units\\nightelf\\MalFurion\\MalFurion")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1164799603, "units\\nightelf\\MalFurion\\MalFurionNoStag")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1164799855, "units\\nightelf\\HeroMoonPriestess\\HeroMoonPriestess")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1165261170, "units\\nightelf\\HeroMoonPriestess\\HeroMoonPriestess")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1165451634, "units\\nightelf\\herowarden\\herowarden")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1165455972, "units\\nightelf\\Maiev\\Maiev")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1214344551, "units\\human\\HeroArchMage\\HeroArchMage")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1214344820, "units\\human\\HeroArchMage\\HeroArchMage")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1214345325, "units\\other\\Proudmoore\\Proudmoore")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1214345830, "units\\human\\ArthaswithSword\\ArthaswithSword")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1214345844, "units\\human\\Arthas\\Arthas")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1214409837, "units\\human\\HeroBloodElf\\HeroBloodElf")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1214539631, "units\\human\\HeroPaladinBoss2\\HeroPaladinBoss2")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1214734701, "units\\other\\HeroArchMageGhost\\HeroArchMageGhost")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1214802796, "units\\human\\HeroPaladinBoss\\HeroPaladinBoss")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1214931305, "units\\human\\Jaina\\Jaina")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1214996844, "units\\human\\Kael\\Kael")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1215063922, "units\\creeps\\LordGarithos\\LordGarithos")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1215128178, "units\\human\\Muradin\\Muradin")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1215129444, "units\\human\\HeroPaladin\\HeroPaladin")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1215130471, "units\\human\\HeroMountainKing\\HeroMountainKing")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1215324524, "units\\human\\HeroPaladin\\HeroPaladin")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1215324721, "units\\human\\HeroPaladinBoss\\HeroPaladinBoss")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1215324722, "units\\human\\HeroPaladinBoss2\\HeroPaladinBoss2")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1215657064, "units\\human\\Uther\\Uther")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1215722344, "units\\naga\\LadyVashj\\LadyVashj")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1215723364, "units\\creeps\\SylvanusWindrunner\\SylvanusWindrunner")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1315007329, "units\\other\\DranaiAkama\\DranaiAkama")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1315007538, "Units\\Creeps\\HeroGoblinAlchemist\\HeroGoblinAlchemist")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1315007539, "Units\\Creeps\\HeroGoblinAlchemist\\HeroGoblinAlchemist")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1315007587, "Units\\Creeps\\HeroGoblinAlchemist\\HeroGoblinAlchemist")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1315007597, "Units\\Creeps\\HeroGoblinAlchemist\\HeroGoblinAlchemist")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1315070563, "units\\demon\\HeroChaosBladeMaster\\HeroChaosBladeMaster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1315074670, "Units\\Creeps\\BansheeRanger\\BansheeRanger")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1315074932, "Units\\Creeps\\Beastmaster\\Beastmaster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1315334514, "Units\\Creeps\\HeroFlameLord\\HeroFlameLord")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1315662456, "units\\other\\KiljaedenCinema\\KiljaedenCinema")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1315662954, "units\\demon\\Kiljaeden\\Kiljaeden")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1315791207, "units\\demon\\HeroPitLord\\HeroPitLord")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1315791214, "units\\demon\\Mannoroth\\Mannoroth")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1315858291, "units\\naga\\HeroNagaSeawitch\\HeroNagaSeawitch")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1315988077, "Units\\Creeps\\PandarenBrewmaster\\PandarenBrewmaster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1315990628, "units\\demon\\PitLord\\PitLord")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1315990632, "units\\demon\\HeroPitLord\\HeroPitLord")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1316122466, "Units\\Creeps\\HeroTinker\\HeroTinker")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1316186739, "Units\\Creeps\\PandarenBrewmaster\\PandarenBrewmaster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1316252014, "Units\\Creeps\\HeroTinker\\HeroTinker")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1331850337, "units\\orc\\HeroBladeMaster\\HeroBladeMaster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1331913266, "units\\orc\\HeroTaurenChieftainCIN\\HeroTaurenChieftainCIN")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1331913320, "units\\orc\\HeroTaurenChieftainCIN\\HeroTaurenChieftainCIN")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1331982964, "units\\orc\\HeroFarSeer\\HeroFarSeer")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1332109682, "units\\orc\\HeroFarSeer\\HeroFarSeer")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1332178020, "units\\orc\\OrcWarlockGuldan\\OrcWarlockGuldan")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1332179560, "units\\orc\\Hellscream\\Hellscream")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1332766568, "units\\demon\\ChaosHellscream\\ChaosHellscream")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1332897144, "Units\\Other\\Rexxar\\Rexxar")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1332898670, "units\\orc\\HeroShadowHunter\\HeroShadowHunter")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1332961645, "units\\orc\\HeroBladeMaster\\HeroBladeMaster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1332963428, "units\\orc\\HeroShadowHunter\\HeroShadowHunter")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1333027683, "units\\orc\\HeroTaurenChieftainCIN\\HeroTaurenChieftainCIN")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1333027688, "units\\orc\\HeroTaurenChieftain\\HeroTaurenChieftain")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1333028978, "units\\orc\\Thrall\\Thrall")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1432448610, "units\\undead\\Anubarak\\Anubarak")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1432510828, "units\\undead\\Tichondrius\\Tichondrius")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1432579171, "units\\undead\\HeroLichCIN\\HeroLichCIN")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1432580716, "units\\undead\\HeroCryptLord\\HeroCryptLord")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1432642913, "units\\undead\\HeroDeathKnight\\HeroDeathKnight")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1432646245, "units\\undead\\HeroDreadLord\\HeroDreadLord")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1432646760, "units\\undead\\HeroDreadLord\\HeroDreadLord")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1432707442, "units\\undead\\EvilArthas\\UndeadArthas")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1433105516, "units\\undead\\HeroLich\\HeroLich")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1433168227, "units\\undead\\HeroLich\\HeroLich")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1433231724, "units\\undead\\HeroDreadLord\\HeroDreadLord")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1433631084, "Units\\Undead\\EvilSylvanas\\EvilSylvanas")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1433692515, "units\\undead\\Tichondrius\\Tichondrius")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1433821554, "units\\undead\\Tichondrius\\Tichondrius")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1433824871, "units\\undead\\HeroDreadLord\\HeroDreadLord")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1433887090, "units\\demon\\Warlock\\Warlock")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1700884325, "buildings\\nightelf\\AncientOfLore\\AncientOfLore")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1700884333, "buildings\\nightelf\\AncientOfWar\\AncientOfWar")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1700884343, "buildings\\nightelf\\AncientOfWind\\AncientOfWind")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1700885091, "units\\nightelf\\Archer\\Archer")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1700885605, "buildings\\nightelf\\AltarOfElders\\AltarOfElders")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1700946284, "units\\nightelf\\Ballista\\Ballista")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1700950888, "units\\creeps\\NightElfBattleship\\NightElfBattleship")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701013613, "units\\nightelf\\Chimaera\\Chimaera")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701077869, "units\\nightelf\\DruidoftheClaw\\DruidoftheClaw")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701078382, "buildings\\nightelf\\AncientOfWonder\\AncientOfWonder")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701078387, "units\\nightelf\\NightElfDestroyerShip\\NightElfDestroyerShip")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701080930, "buildings\\nightelf\\HuntersHall\\HuntersHall")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701080931, "units\\nightelf\\DruidoftheClaw\\DruidoftheClaw")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701080947, "buildings\\nightelf\\ChimaeraRoost\\ChimaeraRoost")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701080948, "units\\nightelf\\DruidoftheTalon\\DruidoftheTalon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701081721, "units\\nightelf\\Dryad\\Dryad")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701082221, "units\\nightelf\\DruidoftheTalon\\DruidoftheTalon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701209202, "units\\nightelf\\FaerieDragon\\FaerieDragon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701212014, "units\\nightelf\\Ent\\Ent")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701277548, "buildings\\nightelf\\EntangledGoldMine\\EntangledGoldMine")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701341552, "units\\nightelf\\Hippogryph\\Hippogryph")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701343346, "units\\nightelf\\RiddenHippogryph\\RiddenHippogryph")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701407863, "units\\other\\IllidanEvilCaged\\IllidanEvilCaged")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701670775, "buildings\\nightelf\\MoonWell\\MoonWell")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701672039, "units\\nightelf\\MountainGiant\\MountainGiant")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701733731, "units\\nightelf\\Runner\\Runner")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1701737320, "units\\nightelf\\Huntress\\Huntress")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1702061422, "units\\nightelf\\Huntress\\Huntress")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1702062180, "units\\nightelf\\Shandris\\Shandris")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1702062201, "buildings\\NightElf\\NightElfShipyard\\NightElfShipyard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1702064246, "units\\nightelf\\SpiritOfVengeance\\SpiritOfVengeance")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1702129505, "buildings\\nightelf\\TreeofLife\\TreeofLife")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1702129509, "buildings\\nightelf\\TreeofLife\\TreeofLife")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1702129516, "buildings\\nightelf\\TreeofLife\\TreeofLife")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1702130288, "buildings\\nightelf\\AncientProtector\\AncientProtector")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1702130291, "units\\nightelf\\NightElfTransportShip\\NightElfTransportShip")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1702258030, "units\\nightelf\\Vengeance\\Vengeance")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1702327152, "units\\nightelf\\Wisp\\Wisp")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751215220, "buildings\\human\\AltarofKings\\AltarofKings")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751216749, "buildings\\human\\Workshop\\Workshop")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751216751, "buildings\\other\\ArcaneObservatory\\ArcaneObservatory")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751216755, "buildings\\human\\ArcaneSanctum\\ArcaneSanctum")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751217271, "buildings\\human\\HumanTower\\HumanTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751277938, "buildings\\human\\HumanBarracks\\HumanBarracks")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751278967, "units\\other\\BloodElfWagon\\BloodElfWagon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751280737, "buildings\\human\\Blacksmith\\Blacksmith")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751281524, "units\\creeps\\HumanTransportShip\\HumanTransportShip")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751282536, "units\\creeps\\HumanBattleship\\HumanBattleship")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751343475, "buildings\\human\\TownHall\\TownHall")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751348328, "units\\human\\TheCaptain\\TheCaptain")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751348343, "buildings\\human\\HumanTower\\HumanTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751410035, "units\\creeps\\HumanDestroyerShip\\HumanDestroyerShip")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751410807, "units\\human\\BloodElfDragonHawk\\BloodElfDragonHawk")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751543663, "units\\human\\Footman\\Footman")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751609953, "buildings\\human\\GryphonAviary\\GryphonAviary")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751609977, "units\\human\\GryphonRider\\GryphonRider")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751610487, "buildings\\human\\HumanTower\\HumanTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751611762, "units\\human\\Gyrocopter\\Gyrocopter")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751671916, "units\\human\\KnightNoRider\\KnightNoRider")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751672179, "units\\human\\TheCaptain\\TheCaptain")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751674741, "buildings\\human\\Farm\\Farm")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751868773, "buildings\\human\\TownHall\\TownHall")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751871081, "units\\human\\Knight\\Knight")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1751938413, "buildings\\human\\HumanLumbermill\\HumanLumbermill")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752000876, "units\\human\\Militia\\Militia")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752002674, "units\\human\\Priest\\Priest")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752003693, "units\\human\\MortarTeam\\MortarTeam")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752003700, "units\\human\\WarWagon\\WarWagon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752196449, "units\\human\\Peasant\\Peasant")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752197240, "units\\human\\phoenix\\phoenix")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752199796, "doodads\\cinematic\\ShimmeringPortal\\ShimmeringPortal")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752201317, "units\\human\\phoenix\\phoenix")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752327272, "units\\critters\\PackHorse\\PackHorse")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752328550, "units\\human\\Rifleman\\Rifleman")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752331380, "units\\human\\WarWagon\\WarWagon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752393849, "buildings\\human\\HumanShipyard\\HumanShipyard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752395634, "units\\human\\Sorceress\\Sorceress")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752395892, "units\\human\\BloodElfSpellThief\\BloodElfSpellThief")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752461175, "buildings\\human\\TownHall\\TownHall")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752591476, "buildings\\human\\ArcaneVault\\ArcaneVault")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752654196, "units\\human\\WaterElemental\\WaterElemental")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752658994, "units\\human\\WaterElemental\\WaterElemental")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752658995, "units\\human\\WaterElemental\\WaterElemental")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1752659063, "buildings\\human\\HumanTower\\HumanTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851876459, "units\\creeps\\AzureDragon\\AzureDragon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851876466, "units\\creeps\\AzureDragon\\AzureDragon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851876471, "units\\creeps\\AzureDragonWelp\\AzureDragonWelp")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851877497, "Units\\Creeps\\Hydra\\Hydra")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851878498, "units\\critters\\Albatross\\Albatross")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851879010, "Units\\Creeps\\Archnathid\\Archnathid")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851879011, "Units\\Creeps\\ArchnathidGreen\\ArchnathidGreen")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851879013, "Units\\Creeps\\Archnathid\\Archnathid")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851879021, "Units\\Creeps\\Archnathid\\Archnathid")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851879023, "Units\\Creeps\\Archnathidpurple\\Archnathidpurple")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851879031, "Units\\Creeps\\ArchnathidGreen\\ArchnathidGreen")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851880039, "units\\creeps\\GolemStatue\\GolemStatue")
endfunction

function populateModelRegistry4 takes nothing returns nothing
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851880307, "units\\creeps\\BanditSpearThrower\\BanditSpearThrower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851941170, "units\\demon\\DoomGuard\\DoomGuard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851941228, "units\\demon\\DoomGuard\\DoomGuard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851941230, "units\\creeps\\Bandit\\Bandit")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851941985, "Units\\Creeps\\DragonSpawnGreen\\DragonSpawnGreen")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851941995, "units\\creeps\\BlackDragon\\BlackDragon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851941997, "Units\\Creeps\\DragonSpawnBlue\\DragonSpawnBlue")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851941999, "Units\\Creeps\\DragonSpawnBlue\\DragonSpawnBlue")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851942002, "units\\creeps\\BlackDragonWelp\\BlackDragonWelp")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851942003, "Units\\Creeps\\DragonSpawnGreen\\DragonSpawnGreen")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851942007, "Units\\Creeps\\DragonSpawnPurple\\DragonSpawnPurple")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851942245, "units\\critters\\HighElfPeasant\\HighElfPeasant")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851942252, "units\\other\\BloodElfLieutenant\\BloodElfLieutenant")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851942508, "buildings\\other\\FountainOfLifeBlood\\FountainOfLifeBlood")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851944036, "units\\creeps\\BanditLord\\BanditLord")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851944546, "Units\\Creeps\\Archnathid\\Archnathid")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851944820, "units\\creeps\\HumanTransportShip\\HumanTransportShip")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851945575, "units\\creeps\\BanditSpearThrower\\BanditSpearThrower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851945829, "Doodads\\Cinematic\\RessurectionStoneSE\\RessurectionStoneSE")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851945837, "buildings\\other\\BookOfSummoning\\BookOfSummoning")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851945840, "doodads\\northrend\\water\\Battleship\\Battleship")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851945847, "Doodads\\Cinematic\\RessurectionStoneSW\\RessurectionStoneSW")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851946033, "buildings\\other\\TowerDefenseTower\\TowerDefenseTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851946034, "buildings\\other\\TowerDefenseTower\\TowerDefenseTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851946852, "buildings\\other\\BarrowDens\\BarrowDens")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851946861, "units\\creeps\\BlackDragon\\BlackDragon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851947620, "units\\creeps\\BronzeDragon\\BronzeDragon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851947627, "units\\creeps\\BronzeDragon\\BronzeDragon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1851947639, "units\\creeps\\BronzeDragonWelp\\BronzeDragonWelp")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852006768, "buildings\\demon\\CorruptedAncientProtector\\CorruptedAncientProtector")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852006772, "units\\orc\\catapult\\catapult")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852006775, "buildings\\demon\\CorruptedAncientofWar\\CorruptedAncientofWar")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852006960, "buildings\\other\\CityBuildingSmall45_0\\CityBuildingSmall45_0")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852006961, "buildings\\other\\CityBuildingSmall45_1\\CityBuildingSmall45_1")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852006962, "buildings\\other\\CityBuildingSmall45_2\\CityBuildingSmall45_2")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852006963, "buildings\\other\\CityBuildingSmall90_0\\CityBuildingSmall90_0")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852006964, "buildings\\other\\CityBuildingSmall90_1\\CityBuildingSmall90_1")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852006965, "buildings\\other\\CityBuildingSmall90_2\\CityBuildingSmall90_2")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852006966, "buildings\\other\\CityBuildingSmall135_0\\CityBuildingSmall135_0")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852006967, "buildings\\other\\CityBuildingSmall135_1\\CityBuildingSmall135_1")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852006968, "buildings\\other\\CityBuildingSmall135_2\\CityBuildingSmall135_2")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852006969, "buildings\\other\\CityBuildingSmall0_0\\CityBuildingSmall0_0")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852007009, "buildings\\other\\CityBuildingSmall0_1\\CityBuildingSmall0_1")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852007010, "buildings\\other\\CityBuildingSmall0_2\\CityBuildingSmall0_2")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852007011, "buildings\\other\\CityBuildingLarge_0\\CityBuildingLarge_0")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852007012, "buildings\\other\\CityBuildingLarge_45\\CityBuildingLarge_45")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852007013, "buildings\\other\\CityBuildingLarge_90\\CityBuildingLarge_90")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852007014, "buildings\\other\\CityBuildingLarge_135\\CityBuildingLarge_135")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852007777, "units\\creeps\\CentaurArcher\\CentaurArcher")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852007790, "units\\creeps\\Centaur\\Centaur")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852007794, "units\\creeps\\Centaur\\Centaur")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852008051, "Units\\Creeps\\MurgulTideWarrior\\MurgulTideWarrior")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852008241, "Units\\Creeps\\HeroTinkerRobot\\HeroTinkerRobot")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852008242, "Units\\Creeps\\HeroTinkerRobot\\HeroTinkerRobot")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852008243, "Units\\Creeps\\HeroTinkerRobot\\HeroTinkerRobot")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852008290, "Units\\Creeps\\HeroTinkerRobot\\HeroTinkerRobot")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852008551, "units\\demon\\ChaosGrunt\\ChaosGrunt")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852008560, "units\\creeps\\HumanMage\\HumanMage")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852008562, "units\\demon\\ChaosWolfRider\\ChaosWolfRider")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852008567, "units\\demon\\ChaosWarlock\\ChaosWarlock")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852008813, "units\\creeps\\CentaurArcher\\CentaurArcher")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852009314, "units\\demon\\ChaosKotoBeast\\ChaosKotoBeast")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852009331, "units\\creeps\\CentaurKhan\\CentaurKhan")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852009847, "buildings\\demon\\CorruptedMoonWell\\CorruptedMoonWell")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852010091, "units\\creeps\\CentaurKhan\\CentaurKhan")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852010100, "buildings\\other\\CentaurTent\\CentaurTent")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852010352, "buildings\\other\\CircleOfPower\\CircleOfPower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852010546, "buildings\\other\\CircleOfPower\\CircleOfPower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852010547, "buildings\\other\\CircleOfPower\\CircleOfPower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852010606, "units\\demon\\ChaosPeon\\ChaosPeon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852011106, "units\\critters\\SpiderCrab\\SpiderCrab")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852011569, "buildings\\other\\CentaurTent1\\CentaurTent1")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852011570, "buildings\\other\\CentaurTent2\\CentaurTent2")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852011617, "buildings\\demon\\CorruptedTreeofLife\\CorruptedTreeofLife")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852011621, "buildings\\demon\\CorruptedTreeofLife\\CorruptedTreeofLife")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852011628, "buildings\\demon\\CorruptedTreeofLife\\CorruptedTreeofLife")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852072808, "buildings\\other\\ChieftainHut\\ChieftainHut")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852073330, "units\\critters\\BlackStagMale\\BlackStagMale")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852073580, "buildings\\other\\FountainOfLifeDefiled\\FountainOfLifeDefiled")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852073844, "buildings\\other\\DalaranGuardTower\\DalaranGuardTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852074032, "buildings\\other\\DraneiHut0\\DraneiHut0")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852074033, "buildings\\other\\DraneiHut1\\DraneiHut1")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852074034, "buildings\\other\\ChieftainHut\\ChieftainHut")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852074035, "buildings\\other\\DraneiHut0\\DraneiHut0")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852074036, "buildings\\other\\DraneiHut1\\DraneiHut1")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852074853, "buildings\\other\\DarkPortal2\\DarkPortal2")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852074871, "buildings\\other\\DarkPortal\\DarkPortal")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852075367, "buildings\\demon\\DemonGate\\DemonGate")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852075381, "units\\other\\DalaranMutant\\DalaranMutant")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852075879, "units\\critters\\BrownWolf\\BrownWolf")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076398, "units\\demon\\Demoness\\Demoness")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076400, "units\\demon\\DemonessBlue\\DemonessBlue")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076403, "units\\demon\\DemonessBlue\\DemonessBlue")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076404, "units\\demon\\Demoness\\Demoness")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076406, "units\\demon\\DemonessBlue\\DemonessBlue")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076593, "units\\undead\\Skeleton\\Skeleton")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076594, "units\\undead\\Skeleton\\Skeleton")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076595, "units\\undead\\Skeleton\\Skeleton")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076642, "buildings\\other\\DragonBuilding\\DragonBuilding")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076644, "units\\other\\DranaiWhite\\DranaiWhite")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076646, "units\\other\\Dranai\\Dranai")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076647, "buildings\\other\\DragonBuildingGreen\\DragonBuildingGreen")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076648, "units\\other\\DranaiMage\\DranaiMage")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076650, "units\\other\\DalaranReject\\DalaranReject")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076651, "buildings\\other\\DragonBuildingBlack\\DragonBuildingBlack")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076652, "units\\other\\Dranai\\Dranai")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076653, "units\\other\\DranaiMage\\DranaiMage")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076654, "units\\other\\DranaiWhite\\DranaiWhite")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076655, "buildings\\other\\DragonBuildingBlack\\DragonBuildingBlack")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076656, "units\\other\\DranaiWhite\\DranaiWhite")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076658, "buildings\\other\\DragonBuilding\\DragonBuilding")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076659, "units\\other\\DranaiMage\\DranaiMage")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076660, "units\\other\\Dranai\\Dranai")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076661, "buildings\\other\\DragonBuildingBlue\\DragonBuildingBlue")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076662, "units\\creeps\\RevenantOfTheWaves\\RevenantOfTheWaves")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076663, "units\\other\\Dranai\\Dranai")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076666, "buildings\\other\\DragonRoost\\DragonRoost")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852076897, "units\\creeps\\ThunderLizardVizier\\ThunderLizardVizier")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852077105, "buildings\\other\\TowerDefenseTower\\TowerDefenseTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852077106, "buildings\\other\\TowerDefenseTower\\TowerDefenseTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852077154, "units\\creeps\\DarkTroll\\DarkTroll")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852077160, "units\\creeps\\DarkTrollShadowPriest\\DarkTrollShadowPriest")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852077168, "units\\creeps\\DarkTrollShadowPriest\\DarkTrollShadowPriest")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852077170, "units\\creeps\\DarkTroll\\DarkTroll")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852077172, "units\\creeps\\DarkTrollTrapper\\DarkTrollTrapper")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852077175, "units\\creeps\\DarkTrollTrapper\\DarkTrollTrapper")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852077933, "units\\critters\\DuneWorm\\DuneWorm")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852138344, "units\\critters\\EasterChicken\\EasterChicken")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852138354, "units\\critters\\EasterRabbit\\EasterRabbit")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852139056, "buildings\\other\\ElvenVillageBuilding0\\ElvenVillageBuilding0")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852139057, "buildings\\other\\ElvenVillageBuilding1\\ElvenVillageBuilding1")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852139058, "buildings\\other\\ElvenVillageBuilding2\\ElvenVillageBuilding2")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852139059, "buildings\\other\\ElvenVillageBuilding3\\ElvenVillageBuilding3")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852139060, "buildings\\other\\ElvenVillageBuilding4\\ElvenVillageBuilding4")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852139061, "buildings\\other\\ElvenVillageBuilding5\\ElvenVillageBuilding5")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852139062, "buildings\\other\\ElvenVillageBuilding6\\ElvenVillageBuilding6")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852139063, "buildings\\other\\ElvenVillageBuilding7\\ElvenVillageBuilding7")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852139117, "buildings\\other\\ElvenFarm\\ElvenFarm")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852139366, "buildings\\other\\ElvenGuardFireTower\\ElvenGuardFireTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852139373, "buildings\\other\\ElvenGuardMagicTower\\ElvenGuardMagicTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852139380, "buildings\\other\\ElvenGuardTower\\ElvenGuardTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852139386, "units\\creeps\\GoblinSapper\\GoblinSapper")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852139641, "Units\\Creeps\\Hydra\\Hydra")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852140642, "units\\human\\WaterElemental\\WaterElemental")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852140645, "units\\human\\WaterElemental\\WaterElemental")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852140905, "units\\creeps\\HumanMage\\HumanMage")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852141155, "units\\creeps\\CorruptedEnt\\CorruptedEnt")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852141158, "units\\creeps\\Bandit\\Bandit")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852141168, "units\\creeps\\CorruptedEnt\\CorruptedEnt")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852141676, "units\\creeps\\CorruptedEnt\\CorruptedEnt")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852142180, "units\\demon\\EredarWarlockPurple\\EredarWarlockPurple")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852142195, "units\\demon\\EredarWarlock\\EredarWarlock")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852142199, "units\\demon\\EredarWarlock\\EredarWarlock")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852142641, "buildings\\other\\TowerDefenseTower\\TowerDefenseTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852142642, "buildings\\other\\TowerDefenseTower\\TowerDefenseTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852203313, "Units\\Creeps\\HeroTinkerFactory\\HeroTinkerFactory")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852203314, "Units\\Creeps\\HeroTinkerFactory\\HeroTinkerFactory")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852203363, "Units\\Creeps\\HeroTinkerFactory\\HeroTinkerFactory")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852203634, "units\\critters\\Felboar\\Felboar")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852204396, "units\\demon\\felhound\\felhound")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852204898, "units\\demon\\Felgaurd\\Felgaurd")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852204908, "units\\other\\FleshGolem\\FleshGolem")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852204911, "Units\\Creeps\\ForgottenOne\\ForgottenOne")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852204916, "Units\\Creeps\\ForgottenOne\\ForgottenOneTent")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852204917, "units\\demon\\Felgaurd\\Felgaurd")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852205104, "buildings\\other\\ForestTrollHut0\\ForestTrollHut0")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852205105, "buildings\\other\\ForestTrollHut1\\ForestTrollHut1")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852206704, "buildings\\other\\FountainOfPower\\FountainOfPower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852206948, "Units\\Creeps\\FacelessOne\\FacelessOne")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852206952, "buildings\\other\\FountainOfLife\\FountainOfHealth")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852206962, "Units\\Creeps\\FacelessOne\\FacelessOne")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852206964, "Units\\Creeps\\FacelessOne\\FacelessOne")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852206966, "units\\demon\\FelgaurdBlue\\FelgaurdBlue")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207203, "units\\creeps\\PolarFurbolg\\PolarFurbolg")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207205, "units\\creeps\\PolarFurbolgTracker\\PolarFurbolgTracker")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207212, "units\\creeps\\PolarFurbolg\\PolarFurbolg")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207219, "units\\creeps\\PolarFurbolgTracker\\PolarFurbolgTracker")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207220, "units\\creeps\\PolarFurbolgTracker\\PolarFurbolgTracker")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207221, "units\\creeps\\PolarFurbolg\\PolarFurbolg")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207665, "buildings\\other\\FurbolgHut\\FurbolgHut")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207666, "buildings\\other\\FurbolgHut2\\FurbolgHut2")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207713, "units\\creeps\\FurbolgElder\\FurbolgElder")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207714, "units\\creeps\\FurbolgTracker\\FurbolgTracker")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207717, "units\\creeps\\FurbolgShaman\\FurbolgShaman")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207719, "units\\creeps\\Furbolg\\Furbolg")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207724, "units\\creeps\\Furbolg\\Furbolg")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207725, "buildings\\other\\Frostmourne\\Frostmourne")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207727, "units\\critters\\Frog\\Frog")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207728, "units\\creeps\\FurbolgPanda\\FurbolgPanda")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207731, "units\\creeps\\FurbolgShaman\\FurbolgShaman")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207732, "buildings\\other\\FruitStand\\FruitStand")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207976, "units\\creeps\\ForestTrollShadowPriest\\ForestTrollShadowPriest")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852207984, "units\\creeps\\ForestTrollShadowPriest\\ForestTrollShadowPriest")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852208177, "buildings\\other\\TowerDefenseTower\\TowerDefenseTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852208178, "buildings\\other\\TowerDefenseTower\\TowerDefenseTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852208226, "units\\creeps\\ForestTroll\\ForestTroll")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852208235, "units\\creeps\\ForestTrollTrapper\\ForestTrollTrapper")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852208242, "units\\creeps\\ForestTroll\\ForestTroll")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852208244, "units\\creeps\\ForestTrollTrapper\\ForestTrollTrapper")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852208688, "buildings\\other\\ElvenFishVillageBuilding0\\ElvenFishVillageBuilding0")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852208689, "buildings\\other\\ElvenFishVillageBuilding1\\ElvenFishVillageBuilding1")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852208690, "buildings\\other\\ElvenFishVillageBuilding2\\ElvenFishVillageBuilding2")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852208691, "buildings\\other\\ElvenFishVillageBuilding3\\ElvenFishVillageBuilding3")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852208692, "buildings\\other\\ElvenFishVillageBuilding4\\ElvenFishVillageBuilding4")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852268900, "buildings\\other\\AmmoDump\\AmmoDump")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852269164, "units\\creeps\\IronGolem\\IronGolem")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852269675, "units\\creeps\\GreenDragon\\GreenDragon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852270450, "units\\creeps\\RockGolem\\RockGolem")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852270641, "units\\creeps\\BansheeGhost\\BansheeGhost")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852270642, "units\\creeps\\BansheeGhost\\BansheeGhost")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852270962, "units\\creeps\\IronGolem\\IronGolem")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852271725, "units\\creeps\\GoblinLandMine\\GoblinLandMine")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852271973, "buildings\\other\\Merchant\\Merchant")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852272225, "units\\creeps\\GnollArcher\\GnollArcher")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852272226, "units\\creeps\\Gnoll\\Gnoll")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852272232, "buildings\\other\\GnollHut\\GnollHut")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852272233, "buildings\\other\\GranaryInfected\\GranaryInfected")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852272239, "units\\creeps\\Gnoll\\Gnoll")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852272243, "units\\creeps\\GnollArcher\\GnollArcher")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852272246, "units\\creeps\\GnollOverseer\\GnollOverseer")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852272247, "units\\creeps\\GnollWarden\\GnollWarden")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852272482, "buildings\\other\\BridgeObelisk\\BridgeObelisk")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852272492, "buildings\\other\\GoldMine\\GoldMine")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852273252, "units\\creeps\\GreenDragon\\GreenDragon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852273259, "units\\creeps\\RockGolem\\RockGolem")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852273271, "units\\creeps\\GreenDragonWelp\\GreenDragonWelp")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852273520, "units\\creeps\\GoblinSapper\\GoblinSapper")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852273524, "units\\creeps\\RockGolem\\RockGolem")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852273714, "buildings\\other\\GnollHut2\\GnollHut2")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852274546, "buildings\\other\\GrainWarehouse\\GrainWarehouse")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852275249, "units\\creeps\\GrizzlyBear\\GrizzlyBear")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852275250, "units\\creeps\\GrizzlyBear\\GrizzlyBear")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852275251, "units\\creeps\\GrizzlyBear\\GrizzlyBear")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852275252, "units\\creeps\\GrizzlyBear\\GrizzlyBear")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852275297, "units\\creeps\\GrizzlyBear\\GrizzlyBear")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852275299, "units\\creeps\\GrizzlyBear\\GrizzlyBear")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852275300, "units\\creeps\\GrizzlyBear\\GrizzlyBear")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852334450, "units\\creeps\\Harpy\\Harpy")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852334958, "buildings\\other\\HornOfCenarius\\HornOfCenarius")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852335203, "units\\undead\\Acolyte\\Acolyte")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852335457, "units\\creeps\\HighElfArcher\\HighElfArcher")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852335458, "buildings\\other\\MageTower\\MageTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852335462, "units\\critters\\ElfVillagerWoman\\ElfVillagerWoman")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852335469, "units\\critters\\HighElfPeasant\\HighElfPeasant")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852335479, "units\\critters\\HighElfPeasant\\HighElfPeasant")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852335728, "units\\undead\\Acolyte\\Acolyte")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852336242, "units\\undead\\Acolyte\\Acolyte")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852337507, "units\\critters\\HermitCrab\\HermitCrab")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852337779, "buildings\\other\\HarpyNest\\HarpyNest")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852338792, "units\\creeps\\HarpyWitch\\HarpyWitch")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852338801, "units\\creeps\\HarpyQueen\\HarpyQueen")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852338802, "units\\creeps\\Harpy\\Harpy")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852338807, "units\\creeps\\HarpyWitch\\HarpyWitch")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852340579, "Units\\Creeps\\DragonSeaTurtleRange\\DragonSeaTurtleRange")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852340580, "Units\\Creeps\\Hydra\\Hydra")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852340584, "Units\\Creeps\\Hydra\\Hydra")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852340589, "units\\creeps\\BanditMage\\BanditMage")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852400495, "doodads\\cinematic\\IcecrownObelisk\\IcecrownObelisk")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852403297, "units\\creeps\\InfernalCannonFlame\\InfernalCannonFlame")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852403299, "units\\creeps\\InfernalCannonCannon\\InfernalCannonCannon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852403302, "units\\demon\\Infernal\\Infernal")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852403309, "units\\creeps\\InfernalCannonCannon\\InfernalCannonCannon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852404834, "buildings\\other\\IceCrownTreasureBox\\IceCrownTreasureBox")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852404840, "units\\creeps\\IceTrollShadowPriest\\IceTrollShadowPriest")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852404848, "units\\creeps\\IceTrollShadowPriest\\IceTrollShadowPriest")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852404850, "units\\creeps\\IceTroll\\IceTroll")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852404851, "units\\creeps\\IceTroll\\IceTroll")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852404852, "units\\creeps\\IceTroll\\IceTroll")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852404855, "units\\creeps\\IceTroll\\IceTroll")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852466993, "units\\creeps\\JungleBeast\\JungleBeast")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852467041, "units\\creeps\\JungleBeast\\JungleBeast")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852467042, "units\\creeps\\JungleBeast\\JungleBeast")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852468083, "units\\creeps\\Bandit\\Bandit")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852534626, "units\\creeps\\Kobold\\Kobold")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852534631, "units\\creeps\\KoboldGeomancer\\KoboldGeomancer")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852534636, "units\\creeps\\Kobold\\Kobold")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852534644, "units\\creeps\\Kobold\\Kobold")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852597363, "Units\\Creeps\\Lobstrokkblue\\Lobstrokkblue")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852599148, "Units\\Creeps\\Lobstrokkgreen\\Lobstrokkgreen")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852600420, "Units\\Creeps\\Lobstrokkred\\Lobstrokkred")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852600434, "Units\\Creeps\\Lobstrokkred\\Lobstrokkred")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852600435, "Units\\Creeps\\Lobstrokkred\\Lobstrokkred")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852600950, "units\\creeps\\RevenantOfTheWaves\\RevenantOfTheWaves")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852601198, "Units\\Creeps\\Lobstrokkred\\Lobstrokkred")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852601443, "Units\\Creeps\\Lobstrokkblue\\Lobstrokkblue")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852601452, "units\\creeps\\ThunderLizard\\ThunderLizard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852601714, "Units\\Creeps\\MonsterLure\\MonsterLure")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852601905, "Units\\Creeps\\LavaSpawn\\LavaSpawn")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852601906, "Units\\Creeps\\LavaSpawn\\LavaSpawn")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852601907, "Units\\Creeps\\LavaSpawn\\LavaSpawn")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852662125, "Units\\Creeps\\Mammoth\\Mammoth")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852662375, "Units\\Creeps\\MurgulBloodGill\\MurgulBloodGill")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852662630, "Units\\Creeps\\MurgulTideWarrior\\MurgulTideWarrior")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852662893, "units\\creeps\\Medivh\\Medivh")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852662898, "Units\\Creeps\\MammothBlack\\MammothBlack")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852663140, "units\\creeps\\Medivh\\Medivh")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852663154, "buildings\\other\\Mercenary\\Mercenary")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852663411, "units\\creeps\\MurlocFlesheater\\MurlocFlesheater")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852663600, "buildings\\other\\MurlocHut0\\MurlocHut0")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852663601, "buildings\\other\\MurlocHut1\\MurlocHut1")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852663652, "Units\\Creeps\\MagnataurBlue\\MagnataurBlue")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852663666, "Units\\Creeps\\Magnataur\\Magnataur")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852663670, "buildings\\other\\MagicVault\\MagicVault")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852663671, "Units\\Creeps\\MagnataurBrown\\MagnataurBrown")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852663856, "buildings\\other\\MurlocHut0\\MurlocHut0")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852663857, "buildings\\other\\MurlocHut1\\MurlocHut1")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852664180, "Units\\Creeps\\Mammoth\\Mammoth")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852665205, "units\\creeps\\MurlocMutant\\MurlocMutant")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852665711, "buildings\\other\\FountainOfMana\\FountainOfMana")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852665957, "units\\creeps\\MurgulSlave\\MurgulSlave")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852665959, "units\\creeps\\MurlocMutant\\MurlocMutant")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666416, "buildings\\other\\Mercenary\\Mercenary")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666418, "buildings\\other\\Mercenary\\Mercenary")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666419, "buildings\\other\\Mercenary\\Mercenary")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666420, "buildings\\other\\Mercenary\\Mercenary")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666421, "buildings\\other\\Mercenary\\Mercenary")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666422, "buildings\\other\\Mercenary\\Mercenary")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666423, "buildings\\other\\Mercenary\\Mercenary")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666424, "buildings\\other\\Mercenary\\Mercenary")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666425, "buildings\\other\\Mercenary\\Mercenary")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666465, "buildings\\other\\Mercenary\\Mercenary")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666466, "buildings\\other\\Mercenary\\Mercenary")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666467, "buildings\\other\\Mercenary\\Mercenary")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666468, "buildings\\other\\Mercenary\\Mercenary")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666469, "buildings\\other\\Mercenary\\Mercenary")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666470, "buildings\\other\\Mercenary\\Mercenary")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666475, "buildings\\other\\Marketplace\\Marketplace")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666476, "units\\creeps\\Murloc\\Murloc")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666477, "units\\creeps\\MurlocNightcrawler\\MurlocNightcrawler")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666482, "units\\creeps\\MurlocWarrior\\MurlocWarrior")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666486, "Units\\Creeps\\MurgulReaver\\MurgulReaver")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666723, "Units\\Creeps\\MurgulShadowCaster\\MurgulShadowCaster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666728, "units\\creeps\\GrizzlyBear\\GrizzlyBear")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666734, "Units\\Creeps\\MurgulShadowCaster\\MurgulShadowCaster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852666999, "Units\\Creeps\\MurgulTideWarrior\\MurgulTideWarrior")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852668274, "units\\naga\\NagaMyrmidon\\NagaMyrmidon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852668275, "units\\naga\\NagaMyrmidon\\NagaMyrmidon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852727652, "buildings\\naga\\AltarOfDepths\\AltarOfDepths")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852728427, "units\\creeps\\NetherDragon\\NetherDragon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852728434, "units\\creeps\\NetherDragon\\NetherDragon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852728941, "buildings\\naga\\CoralBed\\CoralBed")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852729460, "units\\creeps\\NetherDragon\\NetherDragon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852730727, "Units\\Creeps\\MurgulReaver\\MurgulReaver")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852732007, "units\\naga\\NagaRoyalGuard\\NagaRoyalGuard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852732019, "units\\naga\\NagaRoyalGuard\\NagaRoyalGuard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852732257, "buildings\\naga\\ShrineOfAshjara\\ShrineOfAshjara")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852732263, "buildings\\naga\\SpawningGrounds\\SpawningGrounds")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852732277, "Units\\Naga\\NagaSummoner\\NagaSummoner")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852732279, "Units\\Naga\\NagaSiren\\NagaSiren")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852732519, "buildings\\naga\\TidalGuardian\\TidalGuardian")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852732532, "buildings\\naga\\TempleofTides\\TempleofTides")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852733281, "units\\creeps\\Nerubian\\Nerubian")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852733292, "units\\creeps\\NerubianSpiderLord\\NerubianSpiderLord")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852733297, "units\\creeps\\NerubianQueen\\NerubianQueen")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852733298, "units\\creeps\\NerubianQueen\\NerubianQueen")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852733299, "units\\creeps\\NerubianSpiderLord\\NerubianSpiderLord")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852734055, "buildings\\other\\NerubianZiggurat\\NerubianZiggurat")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852794721, "units\\creeps\\OgreOneHeadedArmored\\OgreOneHeadedArmored")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852794732, "units\\creeps\\OgreLord\\OgreLord")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852794733, "units\\creeps\\Ogre\\Ogre")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852794734, "units\\creeps\\OgreMagi\\OgreMagi")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852794735, "units\\creeps\\OgreOneHeaded\\OgreOneHeaded")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852794738, "units\\creeps\\Ogre\\Ogre")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852796263, "units\\creeps\\OgreMagi\\OgreMagi")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852798770, "units\\nightelf\\OwlSCOUT\\OwlSCOUT")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852798771, "units\\nightelf\\OwlSCOUT\\OwlSCOUT")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852798818, "units\\creeps\\Owlbear\\Owlbear")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852798821, "units\\creeps\\Owlbear\\Owlbear")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852798827, "units\\creeps\\Owlbear\\Owlbear")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852798828, "units\\nightelf\\OwlSCOUT\\OwlSCOUT")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852860012, "units\\creeps\\FelstalkerPurple\\FelstalkerPurple")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852860013, "units\\creeps\\FelstalkerPurple\\FelstalkerPurple")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852860262, "buildings\\other\\PigFarm\\PigFarm")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852860274, "buildings\\other\\PowerGenerator\\PowerGenerator")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852860775, "units\\critters\\Pig\\Pig")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852861538, "units\\creeps\\PolarBear\\PolarBear")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852861543, "units\\creeps\\PolarBear\\PolarBear")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852862001, "Units\\Creeps\\FirePandarenBrewmaster\\FirePandarenBrewmaster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852862002, "Units\\Creeps\\StormPandarenBrewmaster\\StormPandarenBrewmaster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852862003, "Units\\Creeps\\EarthPandarenBrewmaster\\EarthPandarenBrewmaster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852862004, "Units\\Creeps\\FirePandarenBrewmaster\\FirePandarenBrewmaster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852862005, "Units\\Creeps\\StormPandarenBrewmaster\\StormPandarenBrewmaster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852862006, "Units\\Creeps\\EarthPandarenBrewmaster\\EarthPandarenBrewmaster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852862055, "units\\critters\\Penguin\\Penguin")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852862071, "units\\critters\\Penguin\\Penguin")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852924465, "Units\\Creeps\\QuillBeast\\QuillBeast")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852924466, "Units\\Creeps\\QuillBeast\\QuillBeast")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852924467, "Units\\Creeps\\QuillBeast\\QuillBeast")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852924468, "Units\\Creeps\\QuillBeast\\QuillBeast")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852924520, "units\\creeps\\Bristleback\\Bristleback")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852989795, "units\\critters\\Raccoon\\Raccoon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852989812, "units\\critters\\Rat\\Rat")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852990571, "units\\creeps\\RedDragonWelp\\RedDragonWelp")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852990578, "units\\creeps\\RedDragon\\RedDragon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852990828, "Units\\Creeps\\SeaElemental\\SeaElemental")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852993383, "units\\creeps\\Bandit\\Bandit")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852995172, "units\\creeps\\Revenant\\Revenant")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852995174, "units\\creeps\\Revenant\\Revenant")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852995177, "units\\creeps\\Revenant\\Revenant")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852995180, "units\\creeps\\Revenant\\Revenant")
endfunction

function populateModelRegistry5 takes nothing returns nothing
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852995187, "units\\creeps\\Revenant\\Revenant")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852995437, "units\\creeps\\RedDragon\\RedDragon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852996194, "units\\creeps\\RazorMane\\RazorMane")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852996199, "units\\creeps\\RazorManeChief\\RazorManeChief")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852996205, "units\\creeps\\RazorManeChief\\RazorManeChief")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852996211, "units\\creeps\\RazorMane\\RazorMane")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1852996212, "units\\creeps\\Bristleback\\Bristleback")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853055348, "units\\creeps\\SatyrTrickster\\SatyrTrickster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853055597, "units\\creeps\\SpiderBlue\\SpiderBlue")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853055603, "units\\naga\\SnapDragon\\SnapDragon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853055794, "units\\creeps\\SpiderCrabCreep\\SpiderCrabCreep")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853055795, "units\\creeps\\SpiderCrabCreep\\SpiderCrabCreep")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853055841, "units\\creeps\\SkeletonArcher\\SkeletonArcher")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853055842, "units\\creeps\\SpiderCrabCreep\\SpiderCrabCreep")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853055845, "units\\undead\\Skeleton\\Skeleton")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853056353, "units\\critters\\Seal\\Seal")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853056364, "Units\\Creeps\\SeaElemental\\SeaElemental")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853056370, "units\\creeps\\BlackDragon\\BlackDragon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853056866, "Units\\Creeps\\SeaGiant\\SeaGiant")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853056871, "units\\creeps\\GolemStatue\\GolemStatue")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853056872, "Units\\Creeps\\SeaGiantGreen\\SeaGiantGreen")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853056878, "Units\\Creeps\\SeaGiant\\SeaGiant")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853056884, "units\\creeps\\Spider\\Spider")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853057121, "units\\critters\\Sheep\\Sheep")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853057125, "units\\critters\\Sheep\\Sheep")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853057126, "units\\critters\\FlyingSheep\\FlyingSheep")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853057136, "buildings\\other\\GoblinShipyard\\GoblinShipyard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853057138, "buildings\\other\\SacrificialAltar\\SacrificialAltar")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853057143, "units\\critters\\Sheep\\Sheep")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853057889, "units\\creeps\\SkeletonArcher\\SkeletonArcher")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853057893, "units\\undead\\Skeleton\\Skeleton")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853057894, "units\\creeps\\SkeletonArcher\\SkeletonArcher")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853057895, "units\\undead\\Skeleton\\Skeleton")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853057899, "units\\critters\\Skink\\Skink")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853057901, "units\\creeps\\SkeletonArcher\\SkeletonArcher")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853057903, "units\\creeps\\SkeletonOrc\\SkeletonOrc")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853058150, "units\\creeps\\SludgeMonster\\SludgeMonster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853058152, "units\\creeps\\ThunderLizardSalamander\\ThunderLizardSalamander")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853058156, "units\\creeps\\ThunderLizardSalamander\\ThunderLizardSalamander")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853058157, "units\\creeps\\SludgeMonster\\SludgeMonster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853058158, "units\\creeps\\SludgeMonster\\SludgeMonster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853058162, "units\\creeps\\ThunderLizardSalamander\\ThunderLizardSalamander")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853058166, "units\\creeps\\ThunderLizardVizier\\ThunderLizardVizier")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853058671, "units\\critters\\SnowOwl\\SnowOwl")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853058672, "units\\naga\\SnapDragon\\SnapDragon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853058675, "Units\\Creeps\\MurgulShadowCaster\\MurgulShadowCaster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853058915, "units\\creeps\\SkeletonOrc\\SkeletonOrc")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853058919, "units\\creeps\\SkeletonOrc\\SkeletonOrc")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853059170, "units\\creeps\\SpiderBlack\\SpiderBlack")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853059171, "doodads\\underground\\terrain\\SupportBeam\\SupportBeam")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853059172, "units\\creeps\\Nerubian\\Nerubian")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853059175, "units\\creeps\\SpiderGreen\\SpiderGreen")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853059184, "units\\creeps\\SpiritPig\\SpiritPig")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853059186, "units\\creeps\\Spider\\Spider")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853059425, "units\\creeps\\Sasquatch\\Sasquatch")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853059429, "units\\creeps\\SasquatchShaman\\SasquatchShaman")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853059439, "units\\creeps\\Sasquatch\\Sasquatch")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853059444, "units\\creeps\\Sasquatch\\Sasquatch")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853059681, "units\\creeps\\OrcWarlock\\OrcWarlock")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853059688, "units\\creeps\\OrcWarlock\\OrcWarlock")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853059694, "units\\creeps\\OrcWarlock\\OrcWarlock")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853059702, "units\\creeps\\RevenantOfTheWaves\\RevenantOfTheWaves")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853059703, "units\\creeps\\OrcWarlock\\OrcWarlock")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853059950, "units\\creeps\\assassin\\assassin")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853059952, "units\\creeps\\SpiderBlue\\SpiderBlue")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853060200, "units\\creeps\\satyrhellcaller\\satyrhellcaller")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853060204, "units\\creeps\\Satyr\\Satyr")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853060211, "units\\creeps\\SatyrTrickster\\SatyrTrickster")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853060215, "units\\creeps\\ThunderLizard\\ThunderLizard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853060217, "units\\creeps\\Satyr\\Satyr")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853060913, "units\\creeps\\FelstalkerPurple\\FelstalkerPurple")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853060914, "units\\creeps\\FelstalkerPurple\\FelstalkerPurple")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853060915, "units\\creeps\\FelstalkerPurple\\FelstalkerPurple")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853120886, "buildings\\other\\Tavern\\Tavern")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853121902, "buildings\\other\\Tent\\Tent")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853122608, "buildings\\other\\IceTrollHut0\\IceTrollHut0")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853122609, "buildings\\other\\IceTrollHut1\\IceTrollHut1")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853122668, "units\\creeps\\ThunderLizard\\ThunderLizard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853122674, "units\\creeps\\GreenDragon\\GreenDragon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853123425, "Units\\Creeps\\tuskarRanged\\tuskarRanged")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853123427, "Units\\Creeps\\tuskarLord\\tuskarLord")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853123430, "Units\\Creeps\\tuskar\\tuskar")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853123432, "Units\\Creeps\\tuskarLord\\tuskarLord")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853123443, "Units\\Creeps\\tuskarRanged\\tuskarRanged")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853123444, "Units\\Creeps\\tuskarRanged\\tuskarRanged")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853123447, "Units\\Creeps\\tuskarLord\\tuskarLord")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853124146, "buildings\\other\\Tent1\\Tent1")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853124212, "buildings\\other\\TaurenTent\\TaurenTent")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853124466, "Abilities\\Spells\\Other\\Tornado\\TornadoElemental")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853125220, "Units\\Creeps\\DragonSeaTurtle\\DragonSeaTurtle")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853125223, "Units\\Creeps\\GiantSeaTurtle\\GiantSeaTurtle")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853125224, "Units\\Creeps\\SeaTurtleRange\\SeaTurtleRange")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853125235, "Units\\Creeps\\SeaTurtle\\SeaTurtle")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853125236, "Units\\Creeps\\GiantSeaTurtleRange\\GiantSeaTurtleRange")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853125238, "units\\creeps\\RevenantOfTheWaves\\RevenantOfTheWaves")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853125681, "buildings\\other\\TowerDefenseTower\\TowerDefenseTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853125682, "buildings\\other\\TaurenTent2\\TaurenTent2")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853126515, "Units\\Creeps\\MurgulTideWarrior\\MurgulTideWarrior")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853126706, "buildings\\other\\TowerDefenseTower\\TowerDefenseTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853186667, "Units\\Creeps\\Unbroken\\Unbroken")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853186674, "Units\\Creeps\\Unbroken\\Unbroken")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853186679, "Units\\Creeps\\Unbroken\\Unbroken")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853252709, "units\\creeps\\VoidWalker\\VoidWalker")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853252711, "units\\creeps\\VoidWalker\\VoidWalker")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853252716, "units\\creeps\\VoidWalker\\VoidWalker")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853252727, "units\\creeps\\VoidWalker\\VoidWalker")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853253996, "units\\critters\\VillagerMan\\VillagerMan")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853254450, "units\\critters\\VillagerKid1\\VillagerKid1")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853254706, "units\\critters\\VillagerMan1\\VillagerMan1")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853254763, "units\\critters\\VillagerKid\\VillagerKid")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853254775, "units\\critters\\VillagerWoman\\VillagerWoman")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853256240, "buildings\\other\\ElvenFishVillageBuildingRuined0\\ElvenFishVillageBuildingRuined0")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853256241, "buildings\\other\\ElvenFishVillageBuildingRuined1\\ElvenFishVillageBuildingRuined1")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853256242, "buildings\\other\\ElvenFishVillageBuildingRuined2\\ElvenFishVillageBuildingRuined2")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853257068, "units\\critters\\Vulture\\Vulture")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853305463, "units\\creeps\\ChaosWarlockGreen\\ChaosWarlockGreen")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853317476, "units\\orc\\WatcherWard\\WatcherWard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853317492, "units\\creeps\\watcher\\watcher")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853317937, "buildings\\other\\WyvernCage\\WyvernCage")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853317938, "buildings\\other\\WyvernCage2\\WyvernCage2")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853318449, "units\\creeps\\WarEagle\\WarEagle")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853318450, "units\\creeps\\WarEagle\\WarEagle")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853318451, "units\\creeps\\WarEagle\\WarEagle")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853318510, "units\\creeps\\Wendigo\\Wendigo")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853319027, "units\\naga\\WindSerpent\\WindSerpent")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853319028, "buildings\\other\\Waygate\\Waygate")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853319546, "units\\creeps\\HumanMage\\HumanMage")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853320292, "units\\creeps\\DireWolf\\DireWolf")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853320295, "units\\creeps\\TimberWolf\\TimberWolf")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853320308, "units\\creeps\\TimberWolf\\TimberWolf")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853320801, "units\\creeps\\Wendigo\\Wendigo")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853320818, "units\\creeps\\Wendigo\\Wendigo")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853320819, "units\\creeps\\WendigoShaman\\WendigoShaman")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853321831, "units\\creeps\\GolemStatue\\GolemStatue")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853322033, "units\\creeps\\WindSerpent\\WindSerpent")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853323108, "units\\creeps\\WhiteWolf\\WhiteWolf")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853323110, "units\\creeps\\WhiteWolf\\WhiteWolf")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853323111, "units\\creeps\\WhiteWolf\\WhiteWolf")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853323876, "units\\creeps\\BanditMage\\BanditMage")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853323879, "units\\creeps\\BanditMage\\BanditMage")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853323890, "units\\creeps\\BanditMage\\BanditMage")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853515120, "units\\creeps\\GoblinZeppelin\\GoblinZeppelin")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853516142, "Doodads\\Terrain\\LOSBlocker\\IntentionallyLeftBlank")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853516899, "doodads\\cinematic\\lichking\\lichking")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1853517677, "units\\creeps\\Zombie\\Zombie")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1868655732, "buildings\\orc\\AltarofStorms\\AltarofStorms")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1868718450, "buildings\\orc\\OrcBarracks\\OrcBarracks")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1868719457, "buildings\\orc\\Beastiary\\Beastiary")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1868722036, "units\\creeps\\OrcishTransportShip\\OrcishTransportShip")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1868783988, "units\\orc\\catapult\\catapult")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1868784247, "buildings\\orc\\TrollBurrow\\TrollBurrow")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1868850547, "units\\creeps\\OrcishDestroyerShip\\OrcishDestroyerShip")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1868852084, "units\\creeps\\OrcWarlockRed\\OrcWarlockRed")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1868853091, "units\\orc\\WitchDoctor\\WitchDoctor")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1868921189, "units\\orc\\SentryWard\\SentryWard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1868984178, "buildings\\orc\\WarMill\\WarMill")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1868984948, "buildings\\orc\\GreatHall\\GreatHall")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869050469, "buildings\\orc\\GreatHall\\GreatHall")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869050475, "units\\orc\\Grunt\\Grunt")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869050485, "units\\orc\\Grunt\\Grunt")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869116782, "units\\orc\\HeadHunter\\HeadHunter")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869117284, "units\\orc\\HealingWard\\HealingWard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869244270, "Units\\Critters\\OrcJuggernaught\\OrcJuggernaught")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869311844, "units\\orc\\KotoBeast\\KotoBeast")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869444199, "units\\demon\\ChaosWarlord\\ChaosWarlord")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869511271, "units\\orc\\WolfRider\\WolfRider")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869575011, "units\\orc\\KotoBeastNoRider\\KotoBeastNoRider")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869636975, "units\\orc\\Peon\\Peon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869767017, "units\\orc\\WolfRider\\WolfRider")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869834349, "units\\orc\\Shaman\\Shaman")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869834361, "buildings\\other\\GoblinShipyard\\GoblinShipyard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869835364, "buildings\\orc\\SpiritLodge\\SpiritLodge")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869836337, "units\\orc\\SerpentWard\\SerpentWard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869836338, "units\\orc\\SerpentWard\\SerpentWard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869836339, "units\\orc\\SerpentWard\\SerpentWard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869836340, "units\\orc\\SerpentWard\\SerpentWard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869836397, "units\\orc\\spiritwalker\\spiritwalker")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869836407, "units\\orc\\spiritwalker\\spiritwalker")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869837426, "buildings\\orc\\GreatHall\\GreatHall")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869838129, "units\\orc\\Spiritwolf\\Spiritwolf")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869838130, "units\\orc\\Spiritwolf\\Spiritwolf")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869838131, "units\\orc\\Spiritwolf\\Spiritwolf")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869838201, "units\\orc\\SpiritWyvern\\SpiritWyvern")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869898101, "units\\orc\\Tauren\\Tauren")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869898347, "units\\orc\\HeadHunter\\HeadHunter")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869898354, "units\\orc\\BatTroll\\BatTroll")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869901684, "units\\orc\\StasisTotem\\StasisTotem")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869902434, "buildings\\orc\\TrollBurrow\\TrollBurrow")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1869902959, "buildings\\orc\\TaurenTotem\\TaurenTotem")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1870031978, "units\\orc\\WitchDoctor\\WitchDoctor")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1870031982, "buildings\\orc\\VoodooLounge\\VoodooLounge")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1870094706, "units\\demon\\ChaosWarlord\\ChaosWarlord")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1870098034, "units\\orc\\RiderlessWyvern\\RiderlessWyvern")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1870099575, "buildings\\orc\\WatchTower\\WatchTower")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1870100854, "units\\orc\\WyvernRider\\WyvernRider")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969316451, "units\\undead\\AbominationCIN\\AbominationCIN")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969316463, "units\\undead\\Abomination\\Abomination")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969316719, "units\\undead\\Acolyte\\Acolyte")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969319780, "buildings\\undead\\AltarOfDarkness\\AltarOfDarkness")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969320546, "units\\undead\\UndeadAirBarge\\UndeadAirBarge")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969381742, "units\\undead\\Banshee\\Banshee")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969382500, "units\\undead\\FrostWyrm\\FrostWyrm")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969382514, "units\\creeps\\AzureDragon\\AzureDragon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969385326, "buildings\\undead\\BoneYard\\BoneYard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969385332, "units\\creeps\\UndeadTransportShip\\UndeadTransportShip")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969386352, "units\\undead\\ObsidianStatue\\ObsidianStatue")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969451629, "units\\undead\\CryptFiend\\CryptFiend")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969451641, "units\\undead\\CryptFiend\\CryptFiend")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969451825, "units\\undead\\scarab\\scarab")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969451826, "units\\undead\\scarab\\scarab")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969451827, "units\\undead\\scarab\\scarab")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969451842, "units\\undead\\scarab\\scarab")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969451843, "units\\undead\\scarab\\scarab")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969513843, "units\\creeps\\UndeadDestroyerShip\\UndeadDestroyerShip")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969648239, "units\\undead\\FrostWyrm\\FrostWyrm")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969709426, "units\\undead\\Gargoyle\\Gargoyle")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969711215, "units\\undead\\Ghoul\\Ghoul")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969713004, "buildings\\undead\\HauntedMine\\HauntedMine")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969713773, "units\\undead\\Gargoyle\\Gargoyle")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969713782, "buildings\\undead\\Graveyard\\Graveyard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969976423, "units\\undead\\KelThuzadGhost\\KelThuzadGhost")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1969976430, "units\\undead\\Kelthuzad\\Kelthuzad")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970040675, "units\\undead\\Locust\\Locust")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970107511, "units\\undead\\MeatWagon\\MeatWagon")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970169187, "units\\undead\\Necromancer\\Necromancer")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970171953, "buildings\\undead\\Necropolis\\Necropolis")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970171954, "buildings\\undead\\Necropolis\\Necropolis")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970172012, "buildings\\undead\\Necropolis\\Necropolis")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970233971, "units\\undead\\ObsidianStatue\\ObsidianStatue")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970302055, "units\\undead\\PlagueCloud\\PlagueCloud")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970495856, "buildings\\undead\\SacrificialPit\\SacrificialPit")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970496880, "buildings\\undead\\Crypt\\Crypt")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970497636, "units\\undead\\Shade\\Shade")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970497648, "buildings\\undead\\UndeadShipyard\\UndeadShipyard")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970498405, "units\\undead\\Skeleton\\Skeleton")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970498413, "units\\undead\\SkeletonMage\\SkeletonMage")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970498664, "buildings\\undead\\Slaughterhouse\\Slaughterhouse")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970501474, "units\\creeps\\BansheeGhost\\BansheeGhost")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970564964, "buildings\\undead\\TempleOfTheDamned\\TempleOfTheDamned")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970564973, "buildings\\undead\\TombOfRelics\\TombOfRelics")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970627187, "units\\creeps\\UndeadShipBattleShip\\UndeadShipBattleShip")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970956081, "buildings\\undead\\Ziggurat\\Ziggurat")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970956082, "buildings\\undead\\Ziggurat\\Ziggurat")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 1970956647, "buildings\\undead\\Ziggurat\\Ziggurat")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2053337967, "Units\\Critters\\ChaosSpaceOrc\\ChaosSpaceOrc")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2053667172, "Units\\Critters\\Hydralisk\\Hydralisk")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2053797223, "Units\\Critters\\OrcJuggernaught\\OrcJuggernaught")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2053988722, "Units\\Critters\\Marine\\Marine")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2054383734, "Units\\Critters\\Shoveler\\Shoveler")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2054384995, "Units\\Critters\\SammyCube\\SammyCube")
	call SaveStr(CodegenUtils_REGISTRIES, 2, 2054845031, "Units\\Critters\\zergling\\zergling")
endfunction

function populateUidRegistry0 takes nothing returns nothing
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -268776859, 2016443186)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -463549583, 2016423988)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1347904292, 2016423986)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -787973231, 2016423985)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1278347156, 2016423989)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1470188718, 2016423987)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -986230661, 2016423990)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 728314269, 2016425837)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1994093170, 2016425838)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 719654037, 2016443512)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1554611703, 2016443513)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1152974751, 2016426017)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1255808510, 2016425839)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 597328706, 2016425840)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -239095444, 2016443514)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -967830639, 2016425853)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -26388855, 2016425854)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1920316564, 2016425841)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2144038394, 2016425842)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1301223450, 2016425832)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1869672419, 2016425843)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -941969369, 2016425848)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1435063318, 2016425850)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1897025717, 2016425835)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1309787543, 2016425844)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1175923399, 2016425845)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 90675643, 2016425846)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1152325623, 2016425847)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 202234836, 2016426032)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1144155074, 2016425836)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -246655550, 2016425833)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1564018054, 2016425852)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 343732994, 2016425851)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1990769303, 2016425849)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2122619633, 2016425834)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -763869909, 2016425572)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1874234928, 2016441953)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 970992116, 2016425076)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -287538973, 2016443187)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -229912540, 2016443251)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2005431690, 2016443757)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 138387721, 2016437297)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1683409486, 2016437298)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1349965501, 2016437299)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 788776679, 2016437300)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2084154748, 2016437302)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1828346615, 2016437303)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2075238596, 2016437304)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -738762832, 2016437305)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1665481183, 2016437301)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 946274802, 2016441144)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1610361713, 2016438644)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1719944134, 2016441723)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1466176815, 2016441724)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1674475469, 2016440942)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -85760253, 2016440943)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1526762969, 2016438631)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1728978884, 2016438377)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1503632614, 2016438325)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 47025160, 2016438326)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 389214411, 2016438327)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1594917688, 2016438328)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 410100518, 2016438140)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1364424338, 2016440944)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 144765014, 2016438645)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -791761012, 2016438654)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 973707754, 2016438646)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1397663124, 2016438647)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 762736487, 2016438648)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1900522677, 2016438649)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1723331898, 2016438650)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1202921548, 2016438651)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2119454298, 2016438652)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1890028896, 2016438653)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1671748563, 2016438817)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -24292771, 2016438832)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1029667464, 2016438833)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1481809951, 2016438072)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1848730590, 2016438073)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1099611148, 2016438113)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1504197575, 2016438114)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1144810011, 2016438139)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2119035612, 2016425779)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1713060785, 2016443507)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1493748769, 2016443508)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1800957084, 2016443505)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1246304872, 2016443506)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 755093681, 2016443509)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -136146534, 2016443510)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -437643662, 2016425782)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1095436390, 2016441190)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -369825288, 2016437351)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1027892144, 2016440936)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1604918617, 2016440937)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -48055202, 2016440938)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 299103244, 2016440939)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -268244197, 2016440940)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1350809024, 2016440941)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 965572924, 2016443001)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1616367113, 2016443002)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1559041382, 2016438834)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 307207256, 2016438835)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -782421030, 2016438836)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -485941769, 2016437608)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -98008547, 2016437617)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 970437280, 2016437609)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -768753210, 2016437610)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 894480479, 2016437611)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -338921682, 2016437612)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 911626252, 2016437613)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 123063489, 2016437614)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 373080513, 2016437615)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1743126043, 2016437616)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -639790878, 2016438886)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -11663368, 2016438887)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1778996171, 2016438839)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -609351876, 2016438840)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1608643896, 2016438837)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1884697059, 2016438838)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1312755235, 2016438841)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1005525525, 2016438881)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -516042738, 2016438882)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1957529021, 2016438883)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 761675119, 2016438884)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1026005731, 2016438885)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -56392016, 2016438888)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -733451550, 2016438897)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1289993931, 2016438889)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1547663753, 2016438890)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 106887442, 2016438891)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -150974589, 2016438892)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 952679576, 2016438893)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 795077953, 2016438894)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1440157824, 2016438895)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1162569280, 2016438896)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1502395764, 2016438898)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -597066535, 2016438899)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1119901308, 2016438900)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -815281498, 2016438901)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -286212595, 2016438902)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2022281520, 2016438903)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1891222530, 2016438904)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1226364160, 2016438905)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1930078771, 2016443247)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2012438813, 2016443248)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1348615023, 2016443249)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -929999934, 2016441954)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -320299042, 2016438138)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 333336087, 2016442238)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1437293844, 2016442401)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2005366447, 2016443773)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -374417626, 2016423991)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -79184036, 2016423992)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1019069294, 2016423993)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1744689107, 2016424033)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1015262545, 2016424035)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1044442761, 2016424036)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 401185855, 2016424037)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1447885071, 2016424038)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1731138677, 2016424039)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2006104968, 2016424034)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -361098043, 2016424040)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1405934757, 2016424041)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2117264760, 2016424042)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -728253888, 2016424043)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -105636463, 2016424044)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 265369908, 2016424045)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1064660393, 2016424046)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1167308355, 2016424047)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1438693087, 2016425587)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1088994301, 2016442986)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 387723011, 2016442999)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1665034852, 2016443000)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -292921509, 2016438136)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -695860683, 2016425577)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -826020000, 2016438065)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1952976684, 2016438066)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1217858024, 2016438067)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1683368116, 2016438068)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1764157831, 2016438069)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1682605609, 2016438070)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1214415600, 2016438071)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -918348363, 2016441140)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 380581887, 2016425014)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -396462965, 2016425015)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 162448316, 2016425578)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -648168434, 2016442490)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1289460228, 2016442491)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1338153495, 2016442492)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1037175726, 2016442493)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 984146354, 2016442724)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -973818549, 2016438125)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1449191770, 2016442474)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1698948281, 2016441955)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1427853484, 2016442998)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -591383189, 2016443260)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1377357008, 2016443262)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1750898607, 2016443425)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1973103086, 2016440881)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 378037795, 2016440702)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1825958562, 2016440882)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2002293619, 2016440880)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1799351179, 2016440701)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1268531752, 2016440883)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 96290578, 2016440884)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -678806371, 2016438305)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2018622717, 2016440865)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 472176230, 2016441956)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1552121621, 2016440886)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1414255505, 2016440887)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 242487305, 2016440885)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1627424129, 2016485733)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 199863187, 2016485734)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1288638064, 2016440888)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -685368627, 2016440929)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1378666492, 2016440889)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 911790886, 2016425077)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -607445760, 2016443758)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 165572225, 2016443759)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 962315778, 2016443761)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 834556081, 2016443760)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -843271853, 2016425579)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 285979974, 2016442424)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1953592308, 2016442423)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1470737880, 2016485748)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 555876697, 2016485749)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1104331391, 2016485750)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 646793112, 2016485751)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1304099763, 2016425016)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1284228341, 2016425017)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 37978305, 2016425057)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1156143512, 2016425058)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 38436713, 2016425059)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1682277190, 2016425060)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -9769234, 2016425061)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1211496923, 2016425062)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1287401015, 2016425063)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1706507060, 2016425064)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1530497144, 2016425065)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1398008986, 2016425066)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -863402718, 2016425067)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1308645181, 2016425068)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -455927859, 2016425069)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1926194509, 2016425070)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -512958170, 2016425071)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 274955661, 2016425072)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1561340907, 2016425073)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1623661769, 2016425074)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -443022323, 2016425075)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 591928074, 2016438126)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1171302799, 2016438135)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1444751554, 2016438127)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1032164799, 2016438128)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -850335612, 2016438129)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1970451176, 2016438130)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1322111705, 2016438131)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 284040964, 2016438132)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -460236674, 2016438133)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 865650777, 2016438134)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2003579885, 2016442749)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1747663461, 2016485755)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1821998794, 2016485756)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2074956822, 2016485757)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 375827259, 2016485758)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 43660137, 2016489505)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1648201195, 2016441198)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 243796268, 2016437352)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1371685439, 2016437607)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1475958409, 2016426033)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -782364900, 2016426034)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 637547172, 2016426035)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -641710471, 2016426036)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1822942059, 2016426037)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 640623547, 2016426038)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 259778655, 2016443515)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1137912307, 2016425594)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1874067849, 2016441447)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 48201269, 2016441448)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1759468911, 2016442744)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 624743290, 2016442745)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1336320871, 2016442746)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -596180392, 2016442747)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 571634299, 2016442987)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1503937903, 2016441957)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2136695907, 2016441651)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2087433959, 2016441652)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1142898933, 2016441653)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1194100438, 2016441654)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1495850780, 2016441655)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1762433915, 2016441656)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1776878365, 2016438632)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1415622443, 2016441718)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1297357521, 2016441720)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1724498338, 2016441717)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -72991217, 2016441719)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -114169761, 2016441721)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 227452856, 2016441722)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -515165315, 2016441201)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2114344273, 2016437859)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2052558263, 2016437860)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 596322514, 2016437861)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 350157833, 2016437862)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -762089033, 2016440956)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -439571331, 2016437552)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -254043738, 2016437553)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1564911060, 2016437554)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 535131836, 2016437555)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -820514639, 2016437556)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1070455818, 2016437557)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -884400041, 2016437558)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1047319454, 2016437374)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -830188601, 2016437537)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -611771656, 2016441141)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -561272686, 2016442984)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1661523958, 2016441199)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1563709528, 2016485743)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -433251200, 2016441203)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -714532019, 2016441204)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1634981832, 2016441205)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1986085442, 2016441206)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1696012401, 2016441207)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1073968763, 2016441210)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1566820891, 2016441208)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1650818903, 2016441209)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -722744312, 2016441211)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -32532747, 2016442985)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1905970376, 2016443448)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1947667982, 2016443449)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1864797020, 2016443489)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1562594751, 2016443490)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1567185051, 2016443491)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1392886197, 2016443492)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2079525071, 2016442215)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1718081398, 2016442224)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 143143517, 2016442216)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1016055045, 2016442217)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1921072356, 2016442218)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1229053370, 2016442219)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -166442308, 2016442220)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 493715813, 2016442221)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1426313730, 2016442222)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -249478813, 2016442223)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1044847707, 2016442487)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 315378402, 2016443243)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -964347856, 2016443244)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -29281100, 2016425825)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1467810281, 2016425826)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -459515173, 2016441197)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1229544778, 2016443252)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2047993542, 2016443233)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2091659622, 2016426039)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -856787515, 2016426087)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1742794979, 2016426088)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1661951682, 2016426089)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -473683717, 2016426090)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 967301939, 2016426091)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1099466643, 2016426092)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -244658180, 2016426040)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 327576437, 2016426041)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -441671757, 2016426081)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1871195513, 2016426082)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1787737187, 2016426083)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1560014268, 2016426084)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -235416418, 2016426085)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 307779750, 2016426086)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1544348156, 2016443516)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1303138760, 2016443517)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1618813342, 2016489581)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1735857003, 2016443188)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1002000891, 2016443189)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 426669947, 2016443190)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1225680870, 2016437366)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2021944193, 2016437367)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 161814886, 2016437368)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 787025252, 2016437369)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1972623716, 2016437370)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1070196191, 2016437371)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -965898717, 2016437372)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1473317209, 2016437373)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 940978834, 2016425524)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1701271344, 2016441958)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1070778172, 2016442679)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 606172711, 2016442680)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -380049580, 2016425342)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1926388280, 2016426096)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -569344820, 2016426097)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -872580946, 2016426093)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -623667303, 2016426098)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 888947193, 2016426094)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 876393833, 2016426095)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -484701173, 2016426099)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1777524348, 2016426292)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1160307138, 2016426100)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1215800537, 2016426101)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 251915747, 2016426297)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2062184888, 2016426102)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 880509325, 2016426290)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1958879313, 2016426103)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2142587127, 2016426293)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1149830869, 2016426294)
endfunction

function populateUidRegistry1 takes nothing returns nothing
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 163058874, 2016426295)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1413469023, 2016426296)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1684541642, 2016426104)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1338530683, 2016426105)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1440590310, 2016426106)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -551508388, 2016426107)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 111089713, 2016426108)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1990725359, 2016426109)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1704440290, 2016426110)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1196638043, 2016426273)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1635089136, 2016426288)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1597100157, 2016426291)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -95031464, 2016426289)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1900170765, 2016443696)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -14609105, 2016443518)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1827141107, 2016443681)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 726536210, 2016425596)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1476740807, 2016441449)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 826282965, 2016441450)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1507982845, 2016441451)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 345054822, 2016441959)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -700619517, 2016441960)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1898791391, 2016441961)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1733811164, 2016441962)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 312173937, 2016441963)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -716497574, 2016425576)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 443818957, 2016439096)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1114239153, 2016442466)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 698464743, 2016440946)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2076609124, 2016438906)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -658258764, 2016439091)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 183520739, 2016438907)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2129972909, 2016438908)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -929980100, 2016438909)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1242763580, 2016438910)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1798894017, 2016439073)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 456574474, 2016439088)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1029006640, 2016439089)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1829491373, 2016439090)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 241925355, 2016439092)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1079018812, 2016439093)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1681790435, 2016439094)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1328956773, 2016439095)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -676171033, 2016424048)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1310774775, 2016424049)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1259807320, 2016424050)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1265379550, 2016424051)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -957598664, 2016424052)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -191399485, 2016424053)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -970735390, 2016424054)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -539035802, 2016424055)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1193232478, 2016424056)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1469411078, 2016424057)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1306133829, 2016424058)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -321461405, 2016424059)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1034867433, 2016424060)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 846117696, 2016424061)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1244104272, 2016424062)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1433801403, 2016424225)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1182950610, 2016424240)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1450249804, 2016424241)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 3476434, 2016424242)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 406023471, 2016424244)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1310930822, 2016424243)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1948285943, 2016424247)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -720508051, 2016424245)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 929490890, 2016424246)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1350800092, 2016424248)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -616334956, 2016424249)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 722999957, 2016424289)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1671032256, 2016424290)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1777675051, 2016424291)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -760161410, 2016442934)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1124774430, 2016442935)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1916752996, 2016442467)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -552020971, 2016441707)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 239781342, 2016441709)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1136389382, 2016441710)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -265760162, 2016441711)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 184244477, 2016441712)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2106614762, 2016441713)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1058536596, 2016441714)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1060260018, 2016441715)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1291352267, 2016441716)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1143307743, 2016441699)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -333190940, 2016441700)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1451695067, 2016441701)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 431757132, 2016441702)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 273780531, 2016441703)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1235149720, 2016441704)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1960362483, 2016441705)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -34857998, 2016441706)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -319953780, 2016443235)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -93116788, 2016443236)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2106986236, 2016443237)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1629742801, 2016442726)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -416084492, 2016440933)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -444252700, 2016442468)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -536393609, 2016425505)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1124561544, 2016489528)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1562388843, 2016489529)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1648551059, 2016437350)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2098079220, 2016439157)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1699150765, 2016441889)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1251010055, 2016441904)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -121718006, 2016438633)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 495419335, 2016438634)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2037613492, 2016438376)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -648388219, 2016439158)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1615894291, 2016439159)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 569445536, 2016438324)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1569771373, 2016438142)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 181175121, 2016439163)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1123939151, 2016439348)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1291210578, 2016439164)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1398638736, 2016439165)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2014552668, 2016439166)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1024209757, 2016439329)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -685195311, 2016439344)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -817242372, 2016439345)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -592243113, 2016439346)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1443510280, 2016439347)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 942066010, 2016439160)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1561524781, 2016439161)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 20187040, 2016439162)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 4908243, 2016438115)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 8524721, 2016438116)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1715218526, 2016438117)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1317212355, 2016438118)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1744384451, 2016439349)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 436816085, 2016439350)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1553173488, 2016439351)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 511258222, 2016439352)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 303571137, 2016439353)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1579996300, 2016439393)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1124805913, 2016439394)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1005966068, 2016439395)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 846466078, 2016425341)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -339341846, 2016438141)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 214432897, 2016438387)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -485075099, 2016438388)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1752726625, 2016438389)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 556564657, 2016438390)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1024744744, 2016438391)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -80740539, 2016438392)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -691666562, 2016438393)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 35808774, 2016440948)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1623225231, 2016440947)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1152421563, 2016440949)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1363735032, 2016489585)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1851221197, 2016442494)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -462073794, 2016443441)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1461142629, 2016443442)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1245452623, 2016443443)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -591995458, 2016442657)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -840538765, 2016442672)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -110821726, 2016442226)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -704486059, 2016442225)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -525597563, 2016442227)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1339891675, 2016442228)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -752302102, 2016424292)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -604651565, 2016424296)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1029404322, 2016424293)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1650656823, 2016424294)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2085728488, 2016424295)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 295493826, 2016489590)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -271806059, 2016438137)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 567486842, 2016442418)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2097166910, 2016442419)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -541176896, 2016442420)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 976541865, 2016443184)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1159632072, 2016443185)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1343436339, 2016438639)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 454530728, 2016438640)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 438431994, 2016438641)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 526457773, 2016438642)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1807195878, 2016438643)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1708117169, 2016440934)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1040971196, 2016440935)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1648897131, 2016425525)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -956415251, 2016441452)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1789512734, 2016441453)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1238188020, 2016426337)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1102877409, 2016426338)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1366380489, 2016426339)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 489051265, 2016426340)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -782142710, 2016426348)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1473080187, 2016426349)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1273138076, 2016426350)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1463969755, 2016426351)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -836874427, 2016426341)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2029453798, 2016426342)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1557160535, 2016426343)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 779628345, 2016426344)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1660902607, 2016426345)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -976488024, 2016426346)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2022901064, 2016426347)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1580312782, 2016443698)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1403328175, 2016443697)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1998701471, 2016441968)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -776558722, 2016441969)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1521300998, 2016441970)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -230516170, 2016441971)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1504824337, 2016437353)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1362602792, 2016441972)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 416479409, 2016442677)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1139456673, 2016442678)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -872726938, 2016441973)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1684554789, 2016441454)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1902728494, 2016441455)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1152693957, 2016425585)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -477003806, 2016489577)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 407380463, 2016489579)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 482365268, 2016489580)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1107233279, 2016489578)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2097948027, 2016489569)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 704577160, 2016489570)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1277301468, 2016489571)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1398812307, 2016441214)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1545774964, 2016441213)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1927237874, 2016441398)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -383550766, 2016441399)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2079587905, 2016441377)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1576124103, 2016441392)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1736150442, 2016441400)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -740057943, 2016441401)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -26767526, 2016441396)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1023698065, 2016441393)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 675343768, 2016441394)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1495163209, 2016441395)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1889638650, 2016441397)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1895853670, 2016441443)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1709774787, 2016441444)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -65147736, 2016441441)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1596614917, 2016441442)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -973344099, 2016485744)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1424978723, 2016485745)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -449553959, 2016441212)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1986655722, 2016441445)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1005096797, 2016441446)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1176249048, 2016424297)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -385830407, 2016424298)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1268051043, 2016424299)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -72455039, 2016424300)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1493423231, 2016424301)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1265495887, 2016424302)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1714749875, 2016424303)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1592764807, 2016424304)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1249386363, 2016437871)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1113894427, 2016437872)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1359546434, 2016437873)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -190083207, 2016437874)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -418412751, 2016437875)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 733586928, 2016437876)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1979103673, 2016437877)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1306046988, 2016437878)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1244082816, 2016437879)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1989576264, 2016441456)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 975468538, 2016441457)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 534642288, 2016425595)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 805094921, 2016443699)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1392587736, 2016426352)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 140889585, 2016426353)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 360606448, 2016426354)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -488269161, 2016426355)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -760591309, 2016426356)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2107952207, 2016441913)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1031233107, 2016425340)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 9865986, 2016441974)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1286116272, 2016442160)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -614714290, 2016437349)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -632794973, 2016441975)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 749240561, 2016425592)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1621111172, 2016443700)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 653284208, 2016426357)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1168393000, 2016426358)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -961717645, 2016426360)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2013918500, 2016426359)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -279786846, 2016426362)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 962534758, 2016426361)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 457601841, 2016441976)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -373783177, 2016441191)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1668317272, 2016437346)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1942775534, 2016441977)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -208314480, 2016438635)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 433734878, 2016438636)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -485858417, 2016438637)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1602925452, 2016438638)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1142728699, 2016442930)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 250926629, 2016442931)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 443690569, 2016437863)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1177425966, 2016425078)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -133800276, 2016443763)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -365703597, 2016443766)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 552379620, 2016443764)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 502085929, 2016443767)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1732673841, 2016443765)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -671199267, 2016443762)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1102216443, 2016443768)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1939805444, 2016443769)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1584123862, 2016425580)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1040539080, 2016426363)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 939736082, 2016426364)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 375052692, 2016426365)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 143121988, 2016426366)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1216191908, 2016436513)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1243461594, 2016436528)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1425040130, 2016436529)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1259732514, 2016436530)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1480996712, 2016436531)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 46637146, 2016436532)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -150959422, 2016443701)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2125178137, 2016442469)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2037973419, 2016443771)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -860716282, 2016425593)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1219025951, 2016441466)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -324624067, 2016442480)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1001390007, 2016442481)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1419053251, 2016442482)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1941588983, 2016442483)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1561696942, 2016442484)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1524771364, 2016442485)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1996068320, 2016437358)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1186909404, 2016437356)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1889316045, 2016437357)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1158130953, 2016442486)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -690321212, 2016437359)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1848600367, 2016437360)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1851225849, 2016437361)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1350063719, 2016437362)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2055707041, 2016437363)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 948996876, 2016424305)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 187252418, 2016424306)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2112274156, 2016424307)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1847965616, 2016424308)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1052511963, 2016424309)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 969795048, 2016424310)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 487339752, 2016424311)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1796495532, 2016424312)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1231032447, 2016424313)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1792293468, 2016424314)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1033333351, 2016424315)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1812635120, 2016424316)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -30191345, 2016437601)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1981448952, 2016437602)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -417841957, 2016437603)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 839973539, 2016425783)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -977145269, 2016441980)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1152024432, 2016442476)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1830144666, 2016441978)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 410786452, 2016424317)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -84847086, 2016424318)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2053468300, 2016424481)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1092227524, 2016424496)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -421447939, 2016424500)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1983747693, 2016424501)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1381880842, 2016424499)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1940356538, 2016424502)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1167789492, 2016424497)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1321264297, 2016424503)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -220594373, 2016424498)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -966929421, 2016424504)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1484311564, 2016424505)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -698956589, 2016424545)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1908744389, 2016424546)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1231702881, 2016424547)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1553862151, 2016424548)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -501674970, 2016424549)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 114561822, 2016424550)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1678653842, 2016424551)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1913185148, 2016424553)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1364977993, 2016424552)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 508550463, 2016424554)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 741723025, 2016424555)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1325572034, 2016424556)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1391719459, 2016424557)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -178373197, 2016424558)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1621122517, 2016424559)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2075569859, 2016424560)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1312073003, 2016424561)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1666566298, 2016424562)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -991699355, 2016424564)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1737349572, 2016424565)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1926957953, 2016424563)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -67138849, 2016424566)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1880057430, 2016425320)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -379372676, 2016425318)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -193945992, 2016425316)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -816421980, 2016425317)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 999381895, 2016425319)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 14541623, 2016425590)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 474835747, 2016425526)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1388126143, 2016443497)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1003954541, 2016443498)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1963865026, 2016443499)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1457298232, 2016443500)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -169609546, 2016439406)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1502853664, 2016439407)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 372015404, 2016439408)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1132930504, 2016439409)
endfunction

function populateUidRegistry2 takes nothing returns nothing
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -433568684, 2016442988)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1049974063, 2016439413)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1125705155, 2016439414)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1153469211, 2016439415)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1312682454, 2016439416)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1867485244, 2016439417)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -973249484, 2016439418)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1272818378, 2016439419)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1934111978, 2016439420)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -267133400, 2016439421)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1787740469, 2016439396)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2049950494, 2016439405)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1269394004, 2016439397)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 515602830, 2016439398)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 665209711, 2016439399)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1260205039, 2016439400)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -635367617, 2016439401)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1750570315, 2016439402)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 299790660, 2016439403)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1135424597, 2016439404)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -858268515, 2016442989)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -523923096, 2016440945)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -298436773, 2016440950)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1066007836, 2016440951)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -350800059, 2016440952)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -128461110, 2016441910)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1634599354, 2016441911)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 76256100, 2016441912)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -69309900, 2016439422)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1387141511, 2016439585)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1638467972, 2016439600)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 106601146, 2016439601)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 577316228, 2016439602)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1660581695, 2016439603)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1685510577, 2016439604)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 174929168, 2016439605)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -517356949, 2016439410)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -445241286, 2016439411)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 529339456, 2016439412)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -459614633, 2016439606)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1150925713, 2016439654)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -21741050, 2016439607)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 116186735, 2016439608)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1617377088, 2016439609)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 485696902, 2016439649)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1311149490, 2016439650)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 530017202, 2016439651)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1731168068, 2016439652)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2019053409, 2016439653)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1096602090, 2016442994)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -532419005, 2016441979)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -192930858, 2016440425)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -139605163, 2016440430)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1372259028, 2016440437)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1476141849, 2016440426)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -505069020, 2016440438)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1894258909, 2016440427)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -601423307, 2016440431)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -817387809, 2016440439)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1558629321, 2016440428)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1597409961, 2016440440)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1609867391, 2016440421)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 86946306, 2016440429)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1672973022, 2016440433)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1537660027, 2016440422)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1143510768, 2016440434)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 713619131, 2016440423)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1058849569, 2016440432)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -518255689, 2016440435)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -613128800, 2016440424)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1828769849, 2016440436)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -416468996, 2016442425)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1473507520, 2016443493)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1371127610, 2016443494)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2030874309, 2016443495)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1310886500, 2016443496)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -207715433, 2016489588)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -676643204, 2016489589)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1986169219, 2016443501)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1870406272, 2016443502)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -537543588, 2016443503)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1404424504, 2016443504)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 442533256, 2016489586)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 662959428, 2016489587)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -930636901, 2016443261)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1081129295, 2016441458)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1493205122, 2016441459)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1366976082, 2016443447)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 439479458, 2016437604)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2022343051, 2016437605)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1786901845, 2016425520)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2030567100, 2016441192)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -878559926, 2016437348)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1082134302, 2016442748)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -107246967, 2016425776)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -259718726, 2016489582)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -937675821, 2016489583)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -529622674, 2016443238)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 391273054, 2016443239)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -125411896, 2016441138)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 482324560, 2016442995)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1740602100, 2016441142)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1720355830, 2016425528)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1178777623, 2016443253)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1166236588, 2016443254)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 334243746, 2016443259)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1685383527, 2016489584)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1233073434, 2016442725)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 342574992, 2016438320)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1817873420, 2016438321)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1526213000, 2016438322)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1726753819, 2016438323)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1003227673, 2016425523)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1387422920, 2016440695)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 6304714, 2016440696)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1902068640, 2016439655)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1330987334, 2016439664)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1512411779, 2016439656)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1121131374, 2016439657)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 946029480, 2016439658)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -95795797, 2016439659)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1643813730, 2016439660)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -137873402, 2016439661)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -847318583, 2016439662)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1457620705, 2016439663)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1231178014, 2016439665)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -536873621, 2016439666)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -195919374, 2016439667)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1966929064, 2016439668)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1285877010, 2016439669)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -490228383, 2016439670)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -38036089, 2016440633)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 858347691, 2016440445)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -558832622, 2016440629)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -435968589, 2016440446)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 528858409, 2016440630)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -68262821, 2016440609)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 727107151, 2016440631)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1413167086, 2016440624)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1234778846, 2016440632)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -291242772, 2016440673)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -426395695, 2016440674)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 891228554, 2016440441)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 739798319, 2016440625)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1932278299, 2016440442)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1194362179, 2016440626)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 296709903, 2016440443)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1064988608, 2016440627)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -81411732, 2016440444)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1995246053, 2016440628)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1407919500, 2016425780)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 154433219, 2016425079)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 340945101, 2016443192)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1514105327, 2016443193)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 59333275, 2016443772)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1333981119, 2016437886)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 257055634, 2016438049)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 88401204, 2016438064)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1855512008, 2016443191)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1797866576, 2016441981)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1152048920, 2016425570)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 494461420, 2016425529)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -917629498, 2016441982)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -873797839, 2016442145)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -59466286, 2016436580)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 209219307, 2016436581)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1398845380, 2016436582)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 456194149, 2016436583)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1671741258, 2016436584)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 936761978, 2016436585)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1840506430, 2016436586)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1030055651, 2016436785)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2135680231, 2016436587)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2112579876, 2016436588)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1846607026, 2016436589)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1646108764, 2016436590)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1317968978, 2016436591)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1724497480, 2016436592)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 788622583, 2016436593)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1908689291, 2016436594)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -290204309, 2016436595)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1539826131, 2016436596)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 385269976, 2016436597)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 840379378, 2016436598)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1950794701, 2016436599)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2092973715, 2016436600)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -471236491, 2016436601)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1153320488, 2016436784)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -293236939, 2016436787)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1885949141, 2016436786)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1911476499, 2016436602)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 632657420, 2016436603)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1510078424, 2016436604)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1838455916, 2016436606)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 849498155, 2016436769)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -129867541, 2016436605)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2093883515, 2016443703)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1404933865, 2016443704)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1531022240, 2016443705)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2019624190, 2016442932)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1713853382, 2016442933)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -13579880, 2016489526)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1999294474, 2016424567)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1826636767, 2016436838)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1116301608, 2016436789)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 156060672, 2016436790)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1956265063, 2016436791)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -307331002, 2016436792)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1265931083, 2016436793)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1558816416, 2016436833)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1166277971, 2016436834)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -140323914, 2016436835)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2133796211, 2016425313)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1280952109, 2016436836)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1839728754, 2016436837)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1308185995, 2016436788)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 769857876, 2016436839)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1130151007, 2016436840)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1017621495, 2016436841)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1936176639, 2016436842)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 982106017, 2016425314)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 45930854, 2016425315)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -591849740, 2016443745)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -70541119, 2016443746)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1857305823, 2016443702)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1755542548, 2016436533)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1839066114, 2016436534)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1878613874, 2016436536)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -448306025, 2016436535)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -795111796, 2016436537)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2018243973, 2016436577)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1349074550, 2016436578)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -530126890, 2016436579)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 440711979, 2016441460)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1601629225, 2016441461)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1911393885, 2016425569)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1621624749, 2016425827)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 826500156, 2016443755)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1603031014, 2016443756)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 651509929, 2016437108)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 18637200, 2016437109)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 471415062, 2016437118)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 218063060, 2016437281)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1030858120, 2016437110)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1925394320, 2016437111)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 389357775, 2016437113)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -475382141, 2016437112)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2004481761, 2016437114)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1416623917, 2016437115)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1318969186, 2016437116)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1664305669, 2016437117)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1354481792, 2016437296)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2014885787, 2016443953)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2135547518, 2016443952)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1280988353, 2016444001)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -521163589, 2016443955)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1342760766, 2016443956)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -790038059, 2016443954)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 715032827, 2016443961)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1399173556, 2016443960)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -287433221, 2016443774)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -964658685, 2016443937)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 978354709, 2016443957)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1870230488, 2016443958)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1111740283, 2016443959)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1353905052, 2016425080)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -498969179, 2016425081)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1314363614, 2016424568)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 239818103, 2016424569)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -558723550, 2016424570)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1295902830, 2016424571)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -41077743, 2016425573)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1573420630, 2016442161)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1079036556, 2016425581)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1065543890, 2016425785)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1239542194, 2016425329)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1874729889, 2016425330)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2046057116, 2016425328)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 582518938, 2016425326)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1434077770, 2016425327)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1901319388, 2016437354)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 533782526, 2016437628)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -893526915, 2016437813)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -329533004, 2016437629)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1857242457, 2016437630)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 858729833, 2016437793)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1074890255, 2016437808)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 285745027, 2016437809)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1585016507, 2016437810)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1892936178, 2016437811)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -834566040, 2016437812)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -264888027, 2016441725)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -728846442, 2016441726)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1400911562, 2016439676)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 492063048, 2016439861)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2071728623, 2016439677)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1095684492, 2016439678)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2107830929, 2016439841)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1263272076, 2016439856)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 838411388, 2016439857)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1429498333, 2016439858)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -587465309, 2016439859)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -260139290, 2016439860)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1228644317, 2016440699)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -286224646, 2016440700)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1204657716, 2016439671)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1227966420, 2016439672)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1859607987, 2016440957)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1024094789, 2016437867)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1020872128, 2016440958)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1563624007, 2016437868)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -538177539, 2016437869)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -397061099, 2016437870)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1306176782, 2016439862)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -674187137, 2016439910)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -401250050, 2016439863)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1160423912, 2016439864)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 583014608, 2016439865)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -63248537, 2016439905)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2064688506, 2016439906)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1058083342, 2016439907)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1114060353, 2016439908)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -934456960, 2016439909)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 40907154, 2016439673)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1401216109, 2016439674)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 907026114, 2016439675)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1307431917, 2016438396)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -217032885, 2016438397)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1613934898, 2016438398)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1519931487, 2016438561)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -414659014, 2016438576)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 267336717, 2016438577)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1054086384, 2016438578)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -32141461, 2016439911)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 67773043, 2016439912)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -716621196, 2016439913)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1390864139, 2016439914)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1710586539, 2016439915)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 642649252, 2016439916)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1752366962, 2016439917)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 919171056, 2016439918)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1139443792, 2016440953)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1159930897, 2016440954)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 491959998, 2016440955)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -686108945, 2016442936)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -510119178, 2016442937)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -691521663, 2016442977)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1962235945, 2016442978)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -313164618, 2016442979)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1370719238, 2016489576)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1910762261, 2016425583)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -23086978, 2016424572)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2123906245, 2016424573)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -12119185, 2016424574)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1699499416, 2016425325)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1631819790, 2016424752)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1686946094, 2016425323)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1795656592, 2016424753)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 341087865, 2016424754)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2133924056, 2016425324)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1014497963, 2016425322)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1577323370, 2016424737)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1331354321, 2016424755)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1504007680, 2016424756)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1067686976, 2016424757)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1962768234, 2016424758)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -376564253, 2016442993)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1585919790, 2016439919)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 138700842, 2016439920)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 861640023, 2016439921)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1546155770, 2016439922)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1540702670, 2016439923)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2049601082, 2016439924)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1125375075, 2016439925)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2131160862, 2016439926)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1197661254, 2016439927)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 774613607, 2016439928)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1540829049, 2016438583)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -297354994, 2016438584)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2078498990, 2016438585)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1203983500, 2016438625)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1699914602, 2016438626)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1132362637, 2016438627)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 885442313, 2016438628)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1205712965, 2016438629)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -338022498, 2016439929)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1773262319, 2016440114)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1583070714, 2016439930)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1380414730, 2016439931)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1873052394, 2016439932)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 424580959, 2016439933)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1031328814, 2016439934)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1606228099, 2016440097)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -36216267, 2016440112)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 484669956, 2016440113)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -542045205, 2016440164)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -199920913, 2016440165)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 294279663, 2016440166)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 16972452, 2016440167)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 459234699, 2016440168)
endfunction

function populateUidRegistry3 takes nothing returns nothing
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 472108905, 2016440169)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2051644079, 2016440115)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 146246450, 2016440163)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -537713811, 2016440116)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 127510610, 2016440117)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -116059671, 2016440118)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1279152251, 2016440119)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -408803092, 2016440120)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 105889698, 2016440121)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -404049785, 2016440161)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1463723166, 2016440162)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1145368086, 2016442727)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1228572265, 2016437864)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2107570525, 2016437865)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 306582587, 2016437866)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 393249455, 2016442237)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1393031753, 2016442236)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2122952562, 2016441708)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 838776794, 2016485753)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2139922848, 2016485752)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1147906428, 2016485754)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1753504051, 2016425586)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 698269220, 2016442162)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1674721205, 2016425584)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 633480165, 2016440930)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -147891440, 2016424759)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1852061790, 2016424760)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1509407145, 2016424761)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 53542679, 2016437107)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2167170, 2016425582)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -187749609, 2016442673)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1447202034, 2016442674)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 522854779, 2016442675)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 671222512, 2016442676)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1514736139, 2016442723)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 667432385, 2016442470)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 421609239, 2016425575)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1687262333, 2016437618)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1689349759, 2016437619)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 259170161, 2016437620)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 459023388, 2016437621)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -882068756, 2016442421)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1337138035, 2016442422)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1179675561, 2016440170)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -215181097, 2016440171)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -480515939, 2016440172)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -207661784, 2016440173)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 757745544, 2016440174)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -769153529, 2016440175)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2091441794, 2016439151)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1195523736, 2016439152)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1758657093, 2016439153)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1395283983, 2016439154)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1872625112, 2016439155)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1080566677, 2016439156)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1706887039, 2016425082)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2021433587, 2016444002)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1535252384, 2016444003)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 227899891, 2016425083)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 919647132, 2016444004)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -946040073, 2016444005)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -103878016, 2016444006)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -431531542, 2016444007)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 714498066, 2016444022)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1139257103, 2016485665)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2076602464, 2016444012)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -125488063, 2016444008)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -429680256, 2016444009)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1596508261, 2016425085)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1575156944, 2016444013)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 411968843, 2016444014)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2140453661, 2016444015)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 508248389, 2016425086)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 954335894, 2016444016)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -618180912, 2016444017)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1005218500, 2016444018)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -626314451, 2016444019)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1695643392, 2016444020)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -760704574, 2016425249)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1763183837, 2016444021)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 158807777, 2016425264)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 178343180, 2016444023)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1404284874, 2016444024)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1621080205, 2016444025)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 712574190, 2016444026)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -173758994, 2016425265)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1516809541, 2016444027)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2015847895, 2016444028)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1166307677, 2016444029)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -164804113, 2016444030)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -335065433, 2016425266)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1942774367, 2016485680)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1586622106, 2016485681)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1419459291, 2016485682)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1044115097, 2016485683)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1819616310, 2016425084)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1915513444, 2016444010)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -62301443, 2016444011)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 206130248, 2016442416)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 75197447, 2016442417)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1161192478, 2016440931)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -519523846, 2016440932)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1773023968, 2016441121)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1816658754, 2016441136)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -492856275, 2016443770)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1086518220, 2016437880)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -494178645, 2016437881)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1040600248, 2016437882)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1633429120, 2016437883)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1948561707, 2016437884)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1894387893, 2016437885)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1253545006, 2016438378)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -296420898, 2016438379)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 865864975, 2016438380)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1992692035, 2016438381)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1495809483, 2016438382)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1360263343, 2016438383)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1804321158, 2016436843)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1817437933, 2016436844)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -236067158, 2016436845)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 956361324, 2016436846)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 857011763, 2016443747)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -446079588, 2016442163)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1815120091, 2016425598)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 846224809, 2016425778)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1508283132, 2016437559)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 164730553, 2016437560)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1079751809, 2016437561)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1605176587, 2016425589)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -293132914, 2016442230)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 771436712, 2016442231)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1602677367, 2016442232)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1048430434, 2016442233)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1361058156, 2016442234)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1812062180, 2016441139)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1807688693, 2016489573)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1290655547, 2016442741)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -83337451, 2016442742)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1576655956, 2016442743)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 62651680, 2016442737)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -665443839, 2016442738)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1499183008, 2016442739)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1690717703, 2016442740)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1319839306, 2016442166)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1693514713, 2016442214)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2053935738, 2016442167)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 557147359, 2016442168)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -595625773, 2016442169)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 441075141, 2016442209)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1954723836, 2016442210)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 532279615, 2016442211)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 362921833, 2016442212)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1150754945, 2016442213)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1770359765, 2016443234)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 59016463, 2016425337)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -726544625, 2016425338)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 174604129, 2016440697)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -572823105, 2016440698)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1032871208, 2016438384)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2112982521, 2016438385)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -639355923, 2016438386)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1091965588, 2016442471)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 877841410, 2016442472)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1915767256, 2016489527)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -354449489, 2016437606)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1693024304, 2016425574)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -902490943, 2016437857)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2000637582, 2016437858)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 942375642, 2016437622)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -197895478, 2016437623)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -557328045, 2016437624)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 585390895, 2016437625)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -799912295, 2016437626)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1040019537, 2016437627)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1570379080, 2016437814)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 532776879, 2016437815)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1736925628, 2016437816)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 865396109, 2016437817)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -870434547, 2016425591)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1079221663, 2016442681)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -380120943, 2016442721)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1155139366, 2016442722)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1993621676, 2016443446)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 209810174, 2016425829)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 201312931, 2016425830)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 864058174, 2016425831)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 982325246, 2016425571)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1255846381, 2016441145)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -315449127, 2016441185)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 456776714, 2016442980)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -399313208, 2016442981)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1580072342, 2016442982)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 706574987, 2016442983)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1654948756, 2016425828)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1792355054, 2016441186)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1023641942, 2016441187)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 73588731, 2016441188)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1099532674, 2016441189)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -17982002, 2016485737)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1860238347, 2016485738)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -950608692, 2016485739)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 464040367, 2016485740)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -132979944, 2016425522)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -350139602, 2016485741)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -518699928, 2016485742)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1872825564, 2016425270)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -348990982, 2016425271)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1069557107, 2016425272)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1039670962, 2016425521)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 653216036, 2016436847)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1070189333, 2016436848)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1539009464, 2016436849)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 434735437, 2016436850)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1314741338, 2016443748)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1561938643, 2016489572)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1074703235, 2016442728)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1898379844, 2016442734)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1987792630, 2016443444)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -759725875, 2016443445)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 742398448, 2016441648)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1441760809, 2016441649)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1003692716, 2016441650)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1455083110, 2016442729)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1186225980, 2016442735)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1724195154, 2016442730)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1061097977, 2016438329)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1991481559, 2016438369)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -881202359, 2016438370)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1278752290, 2016438371)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -574644518, 2016438372)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 996760603, 2016438373)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 679883092, 2016438374)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 224816646, 2016438375)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -581010869, 2016441905)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 236008701, 2016441906)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1533484960, 2016441907)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 106684708, 2016441908)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 918324881, 2016441909)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -139529509, 2016440188)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -464258498, 2016440373)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1778617109, 2016440189)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1263057593, 2016440190)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -663562830, 2016440353)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 344767437, 2016440368)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -233338259, 2016440369)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 724606320, 2016440370)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1458666430, 2016440371)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1743140252, 2016440372)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 619517971, 2016440180)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1263495353, 2016440181)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1112754130, 2016440182)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 282985572, 2016440183)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1387048827, 2016440184)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -926113653, 2016440185)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1465196830, 2016440186)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 16135250, 2016440187)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -440864791, 2016442731)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 726842528, 2016442732)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1274722844, 2016442733)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -522041681, 2016438119)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 231545505, 2016438120)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1230346973, 2016438121)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1075497397, 2016438122)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -603492474, 2016438123)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 252199361, 2016438124)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 996293520, 2016440374)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1353099860, 2016440375)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1427983691, 2016440376)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 965781926, 2016440377)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 755668711, 2016440417)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1267844393, 2016440418)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1870141690, 2016440419)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -935091187, 2016440420)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 354929523, 2016442736)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 824612289, 2016440176)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2050244233, 2016440177)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -83536739, 2016440178)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1468282168, 2016440179)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1524748298, 2016442991)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1855373514, 2016442992)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -368068735, 2016443245)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -350961639, 2016443246)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -846055539, 2016440678)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2089304634, 2016440684)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -813130704, 2016440691)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1293555079, 2016440677)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -558016153, 2016440692)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -870502301, 2016440679)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1533556661, 2016440685)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1044784770, 2016440693)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 534744964, 2016440680)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1307581001, 2016440694)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -241923148, 2016440675)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1702737420, 2016440683)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1858050197, 2016440687)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2112129523, 2016440676)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 88606524, 2016440688)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1000316867, 2016440681)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1209440906, 2016440686)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1244817199, 2016440689)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1526937614, 2016440682)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1491733963, 2016440690)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1383416585, 2016438394)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -400618168, 2016438395)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 933131007, 2016441202)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1829600326, 2016442929)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1755958805, 2016442996)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1337549496, 2016442997)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1894165912, 2016441462)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1219098015, 2016441463)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 665653486, 2016443003)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -503720528, 2016443004)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 32278963, 2016443005)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1024979206, 2016443006)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 876593649, 2016443169)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1210121903, 2016442164)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1155485807, 2016442475)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -602114155, 2016441464)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2101349095, 2016441465)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2042500253, 2016485746)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1134924682, 2016485747)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 570220351, 2016441200)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1924764974, 2016442990)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 37658198, 2016443440)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1945159408, 2016489574)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 767224155, 2016442750)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1620415727, 2016443256)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1107490515, 2016443257)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 794559746, 2016443258)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 652980534, 2016441964)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1325922711, 2016441965)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1404564292, 2016441966)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1157567443, 2016441967)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1104545762, 2016437347)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 457778156, 2016441467)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1977783487, 2016441468)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1920128376, 2016441469)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2049191861, 2016441470)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -196900094, 2016441633)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1654357498, 2016424801)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -297658608, 2016424806)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 938278026, 2016424802)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -474331232, 2016424803)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 198758386, 2016424804)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1496338188, 2016424805)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1931744509, 2016424807)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1229626828, 2016424808)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -662444971, 2016442473)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1037532895, 2016443242)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2017618316, 2016425784)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1737631095, 2016443240)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -620863423, 2016443241)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1453166014, 2016436851)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 451724241, 2016436852)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -158251861, 2016436854)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -458528707, 2016436855)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -846973126, 2016436853)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 291196494, 2016436856)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -908018064, 2016436857)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1700025831, 2016436858)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1024521333, 2016436859)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -537268568, 2016436861)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -953393745, 2016436860)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -784216084, 2016436862)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -869167663, 2016437025)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1667875094, 2016437040)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -710794479, 2016437041)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 204302793, 2016437042)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1253620374, 2016437043)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1720284615, 2016437044)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 506770975, 2016437045)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -693843834, 2016437046)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1978683975, 2016437047)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2021683654, 2016437048)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -853720571, 2016437049)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 417999325, 2016437089)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 964085179, 2016437090)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1336594435, 2016437091)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1147746123, 2016437092)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1385656455, 2016437093)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -632327799, 2016437094)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 563627829, 2016437095)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -694192629, 2016437096)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1087062397, 2016437097)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1020809536, 2016437098)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 134426836, 2016437099)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1082085545, 2016437100)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1743653419, 2016443749)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1881647653, 2016443750)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -428279962, 2016443751)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 220243927, 2016443752)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1833791347, 2016442477)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -938583519, 2016442478)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 218094077, 2016425588)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -592992578, 2016425777)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1648602431, 2016443511)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 919603024, 2016424809)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1189021037, 2016424810)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1337893092, 2016424812)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1541311017, 2016424811)
endfunction

function populateUidRegistry4 takes nothing returns nothing
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1043137312, 2016424813)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -728402104, 2016424814)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 657503297, 2016424817)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 287347676, 2016424818)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1499293759, 2016424819)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 113104395, 2016424820)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1153215253, 2016424815)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -833165823, 2016424816)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2093183418, 2016424823)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1277468425, 2016424822)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 106619639, 2016424821)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 795754436, 2016425333)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 400298471, 2016425334)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1336059235, 2016425332)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 961130020, 2016425331)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -266781665, 2016425335)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -467056618, 2016489575)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1381896942, 2016439150)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1442435684, 2016441137)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -120465101, 2016439097)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1314613648, 2016439145)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 528022914, 2016439137)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 608860282, 2016439138)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -311433656, 2016439139)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1988546783, 2016439140)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 747039721, 2016439141)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1815425829, 2016439142)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 439273187, 2016439143)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 946417333, 2016439144)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1658415084, 2016439146)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1987223737, 2016439147)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1542308776, 2016439148)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 214011871, 2016439149)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1449051174, 2016425336)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 77071279, 2016437101)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1826790861, 2016437102)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -392171451, 2016437103)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -664095833, 2016437104)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1903315721, 2016437105)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1286827232, 2016437106)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -119021895, 2016443753)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -848238214, 2016441657)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1482707981, 2016441697)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 986645252, 2016441698)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1174210647, 2016443255)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -999468169, 2016425321)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1006533028, 2016438579)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1958416643, 2016438580)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1752111649, 2016438581)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 383205359, 2016438582)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -772575399, 2016424824)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1692730337, 2016424825)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1403283898, 2016424827)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 35249367, 2016424828)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 47373039, 2016424829)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2010632191, 2016424830)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -366983158, 2016424993)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -838008433, 2016425013)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1330437999, 2016425008)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1605734040, 2016424826)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1261829545, 2016425011)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1447245242, 2016425009)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1465786976, 2016425012)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 38657399, 2016425010)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -277721965, 2016425781)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1363634579, 2016485735)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -180018777, 2016485732)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 355747749, 2016425267)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1937669629, 2016485684)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1173201870, 2016485686)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -754931580, 2016485685)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1789028407, 2016425268)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -759892356, 2016485687)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1742275054, 2016485689)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1268322096, 2016485688)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1619878632, 2016425269)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -398544355, 2016485729)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -671137146, 2016485731)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1872127977, 2016485730)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 99251674, 2016485736)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -593293484, 2016425273)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 568494490, 2016489521)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 309691552, 2016425339)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -677984211, 2016489522)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1873569544, 2016489524)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1119755280, 2016489525)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1664256853, 2016489523)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2138378360, 2016489520)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -827903843, 2016443754)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -392560169, 2016442465)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -497886339, 2016442165)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -2000655762, 2016443250)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1300680806, 2016441193)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1188861918, 2016425597)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1009515685, 2016442229)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 290722898, 2016441143)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1895273648, 2016442235)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1235681961, 2016442488)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 897629961, 2016442489)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1721482704, 2016437364)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1828671362, 2016437365)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -822849659, 2016442479)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1043095312, 2016437355)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1747665095, 2016425761)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1160493914, 2016441194)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 2012431463, 2016437345)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1713251785, 2016425527)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, 1676869428, 2016438630)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1055949125, 2016442913)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -1674820146, 2016442928)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -517831511, 2016441195)
	call SaveInteger(CodegenUtils_REGISTRIES, 0, -176029535, 2016441196)
endfunction

function populateUidReverseRegistry0 takes nothing returns nothing
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443186, "altar")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016423988, "an-lynx")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016423986, "an-nelfcat")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016423985, "an-panther")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016423989, "an-raven")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016423987, "an-taurcat")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016423990, "an-tiger")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425837, "arabarch")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425838, "arabbar")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443512, "arabbld1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443513, "arabbld2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426017, "arabcan")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425839, "arabdock")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425840, "arabfarm")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443514, "arabfort")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425853, "arabgate")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425854, "arabgateh")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425841, "arabgran")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425842, "arabhou")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425832, "arabinn")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425843, "arabmark")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425848, "arabmill")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425850, "arabmosq")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425835, "arabpal")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425844, "arabsmi")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425845, "arabstab")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425846, "arabston")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425847, "arabstor")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426032, "arabtow")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425836, "arabtownhall")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425833, "arabuni")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425852, "arabwall")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425851, "arabwallv")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425849, "arabwcamp")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425834, "arabwork")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425572, "arachnathids")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441953, "arcaneobserv")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425076, "arch")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443187, "archery")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443251, "armorrack")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443757, "artarch")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437297, "artarchcity")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437298, "artarchcityruined1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437299, "artarchcityruined2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437300, "artarchdungeon")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437302, "artarchsunken1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437303, "artarchsunken2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437304, "artarchsunken3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437305, "artarchsunkenruined")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437301, "artarchunder")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441144, "asharastatue")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438644, "ashenblocks")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441723, "ashenbrokencolumn1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441724, "ashenbrokencolumn2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440942, "ashenbrokenobelisk1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440943, "ashenbrokenobelisk2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438631, "ashenbush")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438377, "ashencattail")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438325, "ashenlily1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438326, "ashenlily2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438327, "ashenlily3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438328, "ashenlily4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438140, "ashenlog")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440944, "ashenobilisk")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438645, "ashenrock1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438654, "ashenrock10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438646, "ashenrock2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438647, "ashenrock3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438648, "ashenrock4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438649, "ashenrock5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438650, "ashenrock6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438651, "ashenrock7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438652, "ashenrock8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438653, "ashenrock9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438817, "ashenrubble1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438832, "ashenrubble2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438833, "ashenrubble3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438072, "ashenshroom1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438073, "ashenshroom2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438113, "ashenshroom3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438114, "ashenshroom4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438139, "ashenstump")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425779, "bandits")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443507, "bannerhuman1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443508, "bannerhuman2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443505, "bannerlong1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443506, "bannerlong2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443509, "bannerorc1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443510, "bannerorc2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425782, "banshee")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441190, "barn")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437351, "barnburn")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440936, "barreddungwall1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440937, "barreddungwall2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440938, "barreddungwall3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440939, "barredundwall1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440940, "barredundwall2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440941, "barredundwall3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443001, "barrel1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443002, "barrel2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438834, "barrensarch1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438835, "barrensarch2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438836, "barrensarch3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437608, "barrensbones1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437617, "barrensbones10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437609, "barrensbones2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437610, "barrensbones3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437611, "barrensbones4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437612, "barrensbones5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437613, "barrensbones6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437614, "barrensbones7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437615, "barrensbones8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437616, "barrensbones9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438886, "barrenschunk1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438887, "barrenschunk2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438839, "barrenscrater1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438840, "barrenscrater2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438837, "barrensfissure1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438838, "barrensfissure2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438841, "barrensgeyser1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438881, "barrensgeyser2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438882, "barrensgeyser3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438883, "barrenspillar1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438884, "barrenspillar2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438885, "barrenspillar3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438888, "barrensrocks1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438897, "barrensrocks10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438889, "barrensrocks2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438890, "barrensrocks3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438891, "barrensrocks4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438892, "barrensrocks5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438893, "barrensrocks6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438894, "barrensrocks7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438895, "barrensrocks8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438896, "barrensrocks9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438898, "barrensspires1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438899, "barrensspires2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438900, "barrensspires3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438901, "barrensspires4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438902, "barrensspires5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438903, "barrensspires6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438904, "barrensspires7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438905, "barrensspires8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443247, "barricade 1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443248, "barricade 2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443249, "barricade 3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441954, "barrowsden")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438138, "bats")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442238, "battleship")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442401, "battleshipbroken")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443773, "bcrunes")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016423991, "be-agent")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016423992, "be-apprentice")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016423993, "be-archunt")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424033, "be-bladehound")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424035, "be-champion")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424036, "be-conjurer")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424037, "be-flieutenant")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424038, "be-general")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424039, "be-juggernaut")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424034, "be-mistress")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424040, "be-mystic")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424041, "be-paladin")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424042, "be-pharcher")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424043, "be-phcrusader")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424044, "be-phguard")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424045, "be-priestess")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424046, "be-prince")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424047, "be-royhunt")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425587, "bears")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442986, "bench")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442999, "bigbookshelf")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443000, "biggerbookshelf")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438136, "bird")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425577, "black-dragons")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438065, "blackcitadelrune1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438066, "blackcitadelrune2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438067, "blackcitadelrune3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438068, "blackcitadelrune4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438069, "blackcitadelrune5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438070, "blackcitadelrune6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438071, "blackcitadelrune7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441140, "blackcitadelstatue")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425014, "bld-custom-1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425015, "bld-custom-2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425578, "blue-dragons")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442490, "bluecracks1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442491, "bluecracks2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442492, "bluecracks3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442493, "bluecracks4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442724, "blueflame")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438125, "blueshroom")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442474, "bobsign")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441955, "bookofsummon")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442998, "bookshelf")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443260, "brazier1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443262, "brazier2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443425, "brazier3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440881, "bridgecitylarge")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440702, "bridgecitysmall1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440882, "bridgecitysmall2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440880, "bridgecityxlarge")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440701, "bridgedestroyed")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440883, "bridgeforce")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440884, "bridgeice")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438305, "bridgelog")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440865, "bridgelordaeron")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441956, "bridgeobelisk")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440886, "bridgerocklarge")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440887, "bridgerocksmall")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440885, "bridgerockxlarge")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485733, "bridges1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485734, "bridges2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440888, "bridgetree")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440929, "bridgewoodlarge")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440889, "bridgewoodxlarge")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425077, "broken")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443758, "broken1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443759, "broken2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443761, "brokencity")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443760, "brokendalaran")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425579, "bronze-dragons")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442424, "bubblegeyser")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442423, "bubblesteamgeyser")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485748, "buildings1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485749, "buildings2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485750, "buildings3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485751, "buildings4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425016, "c-animals")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425017, "c-bloodelf1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425057, "c-bloodelf2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425058, "c-dwarves1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425059, "c-dwarves2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425060, "c-edgy")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425061, "c-faceless")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425062, "c-goblins")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425063, "c-highelf1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425064, "c-human1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425065, "c-human2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425066, "c-human3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425067, "c-misc")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425068, "c-nightelf")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425069, "c-orc")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425070, "c-rats")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425071, "c-troll")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425072, "c-undead1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425073, "c-undead2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425074, "c-villager1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425075, "c-villager2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438126, "cactus1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438135, "cactus10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438127, "cactus2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438128, "cactus3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438129, "cactus4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438130, "cactus5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438131, "cactus6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438132, "cactus7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438133, "cactus8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438134, "cactus9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442749, "cage")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485755, "campaign1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485756, "campaign2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485757, "campaign3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485758, "campaign4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489505, "campaign5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441198, "cathedral")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437352, "cathedralburn")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437607, "cauldronwithheads")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426033, "celt1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426034, "celt2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426035, "celt3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426036, "celt4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426037, "celt5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426038, "celt6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443515, "celtbld")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425594, "centaurs")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441447, "centaurtent1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441448, "centaurtent2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442744, "chain1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442745, "chain2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442746, "chain3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442747, "chainpost")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442987, "chair")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441957, "circleofpower")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441651, "citybuilding1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441652, "citybuilding2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441653, "citybuilding3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441654, "citybuilding4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441655, "citybuilding5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441656, "citybuilding6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438632, "citybush")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441718, "citycolumncircle")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441720, "citycolumncircleruin")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441717, "citycolumndouble")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441719, "citycolumnsingle")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441721, "citycolumnsingle1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441722, "citycolumnsingle2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441201, "cityfountain")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437859, "citygrave1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437860, "citygrave2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437861, "citygrave3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437862, "citygrave4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440956, "cityobelisk")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437552, "cityruin1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437553, "cityruin2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437554, "cityruin3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437555, "cityruin4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437556, "cityruin5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437557, "cityruin6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437558, "cityruin7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437374, "cityruinbase1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437537, "cityruinbase2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441141, "citystatue")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442984, "citystonebench")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441199, "citytavern")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485743, "citywall")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441203, "citywall1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441204, "citywall2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441205, "citywall3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441206, "citywall4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441207, "citywallalone")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441210, "citywallcaplantern")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441208, "citywallcaplow")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441209, "citywallcaptall")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441211, "citywallcaptallnolantern")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442985, "citywoodbench")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443448, "clearicerock1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443449, "clearicerock2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443489, "clearicerock3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443490, "clearicerock4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443491, "clearicerock5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443492, "clearicerock6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442215, "corals1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442224, "corals10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442216, "corals2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442217, "corals3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442218, "corals4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442219, "corals5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442220, "corals6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442221, "corals7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442222, "corals8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442223, "corals9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442487, "corn")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443243, "crates1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443244, "crates2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425825, "critters1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425826, "critters2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441197, "crypt")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443252, "crystallamp")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443233, "crystalshield")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426039, "cwall1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426087, "cwall10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426088, "cwall11")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426089, "cwall12")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426090, "cwall13")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426091, "cwall14")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426092, "cwall15")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426040, "cwall2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426041, "cwall3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426081, "cwall4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426082, "cwall5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426083, "cwall6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426084, "cwall7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426085, "cwall8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426086, "cwall9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443516, "cwalls1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443517, "cwalls2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489581, "dalaran")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443188, "dalaranbuilding1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443189, "dalaranbuilding2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443190, "dalaranbuilding3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437366, "dalaranruin1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437367, "dalaranruin2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437368, "dalaranruin3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437369, "dalaranruin4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437370, "dalaranruin5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437371, "dalaranruin6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437372, "dalaranruin7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437373, "dalaranruin8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425524, "dark-trolls")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441958, "darkportal")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442679, "demonfootprint1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442680, "demonfootprint2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425342, "demons")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426096, "dng01")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426097, "dng02")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426093, "dng03")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426098, "dng04")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426094, "dng05")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426095, "dng06")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426099, "dng07")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426292, "dng08")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426100, "dng09")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426101, "dng10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426297, "dng11")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426102, "dng12")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426290, "dng13")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426103, "dng14")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426293, "dng15")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426294, "dng16")
endfunction

function populateUidReverseRegistry1 takes nothing returns nothing
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426295, "dng17")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426296, "dng18")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426104, "dng19")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426105, "dng20")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426106, "dng21")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426107, "dng22")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426108, "dng23")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426109, "dng24")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426110, "dng25")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426273, "dng26")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426288, "dng27")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426291, "dng28")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426289, "dng29")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443696, "dnghell")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443518, "dngnorm")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443681, "dngstn")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425596, "draenei")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441449, "draeneihut1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441450, "draeneihut2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441451, "draeneihut3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441959, "dragonroost1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441960, "dragonroost2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441961, "dragonroost3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441962, "dragonroost4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441963, "dragonroost5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425576, "dragonspawn")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439096, "dungeoncrater")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442466, "dungeonlever")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440946, "dungeonobelisk")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438906, "dungeonrock1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439091, "dungeonrock10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438907, "dungeonrock2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438908, "dungeonrock3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438909, "dungeonrock4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438910, "dungeonrock5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439073, "dungeonrock6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439088, "dungeonrock7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439089, "dungeonrock8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439090, "dungeonrock9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439092, "dungeonstalagmite1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439093, "dungeonstalagmite2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439094, "dungeonstalagmite3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439095, "dungeonstalagmite4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424048, "dw-adv")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424049, "dw-archbi")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424050, "dw-archi")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424051, "dw-bandit")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424052, "dw-baronb")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424053, "dw-barond")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424054, "dw-baronh")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424055, "dw-baronw")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424056, "dw-battlepriest")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424057, "dw-courtmage")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424058, "dw-footman")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424059, "dw-geomancer")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424060, "dw-knight")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424061, "dw-militia")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424062, "dw-pea1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424225, "dw-pea2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424240, "dw-pea3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424241, "dw-pea4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424242, "dw-phalanx")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424244, "dw-rifle")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424243, "dw-runebreak")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424247, "dw-stonemason")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424245, "dw-thane")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424246, "dw-warrior")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424248, "ed-bonelord")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424249, "ed-darkarch")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424289, "ed-darksorc")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424290, "ed-flameraven")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424291, "ed-hatelord")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442934, "eggsack1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442935, "eggsack2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442467, "elevatorplatform")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441707, "elvenfarm")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441709, "elvenfishvillagebuilding1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441710, "elvenfishvillagebuilding2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441711, "elvenfishvillagebuilding3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441712, "elvenfishvillagebuilding4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441713, "elvenfishvillagebuilding5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441714, "elvenfishvillagebuildingruin1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441715, "elvenfishvillagebuildingruin2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441716, "elvenfishvillagebuildingruin3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441699, "elvenvillagebuilding1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441700, "elvenvillagebuilding2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441701, "elvenvillagebuilding3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441702, "elvenvillagebuilding4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441703, "elvenvillagebuilding5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441704, "elvenvillagebuilding6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441705, "elvenvillagebuilding7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441706, "elvenvillagebuilding8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443235, "emptycrates1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443236, "emptycrates2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443237, "emptycrates3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442726, "energyfield")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440933, "energywall")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442468, "eyeofsargeras")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425505, "faceless-ones")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489528, "farm1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489529, "farm2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437350, "farmburn")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439157, "felblocks")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441889, "felbrokencolumn1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441904, "felbrokencolumn2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438633, "felbush1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438634, "felbush2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438376, "felcattail")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439158, "felfissure1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439159, "felfissure2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438324, "fellily")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438142, "fellog")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439163, "felrock1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439348, "felrock10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439164, "felrock2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439165, "felrock3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439166, "felrock4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439329, "felrock5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439344, "felrock6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439345, "felrock7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439346, "felrock8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439347, "felrock9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439160, "felrubble1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439161, "felrubble2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439162, "felrubble3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438115, "felshroom1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438116, "felshroom2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438117, "felshroom3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438118, "felshroom4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439349, "felspires1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439350, "felspires2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439351, "felspires3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439352, "felspires4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439353, "felspires5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439393, "felspires6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439394, "felspires7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439395, "felspires8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425341, "felstalkers")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438141, "felstump")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438387, "felthorns1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438388, "felthorns2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438389, "felthorns3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438390, "felthorns4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438391, "felthorns5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438392, "felthorns6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438393, "felthorns7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440948, "felwoodbrokenobelisk1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440947, "felwoodbrokenobelisk2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440949, "felwoodobelisk")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489585, "fire")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442494, "firepillar")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443441, "firepit")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443442, "firepitpig")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443443, "firepittrashed")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442657, "firetrapside")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442672, "firetrapup")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442226, "fish")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442225, "fishdead")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442227, "fishschool")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442228, "fishtropical")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424292, "fl-cultist")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424296, "fl-kid")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424293, "fl-scorp")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424294, "fl-widow")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424295, "fl-worker")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489590, "flags")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438137, "flies")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442418, "floatbox")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442419, "floatpanel")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442420, "floatplank")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443184, "flowerbed")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443185, "flowerpot")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438639, "flowers1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438640, "flowers2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438641, "flowers3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438642, "flowers4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438643, "flowers5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440934, "forcewall")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440935, "forcewalldiag")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425525, "forest-trolls")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441452, "foresttrollhut1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441453, "foresttrollhut2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426337, "fort01")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426338, "fort02")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426339, "fort03")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426340, "fort04")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426348, "fort05")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426349, "fort06")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426350, "fort07")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426351, "fort08")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426341, "fort09")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426342, "fort10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426343, "fort11")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426344, "fort12")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426345, "fort13")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426346, "fort14")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426347, "fort15")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443698, "fortpal")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443697, "fortreg")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441968, "fountain1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441969, "fountain2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441970, "fountain3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441971, "fountain4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437353, "fountainbroken")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441972, "frostmourne")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442677, "frosttrapside")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442678, "frosttrapup")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441973, "fruitstand")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441454, "furbolghut1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441455, "furbolghut2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425585, "furbolgs")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489577, "furniture-chairs")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489579, "furniture-other1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489580, "furniture-other2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489578, "furniture-thrones")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489569, "fx1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489570, "fx2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489571, "fx3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441214, "gatecave")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441213, "gatecity")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441398, "gatedemonic")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441399, "gatedemonicdiag")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441377, "gatedungeon")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441392, "gatedungeondiag")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441400, "gateelf")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441401, "gateelfdiag")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441396, "gateice")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441393, "gateicecrown")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441394, "gateicecrowndiag")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441395, "gateicecrownthrone")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441397, "gateicediag")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441443, "gateiron")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441444, "gateirondiag")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441441, "gatenormal")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441442, "gatenormaldiag")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485744, "gates1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485745, "gates2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441212, "gatesargeras")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441445, "gatesunken")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441446, "gatesunkendiag")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424297, "gb-alchemist")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424298, "gb-engineer")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424299, "gb-female")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424300, "gb-gunslinger")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424301, "gb-merchant")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424302, "gb-miner")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424303, "gb-sorceror1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424304, "gb-sorceror2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437871, "glowingrunes1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437872, "glowingrunes2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437873, "glowingrunes3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437874, "glowingrunes4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437875, "glowingrunes5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437876, "glowingrunes6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437877, "glowingrunes7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437878, "glowingrunes8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437879, "glowingrunes9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441456, "gnollhut1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441457, "gnollhut2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425595, "gnolls")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443699, "gob")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426352, "gob1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426353, "gob2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426354, "gob3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426355, "gob4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426356, "gob5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441913, "goblinlab")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425340, "goblins")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441974, "goblinshipyard")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442160, "goblinshop")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437349, "gobshipyardburn")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441975, "goldmine")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425592, "golems")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443700, "gond")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426357, "gond1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426358, "gond2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426360, "gond3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426359, "gond4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426362, "gond5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426361, "gond6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441976, "grainwarehouse")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441191, "granary")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437346, "granaryburn")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441977, "granaryinfected")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438635, "grasstuft1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438636, "grasstuft2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438637, "grasstuft3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438638, "grasstuft4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442930, "graterect")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442931, "grateround")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437863, "grave")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425078, "graveyard")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443763, "graveyard-bones-barrens")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443766, "graveyard-bones-north")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443764, "graveyard-bones-ribs")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443767, "graveyard-bones-skulls")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443765, "graveyard-bones-stick")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443762, "graveyard-corpses")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443768, "graveyard-graves1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443769, "graveyard-graves2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425580, "green-dragons")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426363, "grk01")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426364, "grk02")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426365, "grk03")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016426366, "grk04")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436513, "grk05")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436528, "grk06")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436529, "grk07")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436530, "grk08")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436531, "grk09")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436532, "grk10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443701, "grkbld")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442469, "grounswitch")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443771, "guldanrunes")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425593, "harpies")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441466, "harpynest")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442480, "hay1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442481, "hay2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442482, "hay3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442483, "hay4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442484, "hay5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442485, "haycart")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437358, "haycartbroken")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437356, "haycartrot")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437357, "haycartrotbroken")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442486, "hayclump")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437359, "hayrot1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437360, "hayrot2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437361, "hayrot3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437362, "hayrot4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437363, "hayrot5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424305, "he-agent")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424306, "he-arcanist")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424307, "he-archer")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424308, "he-conjurer")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424309, "he-elementalist")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424310, "he-enforcer")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424311, "he-flieutenant")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424312, "he-general")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424313, "he-magehuntress")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424314, "he-priestess")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424315, "he-rogue")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424316, "he-spellbreaker")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437601, "headonspear1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437602, "headonspear2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437603, "headonspear3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425783, "heretics")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441980, "highelfbarracks")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442476, "hitchingpost")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441978, "hornofcen")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424317, "hu-archer")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424318, "hu-archmage")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424481, "hu-assassin")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424496, "hu-banditcros")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424500, "hu-bishop")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424501, "hu-delegate")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424499, "hu-fembandit")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424502, "hu-femfoot")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424497, "hu-femlord")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424503, "hu-fempeas")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424498, "hu-femspear")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424504, "hu-grandmage1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424505, "hu-grandmage2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424545, "hu-halberd")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424546, "hu-king")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424547, "hu-lightmist")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424548, "hu-magus1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424549, "hu-magus2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424550, "hu-magus3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424551, "hu-magus4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424553, "hu-mntroyalcapt")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424552, "hu-monk")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424554, "hu-pikeman")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424555, "hu-priestlady")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424556, "hu-protector")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424557, "hu-queen")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424558, "hu-royalcapt")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424559, "hu-spearman")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424560, "hu-tempexemplar")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424561, "hu-tempgath")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424562, "hu-tempjusticar")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424564, "hu-tempplaguedoct")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424565, "hu-temprang")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424563, "hu-tempwarrior")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424566, "hu-wizard")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425320, "human-campaign")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425318, "human-heroes")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425316, "human-melee")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425317, "human-other")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425319, "human-paladins")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425590, "hydras")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425526, "ice-trolls")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443497, "iceberg1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443498, "iceberg2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443499, "iceberg3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443500, "iceberg4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439406, "icecrownblock1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439407, "icecrownblock2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439408, "icecrownblock3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439409, "icecrownblock4")
endfunction

function populateUidReverseRegistry2 takes nothing returns nothing
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442988, "icecrownchair")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439413, "icecrowncrystal1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439414, "icecrowncrystal2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439415, "icecrowncrystal3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439416, "icecrowncrystal4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439417, "icecrowncrystal5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439418, "icecrowncrystal6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439419, "icecrowncrystal7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439420, "icecrowncrystal8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439421, "icecrowncrystal9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439396, "icecrownglacier1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439405, "icecrownglacier10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439397, "icecrownglacier2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439398, "icecrownglacier3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439399, "icecrownglacier4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439400, "icecrownglacier5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439401, "icecrownglacier6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439402, "icecrownglacier7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439403, "icecrownglacier8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439404, "icecrownglacier9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442989, "icecrownicechair")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440945, "icecrownobelisk")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440950, "icecrownobelisk1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440951, "icecrownobelisk2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440952, "icecrownobelisk3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441910, "icecrownpillar1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441911, "icecrownpillar2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441912, "icecrownpillar3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439422, "icecrownrock1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439585, "icecrownrock2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439600, "icecrownrock3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439601, "icecrownrock4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439602, "icecrownrock5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439603, "icecrownrock6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439604, "icecrownrock7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439605, "icecrownrock8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439410, "icecrownrubble1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439411, "icecrownrubble2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439412, "icecrownrubble3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439606, "icecrownsnowrock1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439654, "icecrownsnowrock10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439607, "icecrownsnowrock2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439608, "icecrownsnowrock3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439609, "icecrownsnowrock4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439649, "icecrownsnowrock5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439650, "icecrownsnowrock6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439651, "icecrownsnowrock7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439652, "icecrownsnowrock8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439653, "icecrownsnowrock9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442994, "icecrownthrone")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441979, "icecrowntreasure")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440425, "icecrownwalldiag11")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440430, "icecrownwalldiag12")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440437, "icecrownwalldiag13")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440426, "icecrownwalldiag14")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440438, "icecrownwalldiag15")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440427, "icecrownwalldiag21")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440431, "icecrownwalldiag22")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440439, "icecrownwalldiag23")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440428, "icecrownwalldiag24")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440440, "icecrownwalldiag25")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440421, "icecrownwallhoriz1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440429, "icecrownwallhoriz2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440433, "icecrownwallhoriz3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440422, "icecrownwallhoriz4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440434, "icecrownwallhoriz5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440423, "icecrownwallvert1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440432, "icecrownwallvert2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440435, "icecrownwallvert3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440424, "icecrownwallvert4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440436, "icecrownwallvert5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442425, "icecrownwaterfall")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443493, "iceedge1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443494, "iceedge2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443495, "iceedge3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443496, "iceedge4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489588, "icefloat1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489589, "icefloat2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443501, "iceflow1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443502, "iceflow2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443503, "iceflow3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443504, "iceflow4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489586, "icemisc")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489587, "icerock")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443261, "icetorch")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441458, "icetrollhut1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441459, "icetrollhut2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443447, "igloo")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437604, "impaledbody1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437605, "impaledbody2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425520, "infernal-cannons")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441192, "inn")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437348, "innburn")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442748, "ironmaiden")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425776, "jungle-stalkers")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489582, "junk1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489583, "junk2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443238, "junkpile1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443239, "junkpile2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441138, "keeperstatue")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442995, "kingthrone")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441142, "knightstatuea")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425528, "kobolds")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443253, "lanternpost1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443254, "lanternpost2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443259, "lanternpost3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489584, "lanterns")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442725, "lightning")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438320, "lily1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438321, "lily2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438322, "lily3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438323, "lily4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425523, "lizards")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440695, "longfence")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440696, "longfenceangled")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439655, "lordaeronrock1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439664, "lordaeronrock10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439656, "lordaeronrock2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439657, "lordaeronrock3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439658, "lordaeronrock4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439659, "lordaeronrock5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439660, "lordaeronrock6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439661, "lordaeronrock7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439662, "lordaeronrock8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439663, "lordaeronrock9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439665, "lordaeronrockchunk1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439666, "lordaeronrockchunk2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439667, "lordaeronrockchunk3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439668, "lordaeronrockchunk4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439669, "lordaeronrockchunk5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439670, "lordaeronrockchunk6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440633, "lordaeronrubble")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440445, "lordaeronwalldiag11")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440629, "lordaeronwalldiag13")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440446, "lordaeronwalldiag14")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440630, "lordaeronwalldiag15")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440609, "lordaeronwalldiag21")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440631, "lordaeronwalldiag23")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440624, "lordaeronwalldiag24")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440632, "lordaeronwalldiag25")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440673, "lordaeronwallfountain1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440674, "lordaeronwallfountain2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440441, "lordaeronwallhoriz1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440625, "lordaeronwallhoriz3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440442, "lordaeronwallhoriz4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440626, "lordaeronwallhoriz5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440443, "lordaeronwallvert1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440627, "lordaeronwallvert3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440444, "lordaeronwallvert4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440628, "lordaeronwallvert5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425780, "mages")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425079, "magic")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443192, "magicalpen")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443193, "magicalpenwall")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443772, "magicrunes")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437886, "magicrunes1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438049, "magicrunes2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438064, "magicrunes3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443191, "magicvaultdalaran")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441981, "magicvaultother")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425570, "makrura")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425529, "mammoths")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441982, "marketplace")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442145, "mercenarycamp")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436580, "mike01")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436581, "mike02")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436582, "mike03")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436583, "mike04")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436584, "mike05")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436585, "mike06")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436586, "mike07")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436785, "mike08")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436587, "mike09")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436588, "mike10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436589, "mike11")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436590, "mike12")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436591, "mike13")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436592, "mike14")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436593, "mike15")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436594, "mike16")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436595, "mike17")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436596, "mike18")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436597, "mike19")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436598, "mike20")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436599, "mike21")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436600, "mike22")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436601, "mike23")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436784, "mike24")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436787, "mike25")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436786, "mike26")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436602, "mike27")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436603, "mike28")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436604, "mike29")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436606, "mike30")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436769, "mike31")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436605, "mike32")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443703, "mikebld1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443704, "mikebld2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443705, "mikebld3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442932, "minecart")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442933, "minecartempty")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489526, "misc")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424567, "misc-wagon")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436838, "misc01")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436789, "misc02")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436790, "misc03")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436791, "misc04")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436792, "misc05")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436793, "misc06")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436833, "misc07")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436834, "misc08")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436835, "misc09")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425313, "misc1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436836, "misc10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436837, "misc11")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436788, "misc12")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436839, "misc13")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436840, "misc14")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436841, "misc15")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436842, "misc16")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425314, "misc2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425315, "misc3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443745, "misccust1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443746, "misccust2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443702, "msvmas")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436533, "msvmas1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436534, "msvmas2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436536, "msvmas3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436535, "msvmas4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436537, "msvmas5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436577, "msvmas6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436578, "msvmas7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436579, "msvmas8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441460, "murlochut1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441461, "murlochut2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425569, "murlocs")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425827, "naga")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443755, "natarch1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443756, "natarch2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437108, "natarchashen")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437109, "natarchbarren")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437118, "natarchcoral1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437281, "natarchcoral2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437110, "natarchdungeon")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437111, "natarchfel")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437113, "natarchice")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437112, "natarchicecrown")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437114, "natarchlord")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437115, "natarchnorth")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437116, "natarchoutland")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437117, "natarchsunken")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437296, "natarchunder")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443953, "nature-animals")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443952, "nature-cacti")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444001, "nature-flowers")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443955, "nature-lilies1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443956, "nature-lilies2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443954, "nature-logs")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443961, "nature-other")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443960, "nature-outland")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443774, "nature-shrooms1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443937, "nature-shrooms2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443957, "nature-shrubs")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443958, "nature-vines1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443959, "nature-vines2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425080, "nature1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425081, "nature2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424568, "ne-archer")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424569, "ne-battlemaid")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424570, "ne-captain")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424571, "ne-nymph")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425573, "nerubians")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442161, "nerubziggurat")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425581, "nether-dragons")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425785, "neutral-heroes")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425329, "nightelf-campaign")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425330, "nightelf-campaign-heroes")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425328, "nightelf-heroes")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425326, "nightelf-melee")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425327, "nightelf-other")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437354, "nightelfshipburn")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437628, "northbones1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437813, "northbones10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437629, "northbones2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437630, "northbones3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437793, "northbones4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437808, "northbones5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437809, "northbones6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437810, "northbones7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437811, "northbones8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437812, "northbones9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441725, "northbrokencolumn1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441726, "northbrokencolumn2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439676, "northclaw1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439861, "northclaw10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439677, "northclaw2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439678, "northclaw3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439841, "northclaw4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439856, "northclaw5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439857, "northclaw6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439858, "northclaw7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439859, "northclaw8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439860, "northclaw9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440699, "northfence")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440700, "northfenceangled")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439671, "northfissure1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439672, "northfissure2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440957, "northrendbrokenobelisk")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437867, "northrendgrave")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440958, "northrendobelisk")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437868, "northrendtombstone1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437869, "northrendtombstone2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437870, "northrendtombstone3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439862, "northrocks1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439910, "northrocks10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439863, "northrocks2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439864, "northrocks3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439865, "northrocks4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439905, "northrocks5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439906, "northrocks6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439907, "northrocks7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439908, "northrocks8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439909, "northrocks9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439673, "northrubble1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439674, "northrubble2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439675, "northrubble3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438396, "norththorns1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438397, "norththorns2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438398, "norththorns3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438561, "norththorns4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438576, "norththorns5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438577, "norththorns6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438578, "norththorns7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439911, "northwebrocks1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439912, "northwebrocks2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439913, "northwebrocks3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439914, "northwebrocks4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439915, "northwebrocks5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439916, "northwebrocks6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439917, "northwebrocks7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439918, "northwebrocks8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440953, "obelisk1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440954, "obelisk2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440955, "obelisk3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442936, "obstacle1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442937, "obstacle2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442977, "obstacle3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442978, "obstacle4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442979, "obstacle5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489576, "obstacles")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425583, "ogres")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424572, "orc-beastmist")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424573, "orc-blademonk1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424574, "orc-blademonk2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425325, "orc-campaign")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424752, "orc-elder")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425323, "orc-fel")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424753, "orc-femgrunt")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424754, "orc-femsham")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425324, "orc-heroes")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425322, "orc-melee")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424737, "orc-shaman")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424755, "orc-spear")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424756, "orc-torntusk")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424757, "orc-warfiend1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424758, "orc-warfiend2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442993, "orcthrone")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439919, "outlandfloating1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439920, "outlandfloating2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439921, "outlandfloating3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439922, "outlandfloating4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439923, "outlandfloatingcluster")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439924, "outlandmagmarock1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439925, "outlandmagmarock2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439926, "outlandmagmarock3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439927, "outlandmagmarock4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439928, "outlandmagmarock5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438583, "outlandplant1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438584, "outlandplant2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438585, "outlandplant3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438625, "outlandplant4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438626, "outlandplant5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438627, "outlandplant6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438628, "outlandplant7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438629, "outlandplant8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439929, "outlandrock1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440114, "outlandrock10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439930, "outlandrock2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439931, "outlandrock3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439932, "outlandrock4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439933, "outlandrock5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439934, "outlandrock6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440097, "outlandrock7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440112, "outlandrock8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440113, "outlandrock9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440164, "outlandrubble1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440165, "outlandrubble2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440166, "outlandrubble3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440167, "outlandrubble4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440168, "outlandrubble5")
endfunction

function populateUidReverseRegistry3 takes nothing returns nothing
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440169, "outlandrubble6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440115, "outlandspires1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440163, "outlandspires10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440116, "outlandspires2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440117, "outlandspires3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440118, "outlandspires4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440119, "outlandspires5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440120, "outlandspires6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440121, "outlandspires7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440161, "outlandspires8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440162, "outlandspires9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442727, "overheaddust")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437864, "peasantgrave1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437865, "peasantgrave2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437866, "peasantgrave3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442237, "pier")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442236, "pierbroken")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441708, "pigfarm")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485753, "pillarsbroken")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485752, "pillarscity")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485754, "pillarsother")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425586, "polar-furbolgs")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442162, "powergenerator")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425584, "quillboars")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440930, "ramp")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424759, "rat-monk")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424760, "rat-ranger")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424761, "rat-runner")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437107, "rectwater")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425582, "red-dragons")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442673, "redcracks1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442674, "redcracks2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442675, "redcracks3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442676, "redcracks4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442723, "redflame")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442470, "ressurectstone")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425575, "revenants")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437618, "ribbones1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437619, "ribbones2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437620, "ribbones3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437621, "ribbones4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442421, "risingwater1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442422, "risingwater2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440170, "rockchunksred1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440171, "rockchunksred2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440172, "rockchunksred3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440173, "rockchunksred4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440174, "rockchunksred5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440175, "rockchunksred6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439151, "rockchunksunder1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439152, "rockchunksunder2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439153, "rockchunksunder3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439154, "rockchunksunder4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439155, "rockchunksunder5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439156, "rockchunksunder6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425082, "rocks-ashen")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444002, "rocks-ashen1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444003, "rocks-ashen2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425083, "rocks-barren")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444004, "rocks-barren1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444005, "rocks-barren2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444006, "rocks-barren3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444007, "rocks-barren4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444022, "rocks-chunks-lordaeron")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485665, "rocks-chunks-red")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444012, "rocks-chunks-under")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444008, "rocks-dungeon1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444009, "rocks-dungeon2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425085, "rocks-fel")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444013, "rocks-felwood1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444014, "rocks-felwood2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444015, "rocks-felwood3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425086, "rocks-icecrown")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444016, "rocks-icecrown1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444017, "rocks-icecrown2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444018, "rocks-icecrown3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444019, "rocks-icecrown4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444020, "rocks-icecrown5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425249, "rocks-lordaeron")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444021, "rocks-lordaeron1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425264, "rocks-north")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444023, "rocks-north1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444024, "rocks-north2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444025, "rocks-north3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444026, "rocks-north4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425265, "rocks-outland")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444027, "rocks-outland1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444028, "rocks-outland2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444029, "rocks-outland3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444030, "rocks-outland4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425266, "rocks-sunken")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485680, "rocks-sunken1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485681, "rocks-sunken2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485682, "rocks-sunken3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485683, "rocks-sunken4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425084, "rocks-under")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444010, "rocks-underground1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016444011, "rocks-underground2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442416, "rowboat")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442417, "rowboatbroken")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440931, "ruinedcurvedwall")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440932, "ruinedwall")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441121, "ruinsobelisk1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441136, "ruinsobelisk2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443770, "runes")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437880, "runesofguldan1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437881, "runesofguldan2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437882, "runesofguldan3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437883, "runesofguldan4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437884, "runesofguldan5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437885, "runesofguldan6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438378, "rushes1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438379, "rushes2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438380, "rushes3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438381, "rushes4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438382, "rushes5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438383, "rushes6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436843, "rzr1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436844, "rzr2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436845, "rzr3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436846, "rzr4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443747, "rzrbld")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442163, "sacrificialaltar")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425598, "sasquatches")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425778, "satyrs")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437559, "scorchedremains1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437560, "scorchedremains2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437561, "scorchedremains3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425589, "sea-giants")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442230, "seaweed1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442231, "seaweed2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442232, "seaweed3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442233, "seaweed4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442234, "seaweed5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441139, "sentinelstatue")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489573, "sewer")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442741, "sewerpipe1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442742, "sewerpipe2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442743, "sewerpipe3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442737, "sewervent1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442738, "sewervent2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442739, "sewervent3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442740, "sewervent4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442166, "shells1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442214, "shells10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442167, "shells2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442168, "shells3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442169, "shells4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442209, "shells5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442210, "shells6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442211, "shells7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442212, "shells8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442213, "shells9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443234, "shimmeringportal")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425337, "ships1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425338, "ships2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440697, "shortfence")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440698, "shortfenceangled")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438384, "shrub1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438385, "shrub2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438386, "shrub3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442471, "signpost1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442472, "signpost2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489527, "signs")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437606, "sittingcorpse")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425574, "skeletons")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437857, "skull1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437858, "skull2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437622, "skullonstick1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437623, "skullonstick2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437624, "skullonstick3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437625, "skullonstick4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437626, "skullonstick5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437627, "skullonstick6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437814, "skullpile1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437815, "skullpile2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437816, "skullpile3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437817, "skullpile4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425591, "sludge")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442681, "smokestack1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442721, "smokestack2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442722, "smokestack3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443446, "snowman")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425829, "spawns1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425830, "spawns2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425831, "spawns3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425571, "spiders")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441145, "spiderstatue1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441185, "spiderstatue2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442980, "stake1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442981, "stake2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442982, "standard1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442983, "standard2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425828, "starcraft")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441186, "statue1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441187, "statue2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441188, "statuebroken1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441189, "statuebroken2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485737, "statues-obelisks1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485738, "statues-obelisks2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485739, "statues-others1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485740, "statues-others2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425522, "stormreaver")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485741, "structure1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485742, "structure2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425270, "structures1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425271, "structures2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425272, "structures5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425521, "succubi")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436847, "sunchp1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436848, "sunchp2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436849, "sunchp3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436850, "sunchp4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443748, "sunchpbld")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489572, "sunken")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442728, "sunkenaltar")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442734, "sunkenbrazier")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443444, "sunkenbrazier1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443445, "sunkenbrazier2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441648, "sunkenbuilding1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441649, "sunkenbuilding2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441650, "sunkenbuilding3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442729, "sunkencircle")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442735, "sunkendoor")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442730, "sunkenfountain")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438329, "sunkenlily1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438369, "sunkenlily2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438370, "sunkenlily3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438371, "sunkenlily4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438372, "sunkenlily5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438373, "sunkenlily6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438374, "sunkenlily7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438375, "sunkenlily8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441905, "sunkenpillar1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441906, "sunkenpillar2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441907, "sunkenpillar3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441908, "sunkenpillar4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441909, "sunkenpillar5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440188, "sunkenrock1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440373, "sunkenrock10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440189, "sunkenrock2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440190, "sunkenrock3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440353, "sunkenrock4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440368, "sunkenrock5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440369, "sunkenrock6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440370, "sunkenrock7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440371, "sunkenrock8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440372, "sunkenrock9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440180, "sunkenrubble1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440181, "sunkenrubble2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440182, "sunkenrubble3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440183, "sunkenrubble4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440184, "sunkenrubble5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440185, "sunkenrubble6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440186, "sunkenrubble7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440187, "sunkenrubble8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442731, "sunkenshelf1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442732, "sunkenshelf2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442733, "sunkenshelf3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438119, "sunkenshroom1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438120, "sunkenshroom2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438121, "sunkenshroom3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438122, "sunkenshroom4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438123, "sunkenshroom5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438124, "sunkenshroom6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440374, "sunkenspires1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440375, "sunkenspires2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440376, "sunkenspires3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440377, "sunkenspires4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440417, "sunkenspires5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440418, "sunkenspires6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440419, "sunkenspires7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440420, "sunkenspires8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442736, "sunkenstairs")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440176, "sunkenstone1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440177, "sunkenstone2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440178, "sunkenstone3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440179, "sunkenstone4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442991, "sunkenthrone1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442992, "sunkenthrone2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443245, "sunkentrash1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443246, "sunkentrash2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440678, "sunkenwalldiag11")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440684, "sunkenwalldiag12")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440691, "sunkenwalldiag13")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440677, "sunkenwalldiag14")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440692, "sunkenwalldiag15")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440679, "sunkenwalldiag21")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440685, "sunkenwalldiag22")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440693, "sunkenwalldiag23")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440680, "sunkenwalldiag24")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440694, "sunkenwalldiag25")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440675, "sunkenwallhoriz1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440683, "sunkenwallhoriz2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440687, "sunkenwallhoriz3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440676, "sunkenwallhoriz4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440688, "sunkenwallhoriz5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440681, "sunkenwallvert1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440686, "sunkenwallvert2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440689, "sunkenwallvert3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440682, "sunkenwallvert4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016440690, "sunkenwallvert5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438394, "sunkenwallvines1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438395, "sunkenwallvines2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441202, "sunwell")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442929, "supportbeam")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442996, "table")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442997, "tablechair")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441462, "taurentent1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441463, "taurentent2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443003, "tautotem1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443004, "tautotem2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443005, "tautotem3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443006, "tautotem4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443169, "tautotem5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442164, "tavern")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442475, "tavernsign")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441464, "tent1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441465, "tent2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485746, "tents1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485747, "tents2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441200, "thrallhut")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442990, "throne")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443440, "torchhuman1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489574, "torture")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442750, "torturetable")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443256, "totem1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443257, "totem2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443258, "totem3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441964, "tower1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441965, "tower2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441966, "tower3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441967, "tower4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437347, "towerburn")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441467, "townbuilding1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441468, "townbuilding2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441469, "townbuilding3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441470, "townbuilding4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441633, "townbuilding5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424801, "tr-dreg")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424806, "tr-femshadowpriest")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424802, "tr-miner")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424803, "tr-outrider")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424804, "tr-pillager")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424805, "tr-shadeweaver")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424807, "tr-shadowpriest")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424808, "tr-voohunter")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442473, "traceysign")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443242, "trash")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425784, "treants")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443240, "treasurepile1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443241, "treasurepile2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436851, "trnql01")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436852, "trnql02")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436854, "trnql03")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436855, "trnql04")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436853, "trnql05")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436856, "trnql06")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436857, "trnql07")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436858, "trnql08")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436859, "trnql09")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436861, "trnql10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436860, "trnql11")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016436862, "trnql12")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437025, "trnql13")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437040, "trnql14")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437041, "trnql15")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437042, "trnql16")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437043, "trnql17")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437044, "trnql18")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437045, "trnql19")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437046, "trnql20")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437047, "trnql21")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437048, "trnql22")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437049, "trnql23")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437089, "trnql24")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437090, "trnql25")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437091, "trnql26")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437092, "trnql27")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437093, "trnql28")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437094, "trnql29")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437095, "trnql30")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437096, "trnql31")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437097, "trnql32")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437098, "trnql33")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437099, "trnql34")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437100, "trnql35")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443749, "trnqlcast1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443750, "trnqlcast2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443751, "trnqlcast3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443752, "trnqlcast4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442477, "trough1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442478, "trough2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425588, "turtles")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425777, "tuskarr")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443511, "tutorialorcbanner")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424809, "ud-archnecro1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424810, "ud-archnecro2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424812, "ud-deathbaron")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424811, "ud-deathlord")
endfunction

function populateUidReverseRegistry4 takes nothing returns nothing
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424813, "ud-dwarfbaron1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424814, "ud-dwarfbaron2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424817, "ud-femnecro")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424818, "ud-horse1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424819, "ud-horse2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424820, "ud-miniabo")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424815, "ud-necropriest1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424816, "ud-necropriest2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424823, "ud-skelchild")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424822, "ud-skelknight")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424821, "ud-skelpeas")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425333, "undead-campaign-heroes1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425334, "undead-campaign-heroes2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425332, "undead-heroes")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425331, "undead-melee")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425335, "undead-other")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489575, "underground")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439150, "undergroundcrater")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441137, "undergroundobelisk")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439097, "undergroundrock1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439145, "undergroundrock10")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439137, "undergroundrock2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439138, "undergroundrock3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439139, "undergroundrock4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439140, "undergroundrock5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439141, "undergroundrock6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439142, "undergroundrock7")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439143, "undergroundrock8")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439144, "undergroundrock9")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439146, "undergroundstalagmite1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439147, "undergroundstalagmite2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439148, "undergroundstalagmite3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016439149, "undergroundstalagmite4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425336, "unsorted")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437101, "villa1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437102, "villa2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437103, "villa3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437104, "villa4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437105, "villa5")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437106, "villa6")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443753, "villabld")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441657, "villagebuilding1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441697, "villagebuilding2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441698, "villagebuilding3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443255, "villagelightpost")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425321, "villagers")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438579, "vinyplant1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438580, "vinyplant2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438581, "vinyplant3")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438582, "vinyplant4")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424824, "vlg-barbarian")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424825, "vlg-blondeelf")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424827, "vlg-bulky")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424828, "vlg-draenei")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424829, "vlg-druid")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424830, "vlg-dwarf")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424993, "vlg-nelf")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425013, "vlg-orcchild")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425008, "vlg-peon")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016424826, "vlg-redheadelf")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425011, "vlg-tauchild")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425009, "vlg-tauren")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425012, "vlg-trochild")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425010, "vlg-troll")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425781, "voidwalkers")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485735, "walls")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485732, "walls-fences")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425267, "walls-icecrown")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485684, "walls-icecrown-onecap")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485686, "walls-icecrown-regular")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485685, "walls-icecrown-ruined")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425268, "walls-lordaeron")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485687, "walls-lordaeron-onecap")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485689, "walls-lordaeron-others")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485688, "walls-lordaeron-regular")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425269, "walls-sunken")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485729, "walls-sunken-onecap")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485731, "walls-sunken-regular")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485730, "walls-sunken-ruined")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016485736, "walls-underground")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425273, "water")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489521, "water-corals")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425339, "water-elementals")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489522, "water-fish")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489524, "water-human")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489525, "water-other")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489523, "water-seaweed")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016489520, "water-shells")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443754, "waterbld")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442465, "waterfall")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442165, "waygate")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016443250, "weaponsrack")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441193, "well")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425597, "wendigos")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442229, "whale")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441143, "whalestatue")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442235, "wharf")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442488, "wheat")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442489, "wheatbunch")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437364, "wheatburn1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437365, "wheatburn2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442479, "wheelbarrel")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437355, "wheelbarrelbroken")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425761, "wildkins")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441194, "windmill")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016437345, "windmillburn")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016425527, "wolves")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016438630, "worldtree")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442913, "wyverncage1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016442928, "wyverncage2")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441195, "ziggurat1")
	call SaveStr(CodegenUtils_REGISTRIES, 1, 2016441196, "ziggurat2")
endfunction

function init_Registry takes nothing returns boolean
	set Registry_REGISTRY_SHOPS = makeShopRegistry()
	call populateModelRegistry0()
	call populateModelRegistry1()
	call populateModelRegistry2()
	call populateModelRegistry3()
	call populateModelRegistry4()
	call populateModelRegistry5()
	call populateUidRegistry0()
	call populateUidRegistry1()
	call populateUidRegistry2()
	call populateUidRegistry3()
	call populateUidRegistry4()
	call populateUidReverseRegistry0()
	call populateUidReverseRegistry1()
	call populateUidReverseRegistry2()
	call populateUidReverseRegistry3()
	call populateUidReverseRegistry4()
	return true
endfunction

function init_SafetyChecks takes nothing returns boolean
	return true
endfunction

function registerOperator takes integer arity, string operator, integer impl returns nothing
	local integer hash = StringHash(operator)
	call dispatch_HashMap_HashMap_HashMap_put(Scripting_operators, hash, impl)
	call dispatch_HashMap_HashMap_HashMap_put(Scripting_operatorArity, hash, arity)
	call SaveStr(Table_ht, Scripting_reverseOperators, impl, operator)
endfunction

function initOperators takes nothing returns nothing
	local integer this_54
	local integer this_55
	local integer this_56
	local integer this_57
	local integer this_58
	local integer this_59
	local integer this_60
	local integer this_61
	local integer this_62
	local integer this_63
	local integer this_64
	local integer this_65
	local integer this_66
	local integer this_67
	local integer this_68
	local integer this_69
	if Op_firstFree == 0 then
		if Op_maxIndex < 32768 then
			set Op_maxIndex = Op_maxIndex + 1
			set this_54 = Op_maxIndex
			set Op_typeId[this_54] = 918
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set Op_firstFree = Op_firstFree - 1
		set this_54 = Op_nextFree[Op_firstFree]
		set Op_typeId[this_54] = 918
	endif
	call registerOperator(2, "*", this_54)
	if Op_firstFree == 0 then
		if Op_maxIndex < 32768 then
			set Op_maxIndex = Op_maxIndex + 1
			set this_55 = Op_maxIndex
			set Op_typeId[this_55] = 919
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set Op_firstFree = Op_firstFree - 1
		set this_55 = Op_nextFree[Op_firstFree]
		set Op_typeId[this_55] = 919
	endif
	call registerOperator(2, "+", this_55)
	if Op_firstFree == 0 then
		if Op_maxIndex < 32768 then
			set Op_maxIndex = Op_maxIndex + 1
			set this_56 = Op_maxIndex
			set Op_typeId[this_56] = 920
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set Op_firstFree = Op_firstFree - 1
		set this_56 = Op_nextFree[Op_firstFree]
		set Op_typeId[this_56] = 920
	endif
	call registerOperator(2, "/", this_56)
	if Op_firstFree == 0 then
		if Op_maxIndex < 32768 then
			set Op_maxIndex = Op_maxIndex + 1
			set this_57 = Op_maxIndex
			set Op_typeId[this_57] = 921
		else
			call error("Out of memory: Could not create Closure.")
			set this_57 = 0
		endif
	else
		set Op_firstFree = Op_firstFree - 1
		set this_57 = Op_nextFree[Op_firstFree]
		set Op_typeId[this_57] = 921
	endif
	call registerOperator(2, "-", this_57)
	if Op_firstFree == 0 then
		if Op_maxIndex < 32768 then
			set Op_maxIndex = Op_maxIndex + 1
			set this_58 = Op_maxIndex
			set Op_typeId[this_58] = 922
		else
			call error("Out of memory: Could not create Closure.")
			set this_58 = 0
		endif
	else
		set Op_firstFree = Op_firstFree - 1
		set this_58 = Op_nextFree[Op_firstFree]
		set Op_typeId[this_58] = 922
	endif
	call registerOperator(2, ">", this_58)
	if Op_firstFree == 0 then
		if Op_maxIndex < 32768 then
			set Op_maxIndex = Op_maxIndex + 1
			set this_59 = Op_maxIndex
			set Op_typeId[this_59] = 923
		else
			call error("Out of memory: Could not create Closure.")
			set this_59 = 0
		endif
	else
		set Op_firstFree = Op_firstFree - 1
		set this_59 = Op_nextFree[Op_firstFree]
		set Op_typeId[this_59] = 923
	endif
	call registerOperator(2, ">=", this_59)
	if Op_firstFree == 0 then
		if Op_maxIndex < 32768 then
			set Op_maxIndex = Op_maxIndex + 1
			set this_60 = Op_maxIndex
			set Op_typeId[this_60] = 924
		else
			call error("Out of memory: Could not create Closure.")
			set this_60 = 0
		endif
	else
		set Op_firstFree = Op_firstFree - 1
		set this_60 = Op_nextFree[Op_firstFree]
		set Op_typeId[this_60] = 924
	endif
	call registerOperator(2, "<", this_60)
	if Op_firstFree == 0 then
		if Op_maxIndex < 32768 then
			set Op_maxIndex = Op_maxIndex + 1
			set this_61 = Op_maxIndex
			set Op_typeId[this_61] = 925
		else
			call error("Out of memory: Could not create Closure.")
			set this_61 = 0
		endif
	else
		set Op_firstFree = Op_firstFree - 1
		set this_61 = Op_nextFree[Op_firstFree]
		set Op_typeId[this_61] = 925
	endif
	call registerOperator(2, "<=", this_61)
	if Op_firstFree == 0 then
		if Op_maxIndex < 32768 then
			set Op_maxIndex = Op_maxIndex + 1
			set this_62 = Op_maxIndex
			set Op_typeId[this_62] = 926
		else
			call error("Out of memory: Could not create Closure.")
			set this_62 = 0
		endif
	else
		set Op_firstFree = Op_firstFree - 1
		set this_62 = Op_nextFree[Op_firstFree]
		set Op_typeId[this_62] = 926
	endif
	call registerOperator(2, "=", this_62)
	if Op_firstFree == 0 then
		if Op_maxIndex < 32768 then
			set Op_maxIndex = Op_maxIndex + 1
			set this_63 = Op_maxIndex
			set Op_typeId[this_63] = 927
		else
			call error("Out of memory: Could not create Closure.")
			set this_63 = 0
		endif
	else
		set Op_firstFree = Op_firstFree - 1
		set this_63 = Op_nextFree[Op_firstFree]
		set Op_typeId[this_63] = 927
	endif
	call registerOperator(2, "mod", this_63)
	if Op_firstFree == 0 then
		if Op_maxIndex < 32768 then
			set Op_maxIndex = Op_maxIndex + 1
			set this_64 = Op_maxIndex
			set Op_typeId[this_64] = 928
		else
			call error("Out of memory: Could not create Closure.")
			set this_64 = 0
		endif
	else
		set Op_firstFree = Op_firstFree - 1
		set this_64 = Op_nextFree[Op_firstFree]
		set Op_typeId[this_64] = 928
	endif
	call registerOperator(2, "div", this_64)
	if Op_firstFree == 0 then
		if Op_maxIndex < 32768 then
			set Op_maxIndex = Op_maxIndex + 1
			set this_65 = Op_maxIndex
			set Op_typeId[this_65] = 931
		else
			call error("Out of memory: Could not create Closure.")
			set this_65 = 0
		endif
	else
		set Op_firstFree = Op_firstFree - 1
		set this_65 = Op_nextFree[Op_firstFree]
		set Op_typeId[this_65] = 931
	endif
	call registerOperator(0, "time", this_65)
	if Op_firstFree == 0 then
		if Op_maxIndex < 32768 then
			set Op_maxIndex = Op_maxIndex + 1
			set this_66 = Op_maxIndex
			set Op_typeId[this_66] = 929
		else
			call error("Out of memory: Could not create Closure.")
			set this_66 = 0
		endif
	else
		set Op_firstFree = Op_firstFree - 1
		set this_66 = Op_nextFree[Op_firstFree]
		set Op_typeId[this_66] = 929
	endif
	call registerOperator(2, "rand", this_66)
	if Op_firstFree == 0 then
		if Op_maxIndex < 32768 then
			set Op_maxIndex = Op_maxIndex + 1
			set this_67 = Op_maxIndex
			set Op_typeId[this_67] = 935
		else
			call error("Out of memory: Could not create Closure.")
			set this_67 = 0
		endif
	else
		set Op_firstFree = Op_firstFree - 1
		set this_67 = Op_nextFree[Op_firstFree]
		set Op_typeId[this_67] = 935
	endif
	call registerOperator(1, "sin", this_67)
	if Op_firstFree == 0 then
		if Op_maxIndex < 32768 then
			set Op_maxIndex = Op_maxIndex + 1
			set this_68 = Op_maxIndex
			set Op_typeId[this_68] = 936
		else
			call error("Out of memory: Could not create Closure.")
			set this_68 = 0
		endif
	else
		set Op_firstFree = Op_firstFree - 1
		set this_68 = Op_nextFree[Op_firstFree]
		set Op_typeId[this_68] = 936
	endif
	call registerOperator(1, "cos", this_68)
	if Op_firstFree == 0 then
		if Op_maxIndex < 32768 then
			set Op_maxIndex = Op_maxIndex + 1
			set this_69 = Op_maxIndex
			set Op_typeId[this_69] = 933
		else
			call error("Out of memory: Could not create Closure.")
			set this_69 = 0
		endif
	else
		set Op_firstFree = Op_firstFree - 1
		set this_69 = Op_nextFree[Op_firstFree]
		set Op_typeId[this_69] = 933
	endif
	call registerOperator(3, "if", this_69)
endfunction

function init_Scripting takes nothing returns boolean
	set Scripting_operatorArity = new_HashMap()
	set Scripting_operators = new_HashMap()
	set Scripting_reverseOperators = new_Table()
	call initOperators()
	return true
endfunction

function init_Sounds takes nothing returns boolean
	return true
endfunction

function init_Soundsets takes nothing returns boolean
	return true
endfunction

function Spawner_initSpawners takes nothing returns nothing
	local integer i_3 = 0
	local integer temp = bj_MAX_PLAYERS - 1
	local unit spawner
	local playerunitevent temp_2
	local playerunitevent temp_3
	local player this_54
	local integer this_55
	local integer id
	local integer this_56
	local integer id_2
	local boolean andLeft
	loop
		exitwhen i_3 > temp
		set this_54 = Player_players[i_3]
		if GetPlayerSlotState(this_54) == PLAYER_SLOT_STATE_PLAYING then
			set andLeft = GetPlayerController(this_54) == MAP_CONTROL_USER
		else
			set andLeft = false
		endif
		if andLeft then
			set spawner = CreateUnit(Player_players[i_3], 2016489591, vec2_rotate(512., 0., i_3 * (360 * 1. / bj_MAX_PLAYERS) * 0.017453293), vec2_rotate_return_y, 0)
			set Spawner_lookup[i_3] = spawner
			call SetUnitPathing(spawner, false)
		endif
		set i_3 = i_3 + 1
	endloop
	set temp_2 = EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_55 = EventListener_maxIndex
			set EventListener_typeId[this_55] = 775
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_55 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_55] = 775
	endif
	set EventListener_eventId[this_55] = 0
	set EventListener_next[this_55] = 0
	set EventListener_prev[this_55] = 0
	set id = ClosureEvents_eventidToIndex[GetHandleId(temp_2)]
	if id == 0 then
		set id = registerEventId(temp_2)
	endif
	set EventListener_eventId[this_55] = id
	if EventListener_generalListenersFirsts[EventListener_eventId[this_55]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[this_55]]] = this_55
		set EventListener_next[this_55] = EventListener_generalListenersFirsts[EventListener_eventId[this_55]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[this_55]] = this_55
	set temp_3 = EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_56 = EventListener_maxIndex
			set EventListener_typeId[this_56] = 776
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_56 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_56] = 776
	endif
	set EventListener_eventId[this_56] = 0
	set EventListener_next[this_56] = 0
	set EventListener_prev[this_56] = 0
	set id_2 = ClosureEvents_eventidToIndex[GetHandleId(temp_3)]
	if id_2 == 0 then
		set id_2 = registerEventId(temp_3)
	endif
	set EventListener_eventId[this_56] = id_2
	if EventListener_generalListenersFirsts[EventListener_eventId[this_56]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[this_56]]] = this_56
		set EventListener_next[this_56] = EventListener_generalListenersFirsts[EventListener_eventId[this_56]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[this_56]] = this_56
	set spawner = null
	set temp_2 = null
	set temp_3 = null
	set this_54 = null
endfunction

function init_Spawner takes nothing returns boolean
	call Spawner_initSpawners()
	return true
endfunction

function doodVariations takes nothing returns nothing
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1146385256, 8)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1196716904, 8)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1330934903, 10)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1498703476, 2)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1247044468, 2)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1498706804, 2)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1498702708, 2)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1498707828, 2)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1179939959, 10)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1247048823, 10)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1465152372, 10)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1280601204, 10)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1465152631, 10)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1096053859, 3)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1112831075, 3)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1129608291, 3)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1230271587, 3)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1314157667, 3)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1515484259, 3)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1096053874, 5)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1112831095, 5)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1129608306, 5)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1230271607, 5)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1314157687, 5)
	call SaveInteger(Table_ht, StaticData_DOOD_VARIATIONS, 1515484279, 5)
endfunction

function terrainDnc takes nothing returns nothing
	call SaveStr(Table_ht, StaticData_TERRAIN_DNC, -1543512760, "Environment\\DNC\\DNCAshenvale\\DNCAshenValeTerrain\\DNCAshenValeTerrain.mdl")
	call SaveStr(Table_ht, StaticData_TERRAIN_DNC, 1618813342, "Environment\\DNC\\DNCDalaran\\DNCDalaranTerrain\\DNCDalaranTerrain.mdl")
	call SaveStr(Table_ht, StaticData_TERRAIN_DNC, -31184016, "Environment\\DNC\\DNCDungeon\\DNCDungeonTerrain\\DNCDungeonTerrain.mdl")
	call SaveStr(Table_ht, StaticData_TERRAIN_DNC, -1925987447, "Environment\\DNC\\DNCFelwood\\DNCFelWoodTerrain\\DNCFelWoodTerrain.mdl")
	call SaveStr(Table_ht, StaticData_TERRAIN_DNC, 772552046, "Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl")
	call SaveStr(Table_ht, StaticData_TERRAIN_DNC, -467056618, "Environment\\DNC\\DNCUnderground\\DNCUndergroundTerrain\\DNCUndergroundTerrain.mdl")
endfunction

function unitDnc takes nothing returns nothing
	call SaveStr(Table_ht, StaticData_UNIT_DNC, -1543512760, "Environment\\DNC\\DNCAshenvale\\DNCAshenValeUnit\\DNCAshenValeUnit.mdl")
	call SaveStr(Table_ht, StaticData_UNIT_DNC, 1618813342, "Environment\\DNC\\DNCDalaran\\DNCDalaranUnit\\DNCDalaranUnit.mdl")
	call SaveStr(Table_ht, StaticData_UNIT_DNC, -31184016, "Environment\\DNC\\DNCDungeon\\DNCDungeonUnit\\DNCDungeonUnit.mdl")
	call SaveStr(Table_ht, StaticData_UNIT_DNC, -1925987447, "Environment\\DNC\\DNCFelwood\\DNCFelWoodUnit\\DNCFelWoodUnit.mdl")
	call SaveStr(Table_ht, StaticData_UNIT_DNC, 772552046, "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
	call SaveStr(Table_ht, StaticData_UNIT_DNC, -467056618, "Environment\\DNC\\DNCUnderground\\DNCUndergroundUnit\\DNCUndergroundUnit.mdl")
endfunction

function weatherCodes takes nothing returns nothing
	call SaveInteger(Table_ht, StaticData_WEATHER, 1027603461, 1380018290)
	call SaveInteger(Table_ht, StaticData_WEATHER, -1195020790, 1380019314)
	call SaveInteger(Table_ht, StaticData_WEATHER, 820556189, 1380018290)
	call SaveInteger(Table_ht, StaticData_WEATHER, -1533253003, 1380019314)
	call SaveInteger(Table_ht, StaticData_WEATHER, 1821344643, 1296393331)
	call SaveInteger(Table_ht, StaticData_WEATHER, -670649033, 1178886760)
	call SaveInteger(Table_ht, StaticData_WEATHER, -139248623, 1178886764)
	call SaveInteger(Table_ht, StaticData_WEATHER, 146347624, 1178886760)
	call SaveInteger(Table_ht, StaticData_WEATHER, -736438881, 1178886764)
	call SaveInteger(Table_ht, StaticData_WEATHER, 441134416, 1178888040)
	call SaveInteger(Table_ht, StaticData_WEATHER, 2028178770, 1178888044)
	call SaveInteger(Table_ht, StaticData_WEATHER, 109007409, 1178888040)
	call SaveInteger(Table_ht, StaticData_WEATHER, -1752076602, 1178888044)
	call SaveInteger(Table_ht, StaticData_WEATHER, 351911061, 1178890856)
	call SaveInteger(Table_ht, StaticData_WEATHER, 1448260825, 1178890860)
	call SaveInteger(Table_ht, StaticData_WEATHER, 1924038778, 1178890856)
	call SaveInteger(Table_ht, StaticData_WEATHER, 563948576, 1178890860)
	call SaveInteger(Table_ht, StaticData_WEATHER, -53420777, 1178892136)
	call SaveInteger(Table_ht, StaticData_WEATHER, -1062567332, 1178892140)
	call SaveInteger(Table_ht, StaticData_WEATHER, -961756611, 1178892136)
	call SaveInteger(Table_ht, StaticData_WEATHER, -598452061, 1178892140)
	call SaveInteger(Table_ht, StaticData_WEATHER, 1354149733, 1380739186)
	call SaveInteger(Table_ht, StaticData_WEATHER, 1206971714, 1380740210)
	call SaveInteger(Table_ht, StaticData_WEATHER, -2035044110, 1397645939)
	call SaveInteger(Table_ht, StaticData_WEATHER, -1881755839, 1397647475)
	call SaveInteger(Table_ht, StaticData_WEATHER, 2024082101, 1397648499)
	call SaveInteger(Table_ht, StaticData_WEATHER, 288053757, 1464820599)
	call SaveInteger(Table_ht, StaticData_WEATHER, -732615138, 1464822903)
	call SaveInteger(Table_ht, StaticData_WEATHER, 147264744, 1280467297)
	call SaveInteger(Table_ht, StaticData_WEATHER, -942919426, 1280470369)
	call SaveInteger(Table_ht, StaticData_WEATHER, 1959821627, 1464755063)
endfunction

function init_StaticData takes nothing returns boolean
	set StaticData_TERRAIN_DNC = new_Table()
	set StaticData_UNIT_DNC = new_Table()
	set StaticData_WEATHER = new_Table()
	call new_Table()
	set StaticData_DOOD_VARIATIONS = new_Table()
	call terrainDnc()
	call unitDnc()
	call doodVariations()
	call weatherCodes()
	return true
endfunction

function init_String takes nothing returns boolean
	return true
endfunction

function initStringEncoder takes nothing returns nothing
	local integer this_54
	local integer this_55
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_54 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_54] = 803
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_54 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_54] = 803
	endif
	if  not try(this_54) then
		call error("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
	endif
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_55 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_55] = 804
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_55 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_55] = 804
	endif
	if  not try(this_55) then
		call error("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
	endif
endfunction

function init_StringEncoder takes nothing returns boolean
	set StringEncoder_alphabetLookup = new_HashMap()
	call initStringEncoder()
	return true
endfunction

function s2cInit takes nothing returns nothing
	local integer i_3 = 0
	local integer temp = 127
	loop
		exitwhen i_3 > temp
		if StringCase(StringUtils_c2s[i_3], true) == StringUtils_c2s[i_3] then
			set StringUtils_s2c[StringHash(StringUtils_c2s[i_3]) / 2033480 + 1002] = i_3
		endif
		set i_3 = i_3 + 1
	endloop
endfunction

function initialize takes nothing returns nothing
	set StringUtils_c2s[0] = ""
	set StringUtils_c2s[1] = ""
	set StringUtils_c2s[2] = ""
	set StringUtils_c2s[3] = ""
	set StringUtils_c2s[4] = ""
	set StringUtils_c2s[5] = ""
	set StringUtils_c2s[6] = ""
	set StringUtils_c2s[7] = ""
	set StringUtils_c2s[8] = ""
	set StringUtils_c2s[9] = "\t"
	set StringUtils_c2s[10] = "\n"
	set StringUtils_c2s[11] = ""
	set StringUtils_c2s[12] = ""
	set StringUtils_c2s[13] = "\r"
	set StringUtils_c2s[14] = ""
	set StringUtils_c2s[15] = ""
	set StringUtils_c2s[16] = ""
	set StringUtils_c2s[17] = ""
	set StringUtils_c2s[18] = ""
	set StringUtils_c2s[19] = ""
	set StringUtils_c2s[20] = ""
	set StringUtils_c2s[21] = ""
	set StringUtils_c2s[22] = ""
	set StringUtils_c2s[23] = ""
	set StringUtils_c2s[24] = ""
	set StringUtils_c2s[25] = ""
	set StringUtils_c2s[26] = ""
	set StringUtils_c2s[27] = ""
	set StringUtils_c2s[28] = ""
	set StringUtils_c2s[29] = ""
	set StringUtils_c2s[30] = ""
	set StringUtils_c2s[31] = ""
	set StringUtils_c2s[32] = " "
	set StringUtils_c2s[33] = "!"
	set StringUtils_c2s[34] = "\""
	set StringUtils_c2s[35] = "#"
	set StringUtils_c2s[36] = "$"
	set StringUtils_c2s[37] = "%"
	set StringUtils_c2s[38] = "&"
	set StringUtils_c2s[39] = "'"
	set StringUtils_c2s[40] = "("
	set StringUtils_c2s[41] = ")"
	set StringUtils_c2s[42] = "*"
	set StringUtils_c2s[43] = "+"
	set StringUtils_c2s[44] = ","
	set StringUtils_c2s[45] = "-"
	set StringUtils_c2s[46] = "."
	set StringUtils_c2s[47] = "/"
	set StringUtils_c2s[48] = "0"
	set StringUtils_c2s[49] = "1"
	set StringUtils_c2s[50] = "2"
	set StringUtils_c2s[51] = "3"
	set StringUtils_c2s[52] = "4"
	set StringUtils_c2s[53] = "5"
	set StringUtils_c2s[54] = "6"
	set StringUtils_c2s[55] = "7"
	set StringUtils_c2s[56] = "8"
	set StringUtils_c2s[57] = "9"
	set StringUtils_c2s[58] = ":"
	set StringUtils_c2s[59] = ";"
	set StringUtils_c2s[60] = "<"
	set StringUtils_c2s[61] = "="
	set StringUtils_c2s[62] = ">"
	set StringUtils_c2s[63] = "?"
	set StringUtils_c2s[64] = "@"
	set StringUtils_c2s[65] = "A"
	set StringUtils_c2s[66] = "B"
	set StringUtils_c2s[67] = "C"
	set StringUtils_c2s[68] = "D"
	set StringUtils_c2s[69] = "E"
	set StringUtils_c2s[70] = "F"
	set StringUtils_c2s[71] = "G"
	set StringUtils_c2s[72] = "H"
	set StringUtils_c2s[73] = "I"
	set StringUtils_c2s[74] = "J"
	set StringUtils_c2s[75] = "K"
	set StringUtils_c2s[76] = "L"
	set StringUtils_c2s[77] = "M"
	set StringUtils_c2s[78] = "N"
	set StringUtils_c2s[79] = "O"
	set StringUtils_c2s[80] = "P"
	set StringUtils_c2s[81] = "Q"
	set StringUtils_c2s[82] = "R"
	set StringUtils_c2s[83] = "S"
	set StringUtils_c2s[84] = "T"
	set StringUtils_c2s[85] = "U"
	set StringUtils_c2s[86] = "V"
	set StringUtils_c2s[87] = "W"
	set StringUtils_c2s[88] = "X"
	set StringUtils_c2s[89] = "Y"
	set StringUtils_c2s[90] = "Z"
	set StringUtils_c2s[91] = "["
	set StringUtils_c2s[92] = "\\"
	set StringUtils_c2s[93] = "]"
	set StringUtils_c2s[94] = "^"
	set StringUtils_c2s[95] = "_"
	set StringUtils_c2s[96] = "`"
	set StringUtils_c2s[97] = "a"
	set StringUtils_c2s[98] = "b"
	set StringUtils_c2s[99] = "c"
	set StringUtils_c2s[100] = "d"
	set StringUtils_c2s[101] = "e"
	set StringUtils_c2s[102] = "f"
	set StringUtils_c2s[103] = "g"
	set StringUtils_c2s[104] = "h"
	set StringUtils_c2s[105] = "i"
	set StringUtils_c2s[106] = "j"
	set StringUtils_c2s[107] = "k"
	set StringUtils_c2s[108] = "l"
	set StringUtils_c2s[109] = "m"
	set StringUtils_c2s[110] = "n"
	set StringUtils_c2s[111] = "o"
	set StringUtils_c2s[112] = "p"
	set StringUtils_c2s[113] = "q"
	set StringUtils_c2s[114] = "r"
	set StringUtils_c2s[115] = "s"
	set StringUtils_c2s[116] = "t"
	set StringUtils_c2s[117] = "u"
	set StringUtils_c2s[118] = "v"
	set StringUtils_c2s[119] = "w"
	set StringUtils_c2s[120] = "x"
	set StringUtils_c2s[121] = "y"
	set StringUtils_c2s[122] = "z"
	set StringUtils_c2s[123] = "{"
	set StringUtils_c2s[124] = "|"
	set StringUtils_c2s[125] = "}"
	set StringUtils_c2s[126] = "~"
	set StringUtils_c2s[127] = ""
	call s2cInit()
	set StringUtils_width[0] = 0
	set StringUtils_width[1] = 0
	set StringUtils_width[2] = 0
	set StringUtils_width[3] = 0
	set StringUtils_width[4] = 0
	set StringUtils_width[5] = 0
	set StringUtils_width[6] = 0
	set StringUtils_width[7] = 0
	set StringUtils_width[8] = 0
	set StringUtils_width[9] = 0
	set StringUtils_width[10] = 1000000000
	set StringUtils_width[11] = 0
	set StringUtils_width[12] = 0
	set StringUtils_width[13] = 0
	set StringUtils_width[14] = 0
	set StringUtils_width[15] = 0
	set StringUtils_width[16] = 0
	set StringUtils_width[17] = 0
	set StringUtils_width[18] = 0
	set StringUtils_width[19] = 0
	set StringUtils_width[20] = 0
	set StringUtils_width[21] = 0
	set StringUtils_width[22] = 0
	set StringUtils_width[23] = 0
	set StringUtils_width[24] = 0
	set StringUtils_width[25] = 0
	set StringUtils_width[26] = 0
	set StringUtils_width[27] = 0
	set StringUtils_width[28] = 0
	set StringUtils_width[29] = 0
	set StringUtils_width[30] = 0
	set StringUtils_width[31] = 0
	set StringUtils_width[32] = 70
	set StringUtils_width[33] = 60
	set StringUtils_width[34] = 80
	set StringUtils_width[35] = 180
	set StringUtils_width[36] = 140
	set StringUtils_width[37] = 199
	set StringUtils_width[38] = 219
	set StringUtils_width[39] = 40
	set StringUtils_width[40] = 80
	set StringUtils_width[41] = 80
	set StringUtils_width[42] = 121
	set StringUtils_width[43] = 140
	set StringUtils_width[44] = 55
	set StringUtils_width[45] = 104
	set StringUtils_width[46] = 51
	set StringUtils_width[47] = 121
	set StringUtils_width[48] = 160
	set StringUtils_width[49] = 60
	set StringUtils_width[50] = 160
	set StringUtils_width[51] = 160
	set StringUtils_width[52] = 180
	set StringUtils_width[53] = 160
	set StringUtils_width[54] = 160
	set StringUtils_width[55] = 140
	set StringUtils_width[56] = 160
	set StringUtils_width[57] = 160
	set StringUtils_width[58] = 60
	set StringUtils_width[59] = 60
	set StringUtils_width[60] = 140
	set StringUtils_width[61] = 140
	set StringUtils_width[62] = 140
	set StringUtils_width[63] = 140
	set StringUtils_width[64] = 199
	set StringUtils_width[65] = 206
	set StringUtils_width[66] = 162
	set StringUtils_width[67] = 183
	set StringUtils_width[68] = 193
	set StringUtils_width[69] = 153
	set StringUtils_width[70] = 122
	set StringUtils_width[71] = 204
	set StringUtils_width[72] = 200
	set StringUtils_width[73] = 77
	set StringUtils_width[74] = 80
	set StringUtils_width[75] = 183
	set StringUtils_width[76] = 148
	set StringUtils_width[77] = 264
	set StringUtils_width[78] = 200
	set StringUtils_width[79] = 225
	set StringUtils_width[80] = 156
	set StringUtils_width[81] = 237
	set StringUtils_width[82] = 179
	set StringUtils_width[83] = 156
	set StringUtils_width[84] = 151
	set StringUtils_width[85] = 187
	set StringUtils_width[86] = 183
	set StringUtils_width[87] = 282
	set StringUtils_width[88] = 204
	set StringUtils_width[89] = 179
	set StringUtils_width[90] = 179
	set StringUtils_width[91] = 80
	set StringUtils_width[92] = 100
	set StringUtils_width[93] = 80
	set StringUtils_width[94] = 140
	set StringUtils_width[95] = 140
	set StringUtils_width[96] = 100
	set StringUtils_width[97] = 151
	set StringUtils_width[98] = 159
	set StringUtils_width[99] = 147
	set StringUtils_width[100] = 162
	set StringUtils_width[101] = 159
	set StringUtils_width[102] = 98
	set StringUtils_width[103] = 176
	set StringUtils_width[104] = 159
	set StringUtils_width[105] = 65
	set StringUtils_width[106] = 77
	set StringUtils_width[107] = 147
	set StringUtils_width[108] = 68
	set StringUtils_width[109] = 227
	set StringUtils_width[110] = 156
	set StringUtils_width[111] = 166
	set StringUtils_width[112] = 162
	set StringUtils_width[113] = 162
	set StringUtils_width[114] = 98
	set StringUtils_width[115] = 126
	set StringUtils_width[116] = 100
	set StringUtils_width[117] = 159
	set StringUtils_width[118] = 159
	set StringUtils_width[119] = 229
	set StringUtils_width[120] = 159
	set StringUtils_width[121] = 159
	set StringUtils_width[122] = 147
	set StringUtils_width[123] = 80
	set StringUtils_width[124] = 60
	set StringUtils_width[125] = 80
	set StringUtils_width[126] = 140
	set StringUtils_width[127] = 0
endfunction

function init_StringUtils takes nothing returns boolean
	call initialize()
	call stringToIndex("")
	return true
endfunction

function init_SyncSimple takes nothing returns boolean
	local playerunitevent temp
	local playerevent temp_2
	local integer this_54
	local integer this_55
	local integer id
	local integer this_56
	local integer id_2
	set SyncSimple_last = null
	if Iterator_firstFree_4 == 0 then
		if Iterator_maxIndex_4 < 32768 then
			set Iterator_maxIndex_4 = Iterator_maxIndex_4 + 1
			set this_54 = Iterator_maxIndex_4
			set Iterator_typeId[this_54] = 837
		else
			call error("Out of memory: Could not create Iterator.")
			set this_54 = 0
		endif
	else
		set Iterator_firstFree_4 = Iterator_firstFree_4 - 1
		set this_54 = Iterator_nextFree_3[Iterator_firstFree_4]
		set Iterator_typeId[this_54] = 837
	endif
	set Iterator_current_3[this_54] = SimpleSynchronizer_LinkedListModule_first
	set Iterator_destroyOnClose[this_54] = false
	if BackIterator_firstFree_4 == 0 then
		if BackIterator_maxIndex_4 < 32768 then
			set BackIterator_maxIndex_4 = BackIterator_maxIndex_4 + 1
		else
			call error("Out of memory: Could not create BackIterator.")
		endif
	else
		set BackIterator_firstFree_4 = BackIterator_firstFree_4 - 1
	endif
	set temp = EVENT_PLAYER_UNIT_SELECTED
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_55 = EventListener_maxIndex
			set EventListener_typeId[this_55] = 777
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_55 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_55] = 777
	endif
	set EventListener_eventId[this_55] = 0
	set EventListener_next[this_55] = 0
	set EventListener_prev[this_55] = 0
	set id = ClosureEvents_eventidToIndex[GetHandleId(temp)]
	if id == 0 then
		set id = registerEventId(temp)
	endif
	set EventListener_eventId[this_55] = id
	if EventListener_generalListenersFirsts[EventListener_eventId[this_55]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[this_55]]] = this_55
		set EventListener_next[this_55] = EventListener_generalListenersFirsts[EventListener_eventId[this_55]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[this_55]] = this_55
	set temp_2 = EVENT_PLAYER_LEAVE
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_56 = EventListener_maxIndex
			set EventListener_typeId[this_56] = 778
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_56 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_56] = 778
	endif
	set EventListener_eventId[this_56] = 0
	set EventListener_next[this_56] = 0
	set EventListener_prev[this_56] = 0
	set id_2 = ClosureEvents_eventidToIndex[GetHandleId(temp_2)]
	if id_2 == 0 then
		set id_2 = registerEventId(temp_2)
	endif
	set EventListener_eventId[this_56] = id_2
	if EventListener_generalListenersFirsts[EventListener_eventId[this_56]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[this_56]]] = this_56
		set EventListener_next[this_56] = EventListener_generalListenersFirsts[EventListener_eventId[this_56]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[this_56]] = this_56
	call TriggerAddAction(OnUnitEnterLeave_eventTrigger, ref_function_SyncSimple_closure_impl)
	set temp = null
	set temp_2 = null
	return true
endfunction

function init_Table takes nothing returns boolean
	set Table_ht = InitHashtable()
	return true
endfunction

function init_TargetsAllowed takes nothing returns boolean
	return true
endfunction

function init_TerrainUtils takes nothing returns boolean
	call SetItemVisible(CreateItem(2003790951, 0., 0.), false)
	call Rect(0., 0., 128., 128.)
	set TerrainUtils_TILES_X = R2I(MapBounds_boundMax_x - MapBounds_boundMin_x) / 128 + 1
	set TerrainUtils_TILES_Y = R2I(MapBounds_boundMax_y - MapBounds_boundMin_y) / 128 + 1
	return true
endfunction

function init_TestCommands takes nothing returns boolean
	local integer this_54
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_54 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_54] = 805
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_54 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_54] = 805
	endif
	if  not try(this_54) then
		call error("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
	endif
	return true
endfunction

function init_TextTagUtil takes nothing returns boolean
	local integer i_3
	set TextTagRecycler_recycled = new_LinkedList()
	set TextTagHandle_lookup = new_HashMap()
	set i_3 = 0
	loop
		exitwhen i_3 > 89
		call TextTagRecycler_recycleTextTag(TextTagRecycler_getTextTag())
		set i_3 = i_3 + 1
	endloop
	return true
endfunction

function init_Textures takes nothing returns boolean
	return true
endfunction

function init_TileData takes nothing returns boolean
	return true
endfunction

function init_TimerUtils takes nothing returns boolean
	set TimerUtils_timerData = new_Table()
	call CreateTimer()
	call CreateTrigger()
	return true
endfunction

function init_TypeCasting takes nothing returns boolean
	set TypeCasting_typecastdata = new_Table()
	call SaveStr(Table_ht, TypeCasting_typecastdata, 0, "")
	return true
endfunction

function init_UI takes nothing returns boolean
	return true
endfunction

function init_UnitData takes nothing returns boolean
	return true
endfunction

function init_UnitIds takes nothing returns boolean
	return true
endfunction

function init_UnitIndexer takes nothing returns boolean
	set UnitIndexer_onIndexTrigger = CreateTrigger()
	set UnitIndexer_onDeindexTrigger = CreateTrigger()
	set UnitIndexer_indexedUnit = null
	set UnitIndexer_deindexedUnit = null
	call TriggerAddCondition(OnUnitEnterLeave_eventTrigger, Filter(ref_function_UnitIndexer_closure_impl))
	call TriggerAddAction(OnUnitEnterLeave_eventTrigger, ref_function_UnitIndexer_closure_impl_2)
	return true
endfunction

function init_UnitPropertyCommands takes nothing returns boolean
	local integer this_54
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_54 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_54] = 811
		else
			call error("Out of memory: Could not create Closure.")
			set this_54 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_54 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_54] = 811
	endif
	if  not try(this_54) then
		call error("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
	endif
	return true
endfunction

function init_UnitTag takes nothing returns boolean
	local integer this_54
	local integer this_55
	local integer this_56
	set UnitTag_cullRect = Rect(-2000., -2000., 2000., 2000.)
	set UnitTag_centerFactor = 4.5
	set UnitTag_staticOffset = 64.0
	set UnitTag_currentlyVisible = new_LinkedList()
	if Iterator_firstFree_5 == 0 then
		if Iterator_maxIndex_5 < 32768 then
			set Iterator_maxIndex_5 = Iterator_maxIndex_5 + 1
			set this_54 = Iterator_maxIndex_5
		else
			call error("Out of memory: Could not create Iterator.")
			set this_54 = 0
		endif
	else
		set Iterator_firstFree_5 = Iterator_firstFree_5 - 1
		set this_54 = Iterator_nextFree_4[Iterator_firstFree_5]
	endif
	set Iterator_current_4[this_54] = TextTagUpdater_LinkedListModule_first
	set TextTagUpdater_LinkedListModule_staticItr = this_54
	if BackIterator_firstFree_5 == 0 then
		if BackIterator_maxIndex_5 < 32768 then
			set BackIterator_maxIndex_5 = BackIterator_maxIndex_5 + 1
		else
			call error("Out of memory: Could not create BackIterator.")
		endif
	else
		set BackIterator_firstFree_5 = BackIterator_firstFree_5 - 1
	endif
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set this_55 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[this_55] = 659
		else
			call error("Out of memory: Could not create Closure.")
			set this_55 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set this_55 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[this_55] = 659
	endif
	call CallbackPeriodic_start(this_55, 0.125)
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set this_56 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[this_56] = 660
		else
			call error("Out of memory: Could not create Closure.")
			set this_56 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set this_56 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[this_56] = 660
	endif
	call CallbackPeriodic_start(this_56, 0.030)
	return true
endfunction

function init_Units takes nothing returns boolean
	return true
endfunction

function init_Vectors takes nothing returns boolean
	set Vectors_tempLoc = Location(0., 0.)
	return true
endfunction

function init_WeatherEffects takes nothing returns boolean
	return true
endfunction

function init_XorEncryptor takes nothing returns boolean
	set XorEncryptor_KEY[0] = 31
	set XorEncryptor_KEY[1] = 45
	set XorEncryptor_KEY[2] = 79
	set XorEncryptor_KEY[3] = 82
	set XorEncryptor_KEY[4] = 73
	set XorEncryptor_KEY[5] = 45
	set XorEncryptor_KEY[6] = 79
	set XorEncryptor_KEY[7] = 82
	set XorEncryptor_KEY[8] = 73
	set XorEncryptor_KEY[9] = 0
	set XorEncryptor_KEY[10] = 65
	set XorEncryptor_KEY[11] = 87
	set XorEncryptor_KEY[12] = 69
	set XorEncryptor_KEY[13] = 83
	set XorEncryptor_KEY[14] = 79
	set XorEncryptor_KEY[15] = 77
	set XorEncryptor_KEY[16] = 69
	set XorEncryptor_KEY[17] = 0
	set XorEncryptor_KEY[18] = 65
	set XorEncryptor_KEY[19] = 78
	set XorEncryptor_KEY[20] = 68
	set XorEncryptor_KEY[21] = 0
	set XorEncryptor_KEY[22] = 87
	set XorEncryptor_KEY[23] = 72
	set XorEncryptor_KEY[24] = 79
	set XorEncryptor_KEY[25] = 76
	set XorEncryptor_KEY[26] = 69
	set XorEncryptor_KEY[27] = 83
	set XorEncryptor_KEY[28] = 79
	set XorEncryptor_KEY[29] = 77
	set XorEncryptor_KEY[30] = 69
	return true
endfunction

function init_YPrinting takes nothing returns boolean
	return true
endfunction

function init_YUnit takes nothing returns boolean
	call TriggerAddCondition(UnitIndexer_onIndexTrigger, Condition(ref_function_YUnit_closure_impl))
	call TriggerAddCondition(UnitIndexer_onDeindexTrigger, Condition(ref_function_YUnit_closure_impl_2))
	return true
endfunction

function initGlobals takes nothing returns nothing
	set ref_function_init_Abilities = function init_Abilities
	set ref_function_init_AbilityIds = function init_AbilityIds
	set ref_function_init_Real = function init_Real
	set ref_function_init_Integer = function init_Integer
	set ref_function_init_Angle = function init_Angle
	set ref_function_init_String = function init_String
	set ref_function_init_Vectors = function init_Vectors
	set ref_function_init_Maths = function init_Maths
	set ref_function_init_Player = function init_Player
	set ref_function_init_Printing = function init_Printing
	set ref_function_init_Basics = function init_Basics
	set ref_function_init_GameTimer = function init_GameTimer
	set ref_function_init_MagicFunctions = function init_MagicFunctions
	set ref_function_init_ErrorHandling = function init_ErrorHandling
	set ref_function_init_Matrices = function init_Matrices
	set ref_function_init_Quaternion = function init_Quaternion
	set ref_function_init_Table = function init_Table
	set ref_function_init_Playercolor = function init_Playercolor
	set ref_function_init_Colors = function init_Colors
	set ref_function_init_Group = function init_Group
	set ref_function_init_Lightning = function init_Lightning
	set ref_function_init_WeatherEffects = function init_WeatherEffects
	set ref_function_init_TypeCasting = function init_TypeCasting
	set ref_function_init_BitwiseInit = function init_BitwiseInit
	set ref_function_init_TargetsAllowed = function init_TargetsAllowed
	set ref_function_init_Buildings = function init_Buildings
	set ref_function_init_Doodads = function init_Doodads
	set ref_function_init_Icons = function init_Icons
	set ref_function_init_Objects = function init_Objects
	set ref_function_init_Sounds = function init_Sounds
	set ref_function_init_Soundsets = function init_Soundsets
	set ref_function_init_Textures = function init_Textures
	set ref_function_init_UI = function init_UI
	set ref_function_init_Units = function init_Units
	set ref_function_init_UnitIds = function init_UnitIds
	set ref_function_init_HashList = function init_HashList
	set ref_function_init_EventHelper = function init_EventHelper
	set ref_function_init_RegisterEvents = function init_RegisterEvents
	set ref_function_init_TimerUtils = function init_TimerUtils
	set ref_function_init_ClosureTimers = function init_ClosureTimers
	set ref_function_init_MapBounds = function init_MapBounds
	set ref_function_init_DummyRecycler = function init_DummyRecycler
	set ref_function_init_ClosureForGroups = function init_ClosureForGroups
	set ref_function_init_LinkedList = function init_LinkedList
	set ref_function_init_StringUtils = function init_StringUtils
	set ref_function_init_ObjectIds = function init_ObjectIds
	set ref_function_init_Preloader = function init_Preloader
	set ref_function_init_ObjectIdGenerator = function init_ObjectIdGenerator
	set ref_function_init_OnUnitEnterLeave = function init_OnUnitEnterLeave
	set ref_function_init_UnitIndexer = function init_UnitIndexer
	set ref_function_init_ClosureEvents = function init_ClosureEvents
	set ref_function_init_Execute = function init_Execute
	set ref_function_init_SyncSimple = function init_SyncSimple
	set ref_function_init_BigString = function init_BigString
	set ref_function_init_SafetyChecks = function init_SafetyChecks
	set ref_function_init_NetworkConfig = function init_NetworkConfig
	set ref_function_init_GamecacheKeys = function init_GamecacheKeys
	set ref_function_init_Metadata = function init_Metadata
	set ref_function_init_StringEncoder = function init_StringEncoder
	set ref_function_init_Network = function init_Network
	set ref_function_init_Orders = function init_Orders
	set ref_function_init_PacketIO = function init_PacketIO
	set ref_function_init_Base64 = function init_Base64
	set ref_function_init_TerrainUtils = function init_TerrainUtils
	set ref_function_init_ChannelAbilityPreset = function init_ChannelAbilityPreset
	set ref_function_init_HashSet = function init_HashSet
	set ref_function_init_ColorUtil = function init_ColorUtil
	set ref_function_init_OrderFactory = function init_OrderFactory
	set ref_function_init_TextTagUtil = function init_TextTagUtil
	set ref_function_init_YPrinting = function init_YPrinting
	set ref_function_init_XorEncryptor = function init_XorEncryptor
	set ref_function_init_StaticData = function init_StaticData
	set ref_function_init_DestructableUtil = function init_DestructableUtil
	set ref_function_init_RegionSpecifier = function init_RegionSpecifier
	set ref_function_init_Atmospheric = function init_Atmospheric
	set ref_function_init_CodegenUtils = function init_CodegenUtils
	set ref_function_init_AutoGenerated = function init_AutoGenerated
	set ref_function_init_BigInt = function init_BigInt
	set ref_function_init_BigInt2 = function init_BigInt2
	set ref_function_init_Scripting = function init_Scripting
	set ref_function_init_Spawner = function init_Spawner
	set ref_function_init_Registry = function init_Registry
	set ref_function_init_Permissions = function init_Permissions
	set ref_function_init_PlayerSettings = function init_PlayerSettings
	set ref_function_init_UnitTag = function init_UnitTag
	set ref_function_init_Config = function init_Config
	set ref_function_init_EffectProxy = function init_EffectProxy
	set ref_function_init_YUnit = function init_YUnit
	set ref_function_init_Command = function init_Command
	set ref_function_init_FormationMovement = function init_FormationMovement
	set ref_function_init_HeightField = function init_HeightField
	set ref_function_init_HeightTools = function init_HeightTools
	set ref_function_init_InstantBuild = function init_InstantBuild
	set ref_function_init_TileData = function init_TileData
	set ref_function_init_UnitData = function init_UnitData
	set ref_function_init_MiscCommands = function init_MiscCommands
	set ref_function_init_MiscInit = function init_MiscInit
	set ref_function_init_PlayerSettingsCommands = function init_PlayerSettingsCommands
	set ref_function_init_RegionCommands = function init_RegionCommands
	set ref_function_init_TestCommands = function init_TestCommands
	set ref_function_init_UnitPropertyCommands = function init_UnitPropertyCommands
	set ref_function_EventListener_generalEventCallback = function EventListener_generalEventCallback
	set ref_function_ClosureEvents_closure_impl = function ClosureEvents_closure_impl_5
	set ref_function_ClosureEvents_closure_impl_2 = function ClosureEvents_closure_impl_3
	set ref_function_ClosureEvents_closure_impl_3 = function ClosureEvents_closure_impl_4
	set ref_function_ClosureEvents_closure_impl_4 = function ClosureEvents_closure_impl_2
	set ref_function_ClosureEvents_closure_impl_5 = function ClosureEvents_closure_impl_6
	set ref_function_ClosureEvents_closure_impl_6 = function ClosureEvents_closure_impl_7
	set ref_function_ClosureForGroups_closure_impl = function ClosureForGroups_closure_impl
	set ref_function_CallbackPeriodic_staticCallback = function CallbackPeriodic_staticCallback
	set ref_function_CallbackSingle_closure_impl = function CallbackSingle_closure_impl
	set ref_function_executeCurrentCallback = function executeCurrentCallback
	set ref_function_GameTimer_closure_impl = function GameTimer_closure_impl
	set ref_function_MiscInit_closure_impl = function MiscInit_closure_impl_3
	set ref_function_OnUnitEnterLeave_closure_impl = function OnUnitEnterLeave_closure_impl_4
	set ref_function_OnUnitEnterLeave_closure_impl_2 = function OnUnitEnterLeave_closure_impl_2
	set ref_function_OnUnitEnterLeave_closure_impl_3 = function OnUnitEnterLeave_closure_impl_3
	set ref_function_RegisterEvents_closure_impl = function RegisterEvents_closure_impl
	set ref_function_SyncSimple_closure_impl = function SyncSimple_closure_impl_3
	set ref_function_UnitIndexer_closure_impl = function UnitIndexer_closure_impl
	set ref_function_UnitIndexer_closure_impl_2 = function UnitIndexer_closure_impl_2
	set ref_function_YUnit_closure_impl = function YUnit_closure_impl_2
	set ref_function_YUnit_closure_impl_2 = function YUnit_closure_impl
endfunction

function main takes nothing returns nothing
	local trigger initTrig
	call initGlobals()
	call SetCameraBounds(( - 3328.0) + GetCameraMargin(CAMERA_MARGIN_LEFT), ( - 3584.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 3328.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 3072.0 - GetCameraMargin(CAMERA_MARGIN_TOP), ( - 3328.0) + GetCameraMargin(CAMERA_MARGIN_LEFT), 3072.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 3328.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), ( - 3584.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM))
	call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
	call NewSoundEnvironment("Default")
	call SetAmbientDaySound("LordaeronSummerDay")
	call SetAmbientNightSound("LordaeronSummerNight")
	call SetMapMusic("Music", true, 0)
	call CreateUnit(Player(0), 1214409837,  - 126.6, 102.2, 228.600)
	call InitBlizzard()
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Abilities))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Abilities.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_AbilityIds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package AbilityIds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Real))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Real.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Integer))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Integer.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Angle))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Angle.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_String))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package String.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Vectors))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Vectors.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Maths))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Maths.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Player))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Player.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Printing))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Printing.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Basics))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Basics.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_GameTimer))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package GameTimer.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MagicFunctions))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MagicFunctions.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ErrorHandling))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ErrorHandling.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Matrices))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Matrices.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Quaternion))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Quaternion.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Table))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Table.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Playercolor))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Playercolor.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Colors))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Colors.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Group))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Group.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Lightning))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Lightning.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_WeatherEffects))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package WeatherEffects.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TypeCasting))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TypeCasting.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_BitwiseInit))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package BitwiseInit.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TargetsAllowed))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TargetsAllowed.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Buildings))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Buildings.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Doodads))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Doodads.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Icons))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Icons.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Objects))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Objects.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Sounds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Sounds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Soundsets))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Soundsets.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Textures))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Textures.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_UI))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package UI.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Units))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Units.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_UnitIds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package UnitIds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_HashList))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package HashList.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_EventHelper))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package EventHelper.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_RegisterEvents))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package RegisterEvents.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TimerUtils))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TimerUtils.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ClosureTimers))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ClosureTimers.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MapBounds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MapBounds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_DummyRecycler))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package DummyRecycler.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ClosureForGroups))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ClosureForGroups.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_LinkedList))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package LinkedList.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_StringUtils))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package StringUtils.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ObjectIds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ObjectIds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Preloader))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Preloader.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ObjectIdGenerator))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ObjectIdGenerator.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_OnUnitEnterLeave))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package OnUnitEnterLeave.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_UnitIndexer))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package UnitIndexer.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ClosureEvents))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ClosureEvents.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Execute))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Execute.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_SyncSimple))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package SyncSimple.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_BigString))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package BigString.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_SafetyChecks))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package SafetyChecks.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_NetworkConfig))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package NetworkConfig.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_GamecacheKeys))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package GamecacheKeys.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Metadata))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Metadata.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_StringEncoder))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package StringEncoder.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Network))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Network.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Orders))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Orders.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_PacketIO))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package PacketIO.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Base64))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Base64.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TerrainUtils))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TerrainUtils.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ChannelAbilityPreset))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ChannelAbilityPreset.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_HashSet))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package HashSet.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ColorUtil))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ColorUtil.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_OrderFactory))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package OrderFactory.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TextTagUtil))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TextTagUtil.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_YPrinting))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package YPrinting.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_XorEncryptor))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package XorEncryptor.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_StaticData))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package StaticData.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_DestructableUtil))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package DestructableUtil.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_RegionSpecifier))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package RegionSpecifier.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Atmospheric))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Atmospheric.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_CodegenUtils))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package CodegenUtils.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_AutoGenerated))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package AutoGenerated.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_BigInt))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package BigInt.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_BigInt2))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package BigInt2.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Scripting))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Scripting.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Spawner))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Spawner.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Registry))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Registry.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Permissions))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Permissions.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_PlayerSettings))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package PlayerSettings.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_UnitTag))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package UnitTag.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Config))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Config.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_EffectProxy))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package EffectProxy.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_YUnit))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package YUnit.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Command))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Command.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_FormationMovement))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package FormationMovement.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_HeightField))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package HeightField.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_HeightTools))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package HeightTools.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_InstantBuild))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package InstantBuild.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TileData))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TileData.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_UnitData))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package UnitData.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MiscCommands))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MiscCommands.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MiscInit))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MiscInit.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_PlayerSettingsCommands))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package PlayerSettingsCommands.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_RegionCommands))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package RegionCommands.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TestCommands))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TestCommands.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_UnitPropertyCommands))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package UnitPropertyCommands.")
	endif
	call TriggerClearConditions(initTrig)
	call DestroyTrigger(initTrig)
	set initTrig = null
endfunction

function InitAllyPriorities takes nothing returns nothing
	call SetStartLocPrioCount(0, 23)
	call SetStartLocPrio(0, 0, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 1, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 2, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 11, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 12, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(1, 23)
	call SetStartLocPrio(1, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 1, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 2, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 11, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 12, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(2, 23)
	call SetStartLocPrio(2, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 2, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 11, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 12, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(3, 23)
	call SetStartLocPrio(3, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 11, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 12, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(4, 23)
	call SetStartLocPrio(4, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 11, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 12, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(5, 23)
	call SetStartLocPrio(5, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 11, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 12, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(6, 23)
	call SetStartLocPrio(6, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 11, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 12, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(7, 23)
	call SetStartLocPrio(7, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 11, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 12, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(8, 23)
	call SetStartLocPrio(8, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 11, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 12, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(9, 23)
	call SetStartLocPrio(9, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 11, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 12, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(10, 23)
	call SetStartLocPrio(10, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 11, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 12, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(11, 23)
	call SetStartLocPrio(11, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 10, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 11, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 12, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(12, 23)
	call SetStartLocPrio(12, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 10, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 11, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 12, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(13, 23)
	call SetStartLocPrio(13, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 10, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 11, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 12, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(14, 23)
	call SetStartLocPrio(14, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 10, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 11, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 12, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 13, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(15, 23)
	call SetStartLocPrio(15, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 10, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 11, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 12, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 13, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 14, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(16, 23)
	call SetStartLocPrio(16, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 10, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 11, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 12, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 13, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 14, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 15, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(17, 23)
	call SetStartLocPrio(17, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 10, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 11, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 12, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 13, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 14, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 15, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 16, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(18, 23)
	call SetStartLocPrio(18, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 10, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 11, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 12, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 13, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 14, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 15, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 16, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 17, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(18, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(19, 23)
	call SetStartLocPrio(19, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 10, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 11, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 12, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 13, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 14, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 15, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 16, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 17, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 18, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 19, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(19, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(20, 23)
	call SetStartLocPrio(20, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 10, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 11, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 12, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 13, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 14, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 15, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 16, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 17, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 18, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 19, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 20, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(20, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(21, 23)
	call SetStartLocPrio(21, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 10, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 11, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 12, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 13, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 14, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 15, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 16, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 17, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 18, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 19, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 20, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 21, 22, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(21, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(22, 23)
	call SetStartLocPrio(22, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 10, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 11, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 12, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 13, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 14, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 15, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 16, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 17, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 18, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 19, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 20, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 21, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(22, 22, 23, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(23, 23)
	call SetStartLocPrio(23, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 10, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 11, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 12, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 13, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 14, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 15, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 16, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 17, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 18, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 19, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 20, 20, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 21, 21, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(23, 22, 22, MAP_LOC_PRIO_HIGH)
endfunction

function InitCustomPlayerSlots takes nothing returns nothing
	call SetPlayerStartLocation(Player(0), 0)
	call ForcePlayerStartLocation(Player(0), 0)
	call SetPlayerColor(Player(0), ConvertPlayerColor(0))
	call SetPlayerRacePreference(Player(0), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(0), true)
	call SetPlayerController(Player(0), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(1), 1)
	call ForcePlayerStartLocation(Player(1), 1)
	call SetPlayerColor(Player(1), ConvertPlayerColor(1))
	call SetPlayerRacePreference(Player(1), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(1), true)
	call SetPlayerController(Player(1), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(2), 2)
	call ForcePlayerStartLocation(Player(2), 2)
	call SetPlayerColor(Player(2), ConvertPlayerColor(2))
	call SetPlayerRacePreference(Player(2), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(2), true)
	call SetPlayerController(Player(2), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(3), 3)
	call ForcePlayerStartLocation(Player(3), 3)
	call SetPlayerColor(Player(3), ConvertPlayerColor(3))
	call SetPlayerRacePreference(Player(3), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(3), true)
	call SetPlayerController(Player(3), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(4), 4)
	call ForcePlayerStartLocation(Player(4), 4)
	call SetPlayerColor(Player(4), ConvertPlayerColor(4))
	call SetPlayerRacePreference(Player(4), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(4), true)
	call SetPlayerController(Player(4), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(5), 5)
	call ForcePlayerStartLocation(Player(5), 5)
	call SetPlayerColor(Player(5), ConvertPlayerColor(5))
	call SetPlayerRacePreference(Player(5), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(5), true)
	call SetPlayerController(Player(5), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(6), 6)
	call ForcePlayerStartLocation(Player(6), 6)
	call SetPlayerColor(Player(6), ConvertPlayerColor(6))
	call SetPlayerRacePreference(Player(6), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(6), true)
	call SetPlayerController(Player(6), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(7), 7)
	call ForcePlayerStartLocation(Player(7), 7)
	call SetPlayerColor(Player(7), ConvertPlayerColor(7))
	call SetPlayerRacePreference(Player(7), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(7), true)
	call SetPlayerController(Player(7), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(8), 8)
	call ForcePlayerStartLocation(Player(8), 8)
	call SetPlayerColor(Player(8), ConvertPlayerColor(8))
	call SetPlayerRacePreference(Player(8), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(8), true)
	call SetPlayerController(Player(8), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(9), 9)
	call ForcePlayerStartLocation(Player(9), 9)
	call SetPlayerColor(Player(9), ConvertPlayerColor(9))
	call SetPlayerRacePreference(Player(9), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(9), true)
	call SetPlayerController(Player(9), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(10), 10)
	call ForcePlayerStartLocation(Player(10), 10)
	call SetPlayerColor(Player(10), ConvertPlayerColor(10))
	call SetPlayerRacePreference(Player(10), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(10), true)
	call SetPlayerController(Player(10), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(11), 11)
	call ForcePlayerStartLocation(Player(11), 11)
	call SetPlayerColor(Player(11), ConvertPlayerColor(11))
	call SetPlayerRacePreference(Player(11), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(11), true)
	call SetPlayerController(Player(11), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(12), 12)
	call ForcePlayerStartLocation(Player(12), 12)
	call SetPlayerColor(Player(12), ConvertPlayerColor(12))
	call SetPlayerRacePreference(Player(12), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(12), true)
	call SetPlayerController(Player(12), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(13), 13)
	call ForcePlayerStartLocation(Player(13), 13)
	call SetPlayerColor(Player(13), ConvertPlayerColor(13))
	call SetPlayerRacePreference(Player(13), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(13), true)
	call SetPlayerController(Player(13), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(14), 14)
	call ForcePlayerStartLocation(Player(14), 14)
	call SetPlayerColor(Player(14), ConvertPlayerColor(14))
	call SetPlayerRacePreference(Player(14), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(14), true)
	call SetPlayerController(Player(14), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(15), 15)
	call ForcePlayerStartLocation(Player(15), 15)
	call SetPlayerColor(Player(15), ConvertPlayerColor(15))
	call SetPlayerRacePreference(Player(15), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(15), true)
	call SetPlayerController(Player(15), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(16), 16)
	call ForcePlayerStartLocation(Player(16), 16)
	call SetPlayerColor(Player(16), ConvertPlayerColor(16))
	call SetPlayerRacePreference(Player(16), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(16), true)
	call SetPlayerController(Player(16), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(17), 17)
	call ForcePlayerStartLocation(Player(17), 17)
	call SetPlayerColor(Player(17), ConvertPlayerColor(17))
	call SetPlayerRacePreference(Player(17), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(17), true)
	call SetPlayerController(Player(17), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(18), 18)
	call ForcePlayerStartLocation(Player(18), 18)
	call SetPlayerColor(Player(18), ConvertPlayerColor(18))
	call SetPlayerRacePreference(Player(18), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(18), true)
	call SetPlayerController(Player(18), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(19), 19)
	call ForcePlayerStartLocation(Player(19), 19)
	call SetPlayerColor(Player(19), ConvertPlayerColor(19))
	call SetPlayerRacePreference(Player(19), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(19), true)
	call SetPlayerController(Player(19), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(20), 20)
	call ForcePlayerStartLocation(Player(20), 20)
	call SetPlayerColor(Player(20), ConvertPlayerColor(20))
	call SetPlayerRacePreference(Player(20), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(20), true)
	call SetPlayerController(Player(20), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(21), 21)
	call ForcePlayerStartLocation(Player(21), 21)
	call SetPlayerColor(Player(21), ConvertPlayerColor(21))
	call SetPlayerRacePreference(Player(21), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(21), true)
	call SetPlayerController(Player(21), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(22), 22)
	call ForcePlayerStartLocation(Player(22), 22)
	call SetPlayerColor(Player(22), ConvertPlayerColor(22))
	call SetPlayerRacePreference(Player(22), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(22), true)
	call SetPlayerController(Player(22), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(23), 23)
	call ForcePlayerStartLocation(Player(23), 23)
	call SetPlayerColor(Player(23), ConvertPlayerColor(23))
	call SetPlayerRacePreference(Player(23), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(23), true)
	call SetPlayerController(Player(23), MAP_CONTROL_USER)
endfunction

function config takes nothing returns nothing
	local integer playerIndex
	local integer index
	local integer playerIndex_2
	local integer index_2
	local integer playerIndex_3
	local integer index_3
	local integer playerIndex_4
	local integer index_4
	local integer playerIndex_5
	local integer index_5
	local integer playerIndex_6
	local integer index_6
	local integer playerIndex_7
	local integer index_7
	local integer playerIndex_8
	local integer index_8
	local integer playerIndex_9
	local integer index_9
	local integer playerIndex_10
	local integer index_10
	local integer playerIndex_11
	local integer index_11
	local integer playerIndex_12
	local integer index_12
	local integer playerIndex_13
	local integer index_13
	local integer playerIndex_14
	local integer index_14
	local integer playerIndex_15
	local integer index_15
	local integer playerIndex_16
	local integer index_16
	local integer playerIndex_17
	local integer index_17
	local integer playerIndex_18
	local integer index_18
	local integer playerIndex_19
	local integer index_19
	local integer playerIndex_20
	local integer index_20
	local integer playerIndex_21
	local integer index_21
	local integer playerIndex_22
	local integer index_22
	local integer playerIndex_23
	local integer index_23
	local integer playerIndex_24
	local integer index_24
	call SetMapName("TRIGSTR_008")
	call SetMapDescription("")
	call SetPlayers(24)
	call SetTeams(24)
	call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
	call DefineStartLocation(0,  - 128.0, 64.0)
	call DefineStartLocation(1,  - 128.0, 64.0)
	call DefineStartLocation(2,  - 128.0, 64.0)
	call DefineStartLocation(3,  - 128.0, 64.0)
	call DefineStartLocation(4,  - 128.0, 64.0)
	call DefineStartLocation(5,  - 128.0, 64.0)
	call DefineStartLocation(6,  - 128.0, 64.0)
	call DefineStartLocation(7,  - 128.0, 64.0)
	call DefineStartLocation(8,  - 128.0, 64.0)
	call DefineStartLocation(9,  - 128.0, 64.0)
	call DefineStartLocation(10,  - 128.0, 64.0)
	call DefineStartLocation(11,  - 128.0, 64.0)
	call DefineStartLocation(12,  - 128.0, 64.0)
	call DefineStartLocation(13,  - 128.0, 64.0)
	call DefineStartLocation(14,  - 128.0, 64.0)
	call DefineStartLocation(15,  - 128.0, 64.0)
	call DefineStartLocation(16,  - 128.0, 64.0)
	call DefineStartLocation(17,  - 128.0, 64.0)
	call DefineStartLocation(18,  - 128.0, 64.0)
	call DefineStartLocation(19,  - 128.0, 64.0)
	call DefineStartLocation(20,  - 128.0, 64.0)
	call DefineStartLocation(21,  - 128.0, 64.0)
	call DefineStartLocation(22,  - 128.0, 64.0)
	call DefineStartLocation(23,  - 128.0, 64.0)
	call InitCustomPlayerSlots()
	set playerIndex = GetPlayerId(Player(0))
	if  not bj_slotControlReady then
		set index = 0
		loop
			set bj_slotControlUsed[index] = false
			set index = index + 1
			exitwhen index == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex] = true
	set playerIndex_2 = GetPlayerId(Player(1))
	if  not bj_slotControlReady then
		set index_2 = 0
		loop
			set bj_slotControlUsed[index_2] = false
			set index_2 = index_2 + 1
			exitwhen index_2 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_2] = true
	set playerIndex_3 = GetPlayerId(Player(2))
	if  not bj_slotControlReady then
		set index_3 = 0
		loop
			set bj_slotControlUsed[index_3] = false
			set index_3 = index_3 + 1
			exitwhen index_3 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_3] = true
	set playerIndex_4 = GetPlayerId(Player(3))
	if  not bj_slotControlReady then
		set index_4 = 0
		loop
			set bj_slotControlUsed[index_4] = false
			set index_4 = index_4 + 1
			exitwhen index_4 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_4] = true
	set playerIndex_5 = GetPlayerId(Player(4))
	if  not bj_slotControlReady then
		set index_5 = 0
		loop
			set bj_slotControlUsed[index_5] = false
			set index_5 = index_5 + 1
			exitwhen index_5 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_5] = true
	set playerIndex_6 = GetPlayerId(Player(5))
	if  not bj_slotControlReady then
		set index_6 = 0
		loop
			set bj_slotControlUsed[index_6] = false
			set index_6 = index_6 + 1
			exitwhen index_6 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_6] = true
	set playerIndex_7 = GetPlayerId(Player(6))
	if  not bj_slotControlReady then
		set index_7 = 0
		loop
			set bj_slotControlUsed[index_7] = false
			set index_7 = index_7 + 1
			exitwhen index_7 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_7] = true
	set playerIndex_8 = GetPlayerId(Player(7))
	if  not bj_slotControlReady then
		set index_8 = 0
		loop
			set bj_slotControlUsed[index_8] = false
			set index_8 = index_8 + 1
			exitwhen index_8 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_8] = true
	set playerIndex_9 = GetPlayerId(Player(8))
	if  not bj_slotControlReady then
		set index_9 = 0
		loop
			set bj_slotControlUsed[index_9] = false
			set index_9 = index_9 + 1
			exitwhen index_9 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_9] = true
	set playerIndex_10 = GetPlayerId(Player(9))
	if  not bj_slotControlReady then
		set index_10 = 0
		loop
			set bj_slotControlUsed[index_10] = false
			set index_10 = index_10 + 1
			exitwhen index_10 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_10] = true
	set playerIndex_11 = GetPlayerId(Player(10))
	if  not bj_slotControlReady then
		set index_11 = 0
		loop
			set bj_slotControlUsed[index_11] = false
			set index_11 = index_11 + 1
			exitwhen index_11 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_11] = true
	set playerIndex_12 = GetPlayerId(Player(11))
	if  not bj_slotControlReady then
		set index_12 = 0
		loop
			set bj_slotControlUsed[index_12] = false
			set index_12 = index_12 + 1
			exitwhen index_12 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_12] = true
	set playerIndex_13 = GetPlayerId(Player(12))
	if  not bj_slotControlReady then
		set index_13 = 0
		loop
			set bj_slotControlUsed[index_13] = false
			set index_13 = index_13 + 1
			exitwhen index_13 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_13] = true
	set playerIndex_14 = GetPlayerId(Player(13))
	if  not bj_slotControlReady then
		set index_14 = 0
		loop
			set bj_slotControlUsed[index_14] = false
			set index_14 = index_14 + 1
			exitwhen index_14 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_14] = true
	set playerIndex_15 = GetPlayerId(Player(14))
	if  not bj_slotControlReady then
		set index_15 = 0
		loop
			set bj_slotControlUsed[index_15] = false
			set index_15 = index_15 + 1
			exitwhen index_15 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_15] = true
	set playerIndex_16 = GetPlayerId(Player(15))
	if  not bj_slotControlReady then
		set index_16 = 0
		loop
			set bj_slotControlUsed[index_16] = false
			set index_16 = index_16 + 1
			exitwhen index_16 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_16] = true
	set playerIndex_17 = GetPlayerId(Player(16))
	if  not bj_slotControlReady then
		set index_17 = 0
		loop
			set bj_slotControlUsed[index_17] = false
			set index_17 = index_17 + 1
			exitwhen index_17 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_17] = true
	set playerIndex_18 = GetPlayerId(Player(17))
	if  not bj_slotControlReady then
		set index_18 = 0
		loop
			set bj_slotControlUsed[index_18] = false
			set index_18 = index_18 + 1
			exitwhen index_18 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_18] = true
	set playerIndex_19 = GetPlayerId(Player(18))
	if  not bj_slotControlReady then
		set index_19 = 0
		loop
			set bj_slotControlUsed[index_19] = false
			set index_19 = index_19 + 1
			exitwhen index_19 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_19] = true
	set playerIndex_20 = GetPlayerId(Player(19))
	if  not bj_slotControlReady then
		set index_20 = 0
		loop
			set bj_slotControlUsed[index_20] = false
			set index_20 = index_20 + 1
			exitwhen index_20 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_20] = true
	set playerIndex_21 = GetPlayerId(Player(20))
	if  not bj_slotControlReady then
		set index_21 = 0
		loop
			set bj_slotControlUsed[index_21] = false
			set index_21 = index_21 + 1
			exitwhen index_21 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_21] = true
	set playerIndex_22 = GetPlayerId(Player(21))
	if  not bj_slotControlReady then
		set index_22 = 0
		loop
			set bj_slotControlUsed[index_22] = false
			set index_22 = index_22 + 1
			exitwhen index_22 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_22] = true
	set playerIndex_23 = GetPlayerId(Player(22))
	if  not bj_slotControlReady then
		set index_23 = 0
		loop
			set bj_slotControlUsed[index_23] = false
			set index_23 = index_23 + 1
			exitwhen index_23 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_23] = true
	set playerIndex_24 = GetPlayerId(Player(23))
	if  not bj_slotControlReady then
		set index_24 = 0
		loop
			set bj_slotControlUsed[index_24] = false
			set index_24 = index_24 + 1
			exitwhen index_24 == bj_MAX_PLAYERS
		endloop
		set bj_slotControlReady = true
	endif
	set bj_slotControlUsed[playerIndex_24] = true
	call InitGenericPlayerSlots()
	call InitAllyPriorities()
endfunction

