package EndBoss
import TowerBlockade
import Tower
import Buff
import Boss

constant ENDBOSS_ID = 'n00P'

constant m = new Music('0000', "Sound\\Music\\mp3Music\\Doom.mp3")
constant finalBossMaxHp = 1000
constant castInterval = 10.
constant stageTwoPercentage = .33
constant stageThreePercentage = .10

public class EndBoss extends Boss
	int stage = 1
	int castCounter = 0
	timer castTimer
	LinkedList<string> abilities = new LinkedList<string>()

	construct(vec3 pos, int typId, int bounty, vec2 target)
		super(pos, typId, bounty, target)
		abilities.add("blockade")
		abilities.add("destroyerSummoner")
		castTimer = getTimer()
		castTimer.setData(this castTo int)
		castTimer.startPeriodic(castInterval, function EndBoss.onCastTimer)

	override function update()
		super.update()
		let percentage = actor.getHP() / finalBossMaxHp
		if stage == 1 and percentage < stageTwoPercentage
			stage = 2
			abilities.remove("blockade")
			abilities.add("raiseDead")
			abilities.add("shield")
		if stage == 2 and percentage < stageThreePercentage
			stage = 3
			abilities.remove("shiled")
			abilities.add("batteringRam")

	static function onCastTimer()
		let boss = GetExpiredTimer().getData() castTo EndBoss
		boss.castCounter++
		switch boss.stage
			case 1
				if boss.castCounter mod 3 == 0
					boss.castAbility()
			case 2
				if boss.castCounter mod 2 == 0
					boss.castAbility()
			case 3
				boss.castAbility()

	function castAbility()
		let abilName = abilities.get(GetRandomInt(0, abilities.size() - 1))
		print("Final Boss Casting - " + abilName)
		switch abilName
			case "blockade"
				tryCastTowerBlockade()
			case "destroyerSummoner"
				castDestroyerSummoner()
			default
				print("Ability not implemented :)))")

	function tryCastTowerBlockade()
		GroupEnumUnitsInRange(ENUM_GROUP, pos.x, pos.y, 1000., Filter(() -> begin
			var u = GetFilterUnit()
			return IsUnitType(u, UNIT_TYPE_STRUCTURE) and u.isAlive() and pDatas[u.getOwner().getId()] != null and u.getEntity() instanceof Tower
		end))
		for tower in ENUM_GROUP
			let towerEntity = tower.getUserData() castTo UnitEntity
			var hasBuff = false
			if towerEntity.hasBuffs()
				for bff in towerEntity.getBuffs()
					if bff.typeId == this.typeId
						hasBuff = true
			if not hasBuff
				castTowerBlockade(tower.getUserData() castTo Tower)
				return

	function castTowerBlockade(Tower tower)
		new TowerBlockadeMissile(pos, owner, tower)
		actor.setAnimation("spell")
		doAfter(BLOCKADE_MISSILE_TIME, () -> begin
			new TowerBlockadeBuff(tower)
		end)

	function castDestroyerSummoner()
		// TODO global destroyer summoning

	// TODO function castShield()
	// TODO function castRaiseDead()
	// TODO function switchPlaces()

	ondestroy
		destroy this.abilities
		castTimer.destr()

public class EndBossFight
	LinkedList<EndBoss> bosses

	construct()
		PlayMusic(m.path)
		PlaySoundBJ(gg_snd_AirBargeDeath1)
		print("|cffE62121 Prepare for your end!")
		bosses = new LinkedList<EndBoss>()
		for j = 0 to 0 //startPosCount
			bosses.add(new EndBoss(spawnRects[j].randomPoint().toVec3(), ENDBOSS_ID, 175, middle))

	ondestroy
		destroy bosses
		onVictory()

	
let bossWave = new BossWave(ENDBOSS_ID, 1, 175, gg_snd_AirBargeDeath1, (vec3 startPos, int unitId, int bounty, vec2 middle) -> new EndBoss(startPos, unitId, bounty, middle))

public function startEndBoss()
	printTimed("    |cffFFC519Beat the final boss to win!", 25)
	new EndBossFight()

public function onVictory()
	printTimed("|cffFFCC00>> |cffFFA53ACongratulations, you won!|r\n        |cff7B7B7BThe game will end in 20 seconds.", 25)
	doAfter(20, () -> begin
		for pd in allPlayers
			CustomVictoryBJ(pd.p, true, false)
	end)



class Music
	int spellid
	string path
	real duration
	string name
	
	construct(int id, string path)
		this.spellid = id
		this.path = path
		this.duration = GetSoundFileDuration(path) / 1000.
		this.name = path.substring(path.lastIndexOf("\\") + 1, path.lastIndexOf("."))
