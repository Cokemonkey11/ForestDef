package BossFour
import Boss
import PresetBuffs
import Assets
import GameTimer

buffTuple jumpyBuffId = compiletime(createDummyBuffObject("Hyper Aggression", "Jumps towards any attacker. 4 second cooldown.", "BTNCriticalStrike.blp"))

constant JUMP_DIST = 496*496

public class JumpyBuff extends ShieldBuff
	real lastCast = 0
	construct(real dur)
		super(dur, jumpyBuffId, 6500)
		
	override function update()
		super.update()
		
	override function attackModifier()
		
	override function defenseModifier()
		let attacker = GetEventDamageSource()
		
		if target.actor.getFlyHeight() <= 1 and attacker.getOwner().isEnemyOf(target.owner) and attacker.getPos3Real().distanceToSq(target.getPos()) < JUMP_DIST
			and attacker.getPos3Real().distanceToSq(target.getPos()) > 42 and lastCast + 4. < getElapsedGameTime()
			target.setTarget(GetEventDamageSource().getPos3Real(), 8)
			addEffect(Abilities.roarCaster, target.getPos()).destr()
			lastCast = getElapsedGameTime()
	
public class BossFour extends Boss

	construct(vec3 pos, int typId, int bounty, vec2 target)
		super(pos, typId, bounty, target)
		new JumpyBuff(55555).apply(this)
		
	override function update()
		if actor.getFlyHeight() > 1
			vel += gravity
		super.update()
		actor.setXYZReal(pos)
