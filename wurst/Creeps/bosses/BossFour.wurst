package BossFour
import Boss
import PresetBuffs
import Assets


buffTuple jumpyBuffId

@objgen function genBuff()
	jumpyBuffId = createBuffObject("Unrelaxed", "Jumps when aggrevated", "ReplaceableTextures\\CommandButtons\\BTNCriticalStrike.blp")

constant JUMP_DIST = 470*470

public class JumpyBuff extends ShieldBuff

	construct(real dur)
		super(dur, jumpyBuffId, 6500)
		
	override function update()
		super.update()
		
	override function attackModifier()
		
	override function defenseModifier()
		let attacker = GetEventDamageSource()
		
		if target.actor.getFlyHeight() <= 1 and attacker.getOwner().isEnemyOf(target.owner) and attacker.getPos3Real().distanceToSq(target.getPos()) < JUMP_DIST
			and attacker.getPos3Real().distanceToSq(target.getPos()) > 64
			target.setTarget(GetEventDamageSource().getPos3Real(), 8)
			addEffect(Other.roarcaster, target.getPos()).destr()
	
public class BossFour extends Boss

	construct(vec3 pos, int typId, int bounty, vec2 target)
		super(pos, typId, bounty, target)
		new JumpyBuff(55555).apply(this)
		
	override function update()
		super.update()
		if actor.getFlyHeight() > 1
			vel += gravity
		actor.setXYZReal(pos)
