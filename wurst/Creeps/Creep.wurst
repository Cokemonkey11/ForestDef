package Creep
import Entity
import SoundHelper
import Terrain
import initlater SpawnlingBuff
import Bounty
import Table
import initlater PlayerData
public constant CREEP_OWNER = Player(9)

public int array pow2
	
init
	for int i = 0 to 31
		pow2[i] = R2I(Pow(2, I2R(i)))

public function getPathingNormal(vec2 pos) returns vec2
	int numberOfTests = 60
	real radius = 128
	vec2 addedVecs = vec2(0, 0)
	for int i = 1 to numberOfTests
		vec2 direction = vec2(0,0).polarOffset((i*2*bj_PI/numberOfTests).asAngleRadians(), radius)
		vec2 testPoint = pos + direction
		if isTerrainWalkable(testPoint.x, testPoint.y)
			addedVecs += direction
	return addedVecs.setLength(1.) * (-1.)
	
public function getBounceVec(vec2 vel2, vec2 nor2) returns vec2
		vec3 vel3 = vel2.toVec3()
		vec3 nor3 = nor2.toVec3()
		vec3 pv3 = vel3.project(nor3)
		vec2 pv2 = pv3.toVec2()
		pv2 *= (-1.5)
		vec2 nvel2 = vel2
		nvel2 += pv2
		return nvel2

public class Creep extends UnitEntity
	int bounty
	
	construct(vec3 pos, int typeId, int bounty)
		super(pos, createUnit(CREEP_OWNER, typeId, pos.toVec2(), angle(0)))
		this.bounty = bounty
	
	construct(vec3 pos, int typeId, int bounty, vec2 target)
		super(pos, createUnit(CREEP_OWNER, typeId, pos.toVec2(), angle(0)))
		actor.issuePointOrder("attack", target)
		this.bounty = bounty
		active = false
		
	override function update()
		if vel.lengthSquared() > 1.5
			super.update()
			if isTerrainWalkable(pos.x, pos.y)
				pos += vel
				vel *= (0.975)
			else
				vel = getBounceVec(vel.toVec2(), getPathingNormal(pos.toVec2())).withZ(vel.z)
			actor.setXY(pos.x, pos.y)
		else
			active = false
		
	override function onDeath(unit killer)
		actor.setUserData(0)
		var size = allPlayers.getSize()
		int killBounty = bounty div size + bounty mod size
		int restBounty = 0
		if size > 1
			restBounty = ((bounty-killBounty) / (size - 1.)).round()
			
		killer.getOwner().addGold(killBounty)
		showBountyTextTag(killBounty, actor, killer.getOwner())
		for pd in allPlayers
			if(pd.p != killer.getOwner())
				pd.p.addGold(restBounty)
				showBountyTextTag(restBounty, actor, pd.p)
		super.onDeath(killer)
				
	
public class Boss extends Creep
	static Sound snd = new Sound("Units\\Undead\\Abomination\\AbominationAlternateDeath1.wav", 2320, false)
	effect glow
	construct(vec3 pos, int typeId, int bounty, vec2 target)
		super(pos, typeId, bounty, target)
		glow = actor.addEffect("war3mapImported\\GeneralHeroGlow.mdx", "origin")
		if typeId == 'n003'
			snd.play()
			new SpawnlingBuff(this, 0)
		
	ondestroy
		for p in allPlayers
			p.p.addLumber(1)
		if glow != null
			glow.destr()
		
public class Special extends Creep

	construct(vec3 pos, int typeId, int bounty)
			super(pos, typeId, bounty)
			
	construct(vec3 pos, int typeId, int bounty, vec2 target)
		super(pos, typeId, bounty, target)
		
	override function onDeath(unit killer)
		super.onDeath(killer)
		// Souls
		if actor.getTypeId() == 'u00B'
			for i = 0 to 3
				new Special(pos, 'u00C', 4)
		else if actor.getTypeId() == 'u00C'
			for i = 0 to 2
				new Special(pos, 'u00D', 2)
		else if actor.getTypeId() == 'u00D'
				new Special(pos, 'u00E', 1)
				
			