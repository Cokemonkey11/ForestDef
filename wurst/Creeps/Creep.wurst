package Creep
import Entity
import Bounty
import Table
import initlater PlayerData
public constant CREEP_OWNER = Player(9)

Table data = new Table()

public class Creep extends UnitEntity
	int bounty
	
	construct(vec3 pos, int typeId, int bounty)
		super(pos, createUnit(CREEP_OWNER, typeId, pos.toVec2(), angle(0)))
		this.bounty = bounty
	
	construct(vec3 pos, int typeId, int bounty, vec2 target)
		super(pos, createUnit(CREEP_OWNER, typeId, pos.toVec2(), angle(0)))
		actor.issuePointOrder("attack", target)
		active = false
		this.bounty = bounty
		
	
	override function update()
		if vel.lengthSquared() > .5
			super.update()
			pos += vel
			vel *= 0.925 + (1 / bounty*2)
			actor.setXY(pos.x, pos.y)
		else
			active = false
		
	override function onDeath(unit killer)
		super.onDeath(killer)
		actor.setUserData(0)
		int killBounty = bounty div allPlayers.getSize() + 1
		int restBounty = ((bounty-killBounty) / (allPlayers.getSize() - 1.)).round()
		killer.getOwner().addGold(killBounty)
		showBountyTextTag(killBounty, actor, killer.getOwner())
		for pd in allPlayers
			if(pd.p != killer.getOwner())
				pd.p.addGold(restBounty)
				showBountyTextTag(restBounty, actor, pd.p)
				
	
public class Boss extends Creep

	construct(vec3 pos, int typeId, int bounty, vec2 target)
		super(pos, typeId, bounty, target)
		
	ondestroy
		for p in allPlayers
			p.p.addLumber(2)
		
public class Special extends Creep

	construct(vec3 pos, int typeId, int bounty)
			super(pos, typeId, bounty)
			
	construct(vec3 pos, int typeId, int bounty, vec2 target)
		super(pos, typeId, bounty, target)
		
	override function onDeath(unit killer)
		super.onDeath(killer)
		// Souls
		if actor.getTypeId() == 'u00B'
			for i = 0 to 3
				new Special(pos, 'u00C', 4)
		else if actor.getTypeId() == 'u00C'
			for i = 0 to 3
				new Special(pos, 'u00D', 2)
		else if actor.getTypeId() == 'u00D'
			for i = 0 to 3
				new Special(pos, 'u00E', 1)
				
			