package ShieldKit
import PresetBuffs
import TextTagEntity
import GameTimer
import Assets

public buffTuple buffAbil = compiletime(createBuffObject("Shield Kit", "This unit is protected by a shield that absorbs damage", 
			"BTNDivineIntervention.blp", Abilities.divineShieldTarget))

class ShieldKitBuff extends ShieldBuff
	vec3 pos

	construct(real amount)
		super(90., buffAbil, amount)
		Log.debug("ShieldKit created, dur: " + duration.toString() + " amount: " + amount.toString())

	override function apply(UnitEntity ue) 
		super.apply(ue)
		pos = ue.getPos()

	override function defenseModifier()
		super.defenseModifier()
		if blockAmount > 0
			new TextTagEntity(pos, vec3(GetRandomReal(-2, 2),0, GetRandomReal(8,12)), blockAmount.toInt().toString() , 10, 1., colorA(255, 204, 12, 255))

	override function onEnd()
		if duration == 90.
			new TextTagEntity(pos, vec3(GetRandomReal(-2, 2),0, GetRandomReal(8,12)), "Shield applied" , 13, 2., colorA(255, 204, 12, 255))
		else
			new TextTagEntity(pos, vec3(GetRandomReal(-2, 2),0, GetRandomReal(8,12)), "Shield collapsed" , 13, 2., colorA(255, 204, 12, 255))
		
init
	EventListener.add(EVENT_PLAYER_UNIT_SPELL_EFFECT, () -> begin
		if GetSpellAbilityId() == 'A00D'
			let data = GetSpellTargetUnit().getUserData() castTo UnitEntity
			new ShieldKitBuff(200. + (getElapsedGameTime() * 2.)).apply(data)
	end)
