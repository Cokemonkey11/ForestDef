package ShieldKit
import PresetBuffs
import Entity
import TextTagEntity
import GameConditions

public buffTuple buffAbil

@objgen function genBuff()
	buffAbil = createBuffObject("Shielder", "This unit is protected by a shield that absorbs damage", "ReplaceableTextures\\CommandButtons\\BTNHolyShield.blp")

class ShieldKitBuff extends ShieldBuff
	
	construct(real amount)
		super(90.,buffAbil, amount)
	
	override function defenseModifier()
		super.defenseModifier()
		if blockAmount > 0
			new TextTagEntity(target.getPos(), vec3(GetRandomReal(-2, 2),0, GetRandomReal(7,11)),
								blockAmount.toInt().toString() , 10, 1., colorA(255, 204, 12, 255))

	ondestroy

		new TextTagEntity(target.getPos(), vec3(GetRandomReal(-2, 2),0, GetRandomReal(7,11)),
								"Shield collapsed" , 13, 2., colorA(255, 204, 12, 255))
							
		

function repair()
	if GetSpellAbilityId() == 'A00D'
		let data = GetSpellTargetUnit().getUserData() castTo UnitEntity
		new ShieldKitBuff(200 + (gameTime.getElapsed() * 2)).apply(data)		
	
public function initShieldKit()
	trigger instarep = CreateTrigger(  )
	TriggerRegisterAnyUnitEventBJ( instarep, EVENT_PLAYER_UNIT_SPELL_EFFECT )
	TriggerAddAction( instarep, function repair )
