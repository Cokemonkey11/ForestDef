package WaveTower
import Tower
import Boss
import Assets 

constant real AREA_OF_EFFECT = 200.
public constant int FIRST_WAVE_ID = 'h01N'

public class WaveTower extends Tower
	int level = 1
	
	construct(Tower t)
		super(t)
		active = false
		
	override function onAttack(UnitEntity ud)
		new WaveMissile(pos.withTerrainZ(32),ud.getPos().toVec2(), 22, owner, level, actor)
		
	override function onUpgrade()
		actor.issueImmediateOrderById(OrderId("stop"))
		level++

	
function getBlowDamage(int level) returns real//towerlevel
	return ((85. * level) + 135.)
	
function getDOT(int level) returns real//towerlevel
	return ((6.5 * level))
	
function getKB(int level) returns real//towerlevel
	return (4.5 + (level*level))
	
class WaveMissile extends Projectile
	int level
	group affected
	unit tower
	
	construct(vec3 pos, vec2 target, real speed, player owner, int level, unit tower)
		super( pos, AREA_OF_EFFECT, owner, pos.angleTo2d(target), Other.crushingwavemissile )
		this.tower = tower
		setSpeed(speed)
		setAcc(0.975)
		affected = CreateGroup()
		this.level = level
		
	override function update()
		super.update()
		if(getVel().lengthSquared() < 16)
			done = true
			return
		GroupEnumUnitsInRange(ENUM_GROUP, pos.x, pos.y, AREA_OF_EFFECT, null)
		for u from ENUM_GROUP
			if u.isAliveTrick() and not IsUnitType(u, UNIT_TYPE_FLYING)
				let data = (u.getUserData() castTo UnitEntity)
				if IsUnitInGroup(u, affected)
					getDummy().damageTarget(u, getDOT(level), ATTACK_TYPE_PIERCE)
				else if data != null and data instanceof Creep
					GroupAddUnit(affected, u)
					getDummy().damageTarget(u, getBlowDamage(level))
					let upos = data.getPos()
					let ang = pos.angleTo2d(upos)
					var kb = getKB(level) * min(0.35, vel.lengthSquared()/(16.*16.))
					if data instanceof Boss
						var speedPerc = 0.25 + (data.actor.getMoveSpeed() / 522)
						data.setVel(vec3(ang.cos() * (kb * speedPerc),ang.sin() * (kb * speedPerc),0))
					else
						data.setVel(vec3(ang.cos() * kb,ang.sin() * kb,0))
					addEffect(Other.gryphonridermissiletarget, u.getPos() ).destr()

	ondestroy
		affected.clear()
		DestroyGroup(affected)



