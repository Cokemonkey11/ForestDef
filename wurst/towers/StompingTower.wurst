package StompingTower
    import LinkedListModule
    import Maths
    import TimerUtils
    import Terrain
    real SPEED = 15.
    
    int array basetype
    int array dummytype
    
    public class StompingTower
        use LinkedListModule
        unit base  //tower (selects targets)
        unit dummy //tauren
        real targetX
        real targetY
        boolean before //stomp
        boolean animbegun //start the stomp animation
        timer tim //does the loop
        
        construct  (unit u, int level)
            base = u
            dummy = CreateUnit(GetOwningPlayer(base),dummytype[level],GetUnitX(base),GetUnitY(base),270.)
            UnitAddAbility( dummy, 'Amrf')
            UnitRemoveAbility(dummy, 'Amrf')
            setdummyFlyHeight(190.)//-getTerrainZ(u.getX(), u.getY()))
            SetUnitX(dummy,GetUnitX(base))
            SetUnitY(dummy,GetUnitY(base))

        function registerTarget(unit u)
            targetX = GetUnitX(u)
            targetY = GetUnitY(u)
            animbegun = false
            PauseUnit(base,true)
            tim = getTimer()
            tim.setData(this castTo int)
            tim.startPeriodic(0.03125,function attackJump)
            print("timer set")
            SetUnitFacing(dummy, angleBetweenCoordsD(GetUnitX(base),GetUnitY(base),targetX,targetY))
            
        function setdummyFlyHeight(real height)
            SetUnitFlyHeight(dummy, height-getTerrainZ(dummy.getX(),dummy.getY()),0.)
            print(height.toString()+" - "+ getTerrainZ(dummy.getX(),dummy.getY()).toString()+" = "+(height-getTerrainZ(dummy.getX(),dummy.getY())).toString())
        
        function turnBack()
            timer temptimer = getTimer()
            temptimer.setData(this castTo int)
            temptimer.start(0.5,function afterDelay)

        function filter() returns boolean
            return ( IsPlayerAlly(GetOwningPlayer(dummy), GetOwningPlayer(GetFilterUnit())) == true ) 
            
    function afterDelay()
        StompingTower root = GetExpiredTimer().getData() castTo StompingTower
        DestroyTimer(GetExpiredTimer())
        root.tim = getTimer()
        root.tim.setData(root castTo int)
        root.tim.startPeriodic(0.03125,function backingJump)
        SetUnitFacing(root.dummy, angleBetweenCoordsD(GetUnitX(root.dummy),GetUnitY(root.dummy),GetUnitX(root.base),GetUnitY(root.base)))
                    
    function attackJump()
        StompingTower root = GetExpiredTimer().getData() castTo StompingTower
        real distancetarget = distanceBetweenCoords(GetUnitX(root.base),GetUnitY(root.base),root.targetX,root.targetY)
        real distancedummy = distanceBetweenCoords(GetUnitX(root.base),GetUnitY(root.base),GetUnitX(root.dummy),GetUnitY(root.dummy))
        real angle = angleBetweenCoordsD(GetUnitX(root.base),GetUnitY(root.base),root.targetX,root.targetY)
        if  distancetarget >= distancedummy
            root.setdummyFlyHeight(getParabolaHeight(200.-getTerrainZ(GetUnitX(root.base),GetUnitY(root.base)),getTerrainZ(root.targetX,root.targetY),300.,distancetarget,distancedummy))
            SetUnitX(root.dummy,polarProjectionXD(GetUnitX(root.dummy),SPEED,angle))
            SetUnitY(root.dummy,polarProjectionYD(GetUnitY(root.dummy),SPEED,angle))
            if (not root.animbegun) and (distancetarget-distancedummy <= SPEED*22)
                root.animbegun = true
                SetUnitAnimation(root.dummy,"attack slam")
        else
            print("ending jump")
            root.setdummyFlyHeight(0.)
            IssueImmediateOrder(root.dummy, "stomp")
   //         TerrainDeformCrater(GetUnitX(root.dummy),GetUnitY(root.dummy),160,50,20,false)
 //           DestroyEffect(AddSpecialEffect( "Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl" ,GetUnitX(root.dummy),GetUnitY(root.dummy)))
// frotty's work ForGroup( GetUnitsInRangeOfLocMatching(160.00, GetUnitLoc(root.dummy),function root.filter), function stompDamage )
            root.turnBack()
            DestroyTimer(GetExpiredTimer())
                
    function backingJump()
        StompingTower root = GetExpiredTimer().getData() castTo StompingTower
        real distancebase = distanceBetweenCoords(root.targetX,root.targetY,GetUnitX(root.base),GetUnitY(root.base))
        real distancedummy = distanceBetweenCoords(root.targetX,root.targetY,GetUnitX(root.dummy),GetUnitY(root.dummy))
        real angle = angleBetweenCoordsD(root.targetX,root.targetY,GetUnitX(root.base),GetUnitY(root.base))
        if distancebase >= distancedummy
            SetUnitX(root.dummy,polarProjectionXD(GetUnitX(root.dummy),SPEED,angle))
            SetUnitY(root.dummy,polarProjectionYD(GetUnitY(root.dummy),SPEED,angle))
            root.setdummyFlyHeight(getParabolaHeight(getTerrainZ(root.targetX,root.targetY),200.-getTerrainZ(GetUnitX(root.base),GetUnitY(root.base)),200.,distancebase,distancedummy))
        else
            SetUnitX(root.dummy,GetUnitX(root.base))
            SetUnitY(root.dummy,GetUnitY(root.base))
            root.setdummyFlyHeight(200.)
            PauseUnit(root.base,false)
            DestroyTimer(GetExpiredTimer())

    function stompDamage()
        KillUnit(GetEnumUnit())
            
    function registerStompingTower()
        int i = 0
        while basetype[i] != 0
            if basetype[i] == GetUnitTypeId(GetTriggerUnit() )
                StompingTower tower = new StompingTower(GetTriggerUnit(),i)
            i++


    function setTarget()
        StompingTower tower = StompingTower.getFirst()
        while tower != null
            if GetAttacker() == tower.base
                tower.registerTarget( GetTriggerUnit())
                print("sent")
                tower = tower.next
            else
                tower = tower.next
    
    function getParabolaHeight(real y0, real y1, real h, real d, real x) returns real
        real a = (2*(y0+y1)-4*h)/(d*d)
        real b = (y1-y0-a*d*d)/d
        return a*x*x + b*x + y0
        
    public function initStompingTower()
        trigger build = CreateTrigger()
        TriggerRegisterAnyUnitEventBJ(build, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
        TriggerAddAction(build,function registerStompingTower)
        
        trigger attack = CreateTrigger()
        TriggerRegisterAnyUnitEventBJ(attack, EVENT_PLAYER_UNIT_ATTACKED )
        TriggerAddAction(attack,function setTarget)
        
        basetype[0] = 'h01H'
        dummytype[0] = 'h01G'

endpackage