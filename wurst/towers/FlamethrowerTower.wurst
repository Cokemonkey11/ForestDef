package FlamethrowerTower
import Tower
import Terrain
import Projectile
import TempGroups

public constant string FX_PATH = "Abilities\\Weapons\\LordofFlameMissile\\LordofFlameMissile.mdl"
public constant real AOE_RADIUS = 48.
public constant int FLAMETHROWER_ID = 'h01C'

public class FlamethrowerTower extends Tower
	int level = 1
	construct(Tower t)
		super(t)
		
	override function onAttack(UnitEntity ud)
		for i = 0 to level
			new FlameMissile(pos.withTerrainZ(32),ud.getPos().toVec2(), 6., owner, level)
			
			
	override function onUpgrade()
		level++
			
function isUnitTargetable(unit u) returns boolean
	return not IsUnitType(u, UNIT_TYPE_DEAD) and not IsUnitType(u, UNIT_TYPE_MAGIC_IMMUNE) and not IsUnitType(u, UNIT_TYPE_STRUCTURE) and not IsUnitType(u, UNIT_TYPE_FLYING)
		
class FlameMissile extends Projectile
	int level
	group affected
	
	construct(vec3 pos, vec2 target, real speed, player owner, int level)
		super( pos, AOE_RADIUS, owner, (pos.angleTo2d(target).radians + GetRandomReal(-0.15,0.15)).asAngleRadians(), FX_PATH )
		setSpeed(speed + GetRandomReal(-1.5, 1.5))
		setRanged(610)
		setAcc(1.015 + GetRandomReal(-0.005, 0.005))
		fx.recolor(colorA(GetRandomInt(0,255),GetRandomInt(0,255),GetRandomInt(0,255),255))
		fx.setScale(0.75)
		this.level = level


	override function update()
		GroupEnumUnitsInRange(ENUM_GROUP, pos.x, pos.y, AOE_RADIUS, null)
		for u in ENUM_GROUP
			if IsUnitEnemy(u, owner) and isUnitTargetable(u)
				UnitDamageTarget(getDummy(), u, 4 + 3.5 * level, false, false, ATTACK_TYPE_PIERCE, DAMAGE_TYPE_NORMAL, null)
		ENUM_GROUP.clear()
		super.update()
		
	
