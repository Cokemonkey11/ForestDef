package TrooperTower
import Tower
import public Entity

constant DUMMY_DIST = 15.
public constant TOWER_TROOPER_ID = 'h01E'
constant TROOP_ID = 'h01F'

trigger tupgradestart
trigger tupgradecancel

public class Troop extends UnitEntity

	construct (vec2 pos, player owner)
		super(createUnit(owner, TROOP_ID, pos, angle(0)))
		actor.addAbility(LOCUST_ID)
		actor.setPropWindow(0.)
		
	function setStaticPos(vec3 pos)
		this.pos = pos
		actor.setXYZ(this.pos)
		
	ondestroy
		if not IsUnitHidden(actor)
			SetUnitExploded(actor, true)
		actor.setEntity(null)
		SetUnitFlyHeight(actor, 0.,0.) //on the ground...
		KillUnit(actor)

public class TrooperTower extends Tower
	LinkedList<Troop> troops = new LinkedList<Troop>()
	int level = 0
	
	construct (Tower t)
		super(t)
		addTrooper()
		addTrooper()
		addTrooper()
		tupgradestart.registerUnitEvent(actor,EVENT_UNIT_UPGRADE_START)
		tupgradecancel.registerUnitEvent(actor,EVENT_UNIT_UPGRADE_CANCEL)
			
	override function onUpgrade()
		level++
		addTrooper()
		actor.issueImmediateOrder("stop")
	
	override function onAttack(UnitEntity target)
		for troop in troops
			troop.actor.issueTargetOrder("smart", target.actor)
			
	static function onUpgradeStart()
		var e = GetTriggerUnit().getUserData()
		if e != 0
			TrooperTower t = e castTo TrooperTower
			for troop in t.troops
				troop.actor.setVertexColor(COLOR_BLACK)
				troop.actor.pause()
			
	static function onUpgradeCancel()
		var e = GetTriggerUnit().getUserData()
		if e != 0
			TrooperTower t = e castTo TrooperTower
			for troop in t.troops
				troop.actor.setVertexColor(COLOR_WHITE)
				troop.actor.unpause()
				troop.setStaticPos(troop.pos)
			
	function addTrooper()
		troops.add(new Troop(pos.toVec2(), owner))
		// Make into circle
		let angleV = 360. / troops.size()
		var angleD = 0.
		let tz = 160.
		for troop in troops
			let tPos = pos.toVec2().polarOffset(angleD.asAngleDegrees(), DUMMY_DIST)
			troop.actor..setVertexColor(COLOR_WHITE)
			..unpause()
			..setFacing(angleD.asAngleDegrees())
			..addAbility(LOCUST_ID)
			troop.setStaticPos(tPos.withZ(tz))
			angleD += angleV
		
	override function pause()
		super.pause()
		for troop in this.troops
			troop.actor.pause()

	override function unpause()
		super.unpause()
		for troop in this.troops
			troop.actor.unpause()

	ondestroy
		for trooper in troops
			trooper.terminate()
		destroy troops
	
			
public function initTrooperTower()
	tupgradestart = CreateTrigger()..addAction(function TrooperTower.onUpgradeStart)
	tupgradecancel = CreateTrigger()..addAction(function TrooperTower.onUpgradeCancel)