package TrooperTower
import Tower
import public Entity

constant DUMMY_DIST = 15.
public constant TOWER_TROOPER_ID = 'h01E'
constant TROOP_ID = 'h01F'
constant TROOPG_ID = 'h02D'

trigger tupgradestart
trigger tupgradecancel


public class TroopGround extends UnitEntity

	construct (vec3 pos, player owner)
		super(createUnitZ(owner, TROOPG_ID, pos, angle(0)))
		setXY(pos)
		
public class Troop extends UnitEntity

	construct (vec3 pos, player owner)
		super(createUnitZ(owner, TROOP_ID, pos, angle(0)))
		deactivate()
		actor.addAbility(LOCUST_ID)
		actor.setPropWindow(0 .fromDeg())
		
	ondestroy
		if not IsUnitHidden(actor)
			SetUnitExploded(actor, true)
		actor.setEntity(null)
		KillUnit(actor)
		actor.remove()

public class TrooperTower extends Tower
	let troops = new LinkedList<Troop>()
	int level = 0
	
	construct (Tower t)
		super(t)
		addTrooper()
		addTrooper()
		addTrooper()
		tupgradestart.registerUnitEvent(actor,EVENT_UNIT_UPGRADE_START)
		tupgradecancel.registerUnitEvent(actor,EVENT_UNIT_UPGRADE_CANCEL)
		EventListener.add(actor, EVENT_PLAYER_UNIT_DEATH) ->
			terminate()
			
	override function onUpgrade()
		level++
		addTrooper()
		actor.issueImmediateOrder("stop")
	
	override function onAttack(UnitEntity target)
		for troop in troops
			troop.actor.issueTargetOrder("smart", target.actor)
			
	static function onUpgradeStart()
		let t = GetTriggerUnit().getEntity() castTo TrooperTower
		for troop in t.troops
			troop.actor.setVertexColor(COLOR_BLACK)
			troop.actor.pause()
			
	static function onUpgradeCancel()
		let t = GetTriggerUnit().getEntity() castTo TrooperTower
		for troop in t.troops
			troop.actor.setVertexColor(COLOR_WHITE)
			troop.actor.unpause()
			troop.setXY(troop.pos)
			
	function addTrooper()
		troops.add(new Troop(pos, owner))
		// Make into circle
		let angleV = 360. / troops.size()
		var angleD = 0.
		for troop in troops
			let tpos = getPos().toVec2().polarOffset(angleD.asAngleDegrees(), DUMMY_DIST).withZ(getTerrainZ(pos.toVec2()) + 160)
			troop.actor..setVertexColor(COLOR_WHITE)
			..unpause()
			..setFacing(angleD.asAngleDegrees())
			..addAbility(LOCUST_ID)
			troop.setXY(tpos)
			angleD += angleV
		
	override function pause()
		super.pause()
		for troop in this.troops
			troop.actor.pause()

	override function unpause()
		super.unpause()
		for troop in this.troops
			troop.actor.unpause()

	ondestroy
		for trooper in troops
			new TroopGround(trooper.pos, trooper.owner)
			trooper.terminate()
		destroy troops
	
			
public function initTrooperTower()
	tupgradestart = CreateTrigger()..addAction(function TrooperTower.onUpgradeStart)
	tupgradecancel = CreateTrigger()..addAction(function TrooperTower.onUpgradeCancel)