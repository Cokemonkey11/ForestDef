package ArtilleryTower
import Tower
import TempGroups
import Projectile
import Terrain
import PhysicsConstants

constant int MISSILE_ID = 'h01S'
constant real MISSILE_SPEED = 1000 * tick
public constant int ART_TOWER_ID = 'h01O'
constant int SPELL_ID = 'A01T'
trigger castTrigger

public class ArtilleryTower extends Tower
	int level
	
	construct(Tower t)
		super(t)
		castTrigger.registerUnitEvent(actor, EVENT_UNIT_SPELL_EFFECT)
		level = 0
		actor.setPropWindow(0.)
		
	override function onUpgrade()
		level ++
		
class ArtilleryMissile extends Projectile
	real damage
	
	construct(vec3 pos, real radius, player owner, angle targetangle, real damage)
		super( pos, radius, owner, targetangle, "Abilities\\Weapons\\CannonTowerMissile\\CannonTowerMissile.mdl")
		setSpeed(MISSILE_SPEED + GetRandomReal(-10,6))
		setZAngle((-45).asAngleDegrees())
		vel.z = -getSpeed()
		this.damage = damage
	
	
	override function update()
		if pos.z < getTerrainZ(pos.x, pos.y)
			done = true
			return			
		super.update()
		
	ondestroy
		GroupEnumUnitsInRange(ENUM_GROUP, pos.x, pos.y, radius, null)
		for u in ENUM_GROUP
			if isUnitTargetable(u) and IsUnitEnemy(u, owner)
				UnitDamageTarget(getDummy(), u, damage, false, false, ATTACK_TYPE_PIERCE, DAMAGE_TYPE_NORMAL, null)	
		ENUM_GROUP.clear()
		addEffect("Abilities\\Weapons\\FragDriller\\FragDriller.mdl", pos).destr()
	
function isUnitTargetable(unit u) returns boolean
	return not IsUnitType(u, UNIT_TYPE_DEAD) and not IsUnitType(u, UNIT_TYPE_MAGIC_IMMUNE) and not IsUnitType(u, UNIT_TYPE_STRUCTURE)
	
	
function checkSpell()
		if GetSpellAbilityId() == SPELL_ID
			ArtilleryTower at = GetTriggerUnit().getUserData() castTo ArtilleryTower
			vec2 target = vec2(GetSpellTargetX(),GetSpellTargetY())
			angle a = at.pos.angleTo2d(target)
			for int i = 0 to 5+at.level*3
				real x = GetRandomReal(GetSpellTargetX()-200.,GetSpellTargetX()+200.)
				real y = GetRandomReal(GetSpellTargetY()-200.,GetSpellTargetY()+200.)
				new ArtilleryMissile(vec3(polarProjectionX(x,-1000, a), polarProjectionY(y,-1000,a), 1000.),
									250.+at.level*50, at.owner, a, 350.+(at.level*100))

public function initArtilleryTower()
	castTrigger = CreateTrigger()
	castTrigger.addAction(function checkSpell)

