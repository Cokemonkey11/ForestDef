package ArtilleryTower
import Tower
import TempGroups

constant int MISSILE_ID = 'h01S'
constant real MISSILE_SPEED = 1000. * ANIMATION_PERIOD
public constant int ART_TOWER_ID = 'h01O'
constant int SPELL_ID = 'A01T'
trigger castTrigger

public class ArtilleryTower extends Tower
	int level
	
	construct(Tower t)
		super(t)
		castTrigger.registerUnitEvent(actor, EVENT_UNIT_SPELL_EFFECT)
		level = 0
		
	override function onUpgrade()
		level ++
		
class ArtilleryMissile extends UnitEntity
	angle ang
	real speed
	real damage
	real aoeradius
	
	construct(unit missile, angle targetangle, real radius, real damage)
		super( vec3(missile.getX(),missile.getY(), 1000.),missile)
		speed = GetRandomReal(MISSILE_SPEED-10,MISSILE_SPEED+10)
		ang = targetangle
		// = CreateUnit(caster.getOwner(), MISSILE_ID,polarProjectionX(x,-dista, angler), polarProjectionY(y,-dista,angler), angler)
		this.damage = damage// = 350.+(level*100)
		aoeradius = radius
	
	
	override function update()
		if GetUnitFlyHeight(actor) > speed
			pos = vec3(polarProjectionX(pos.x,speed,ang),polarProjectionY(pos.y,speed,ang),GetUnitFlyHeight(actor)-speed)
			actor.setPos( polarProjectionX(pos.x,speed,ang) , polarProjectionY(pos.y,speed,ang))
			SetUnitFlyHeight(actor, GetUnitFlyHeight(actor)-speed, 0)
		else
			destroy(this)
		
	ondestroy
		GroupEnumUnitsInRange(ENUM_GROUP, pos.x, pos.y, aoeradius, null)
		for u in ENUM_GROUP
			if isUnitTargetable(u) and IsUnitEnemy(u, owner)
				let ud = u.getUserData() castTo UnitEntity
				UnitDamageTarget(actor, u, damage, false, false, ATTACK_TYPE_PIERCE, DAMAGE_TYPE_NORMAL, null)		
		KillUnit(actor)
	
function isUnitTargetable(unit u) returns boolean
	return not IsUnitType(u, UNIT_TYPE_DEAD) and not IsUnitType(u, UNIT_TYPE_MAGIC_IMMUNE) and not IsUnitType(u, UNIT_TYPE_STRUCTURE)
	
	
function checkSpell()
		if GetSpellAbilityId() == SPELL_ID
			ArtilleryTower at = GetTriggerUnit().getUserData() castTo ArtilleryTower
			vec2 target = vec2(GetSpellTargetX(),GetSpellTargetY())
			angle a = angleBetweenCoords(at.pos.x,at.pos.y,target.x,target.y)
			for int i = 0 to 5+at.level*3
				real x = GetRandomReal(GetSpellTargetX()-200.,GetSpellTargetX()+200.)
				real y = GetRandomReal(GetSpellTargetY()-200.,GetSpellTargetY()+200.)
				new ArtilleryMissile(CreateUnit(at.owner, MISSILE_ID,polarProjectionX(x,-1000, a), polarProjectionY(y,-1000,a), a.degrees())/*
				*/, a, 250.+at.level*50, 350.+(at.level*100))

public function initArtilleryTower()
	castTrigger = CreateTrigger()
	castTrigger.addAction(function checkSpell)

endpackage
