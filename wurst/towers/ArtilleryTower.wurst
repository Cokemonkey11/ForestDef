package ArtilleryTower
import Tower
import Projectile
import ClosureTimers
import Assets

constant real MISSILE_SPEED = 1000 * ANIMATION_PERIOD
public constant int ART_TOWER_ID = 'h01O'
constant int SPELL_ID = 'A01T'
trigger castTrigger

public class ArtilleryTower extends Tower
	int level = 1
	
	construct(Tower t)
		super(t)
		castTrigger.registerUnitEvent(actor, EVENT_UNIT_SPELL_EFFECT)
		actor.setPropWindow(0.)
		actor..addAbility(SPELL_ID)
		
	override function onUpgrade()
		level++
		actor..addAbility(SPELL_ID)..setAbilityLevel(SPELL_ID, level)
		..setPropWindow(0.)
		..issueImmediateOrderById(OrderId("stop"))
		
class ArtilleryMissile extends Projectile
	real damage
	
	construct(vec3 pos, real radius, player owner, angle targetangle, real damage)
		super( pos, radius, owner, targetangle, Abilities.cannonTowerMissile)
		setSpeed(MISSILE_SPEED + GetRandomReal(-10,6))
		setZAngle((-45).asAngleDegrees())
		vel.z = -getSpeed()
		this.damage = damage
	
	
	override function update()
		if pos.z < getTerrainZ(pos.x, pos.y)
			terminate()
			return			
		super.update()
		
	ondestroy
		GroupEnumUnitsInRange(ENUM_GROUP, pos.x, pos.y, radius, null)
		for u from ENUM_GROUP
			if isUnitTargetable(u) and IsUnitEnemy(u, owner)
				getDummy().damageTarget(u, damage, ATTACK_TYPE_SIEGE)	
		addEffect(Abilities.fragDriller, pos).destr()
	
function isUnitTargetable(unit u) returns boolean
	return not IsUnitType(u, UNIT_TYPE_DEAD) and not IsUnitType(u, UNIT_TYPE_MAGIC_IMMUNE) and not IsUnitType(u, UNIT_TYPE_STRUCTURE)
	
	
function checkSpell()
	if GetSpellAbilityId() == SPELL_ID
		ArtilleryTower at = GetTriggerUnit().getUserData() castTo ArtilleryTower
		vec2 target = vec2(GetSpellTargetX(),GetSpellTargetY())
		angle a = at.getPos().angleTo2d(target)
		if at.pos.distanceTo2d(target) > 2950
			nullTimer() -> 
				at.actor..issueImmediateOrderById(OrderId("stop"))
				..removeAbility(SPELL_ID).addAbility(SPELL_ID)

		for int i = 0 to 3+at.level*3
			let startPos = vec2(GetRandomReal(GetSpellTargetX()-200.,GetSpellTargetX()+200.), GetRandomReal(GetSpellTargetY()-200.,GetSpellTargetY()+200.))
			new ArtilleryMissile(startPos.polarOffset(a, -1000).withZ(1000.), 50.+at.level*50, at.owner, a, 250.+(at.level*225))

public function initArtilleryTower()
	castTrigger = CreateTrigger()
	castTrigger.addAction(function checkSpell)

